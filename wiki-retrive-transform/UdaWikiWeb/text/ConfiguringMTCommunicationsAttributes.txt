%META:TOPICPARENT{name="InstallConfigODBC"}%

=<code>[Communications]</code> attributes on Multi-Tier client and server=

Settings in the <code>[Communications]</code> stanza of the <nop>OpenLink Rulebook (<code>oplrqb.ini</code>) correspond roughly to settings in the <code>[Communications]</code> stanza of the <code>odbc.ini</code> file on Unix, Linux, and Mac OS X; the <code><nop>OpenLink Preferences PPC</code> file on Mac OS 9; and the Windows Registry key section <code><nowiki>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\OPENLINK.INI\Communications</nowiki></code>.  These settings apply only to <nop>OpenLink Multi-Tier connections, and have no effect on <nop>OpenLink Single-Tier connections.

On Unix, Linux, and Mac OS X, the best way to adjust these settings is through the HTTP-based <code><nop>OpenLink ODBC Administrator</code> or<code> Request Broker Admin Assistant</code>.  On Windows, the <code><nop>OpenLink Client Configuration Utility</code> (<code>oplcfg32.exe</code>) is best used.  Mac OS 9 users have the <code><nop>OpenLink Generic ODBC PPC</code> control panel for this purpose.

Please read the table below carefully before adjusting these settings from their defaults.  <nop>OpenLink has set default values which are optimal for most situations, and adjusting these values without understanding them can disrupt data access.
<table border="2" width="100%" cellspacing="1" cellpadding="5" frame="box" rules="all" align="center">
	<tr>
		<td align="right" width="10%">
			<b>Attribute Name</b>
		</td>
		<td align="center" width="44%">
			<b>Client Side<br /><code>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\OPENLINK.INI</code>, <br /><code>ODBC&#160;Preferences&#160;PPC</code>, <br /><code>odbc.ini</code>, or <code>$ODBCINI</code></b>
		</td>
		<td align="center" width="44%">
			<b>Server Side<br />Broker Rulebook<br /><code>oplrqb.ini</code></b>
		</td>
	</tr>
	<tr>
		<td align="right">
			<code><b><nop>SendSize</b></code>
		</td>
		<td>
			The maximum message chunk size (in bytes) the <nop>OpenLink ODBC client will send to the Broker or Database Agent. <i>This must match the Rulebook parameter <code><nop>ReceiveSize</code>.</i><br /><br />Shown as the <code><i><b>Send buffer size</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 4096.
		</td>
		<td>
			The maximum message chunk size (in bytes) the Broker or Database Agent will send to the client. <i>This must match the client parameter <code><nop>ReceiveSize</code>.</i><br /><br />Shown as the <code><i><b>Send buffer size</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 16000.
		</td>
	</tr>
	<tr>
		<td align="right">
			<code><b><nop>ReceiveSize</b></code>
		</td>
		<td>
			The maximum message chunk size (in bytes) the <nop>OpenLink ODBC client will accept. <i>This must match the Rulebook parameter <code><nop>SendSize</code>.</i><br /><br />Shown as the <code><i><b>Receive buffer size</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 16000.
		</td>
		<td>
			The maximum message chunk size (in bytes) the Broker or Database Agent will accept. <i>This must match the client parameter <code><nop>SendSize</code>.</i><br /><br />Shown as the <code><i><b>Receive buffer size</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 4096.
		</td>
	</tr>
	<tr>
		<td align="right">
			<code><b><nop>BrokerTimeout</b></code>
		</td>
		<td>
			The number of seconds the client driver will wait for a response from the Request Broker, before timing out. <code>60</code> (one minute) is usually more than sufficient.<br /><br />Shown as the <code><i><b>Broker contact timeout</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 30.
		</td>
		<td>
			The number of seconds local <nop>OpenLink executables which communicate directly with the Request Broker (e.g., <code>oplshut</code>) will wait for a response, before timing out. Again, <code>60</code> (one minute) should be sufficient.<br /><br />Shown as the <code><i><b>Broker contact timeout</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 30.
		</td>
	</tr>
	<tr>
		<td align="right">
			<code><b><nop>ReceiveTimeout</b></code>
		</td>
		<td>
			The number of seconds the client driver will wait for the first results of a query. This should generally be set 10-25% longer than the anticipated DBMS execution time of the longest SQL query. It is not generally recommended that this parameter exceed 3600 (one hour), unless SQL queries are known to take longer.<br /><br />Shown as the <code><i><b>Agent contact timeout</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 120.
		</td>
		<td>
			The number of seconds the Broker will wait for an initial response from a Database Agent, when starting a new connection, before the Broker launches a new instance of that Agent. This does not apply when you have the Agent <code>Reuse</code> value set to <code>Never</code>. It is not recommended this value be less than 10, and it should never be more than half of that Rulebook's <code><nop>BrokerTimeout</code>.<br /><br />Shown as the <code><i><b>Agent initialization timeout</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 10.
		</td>
	</tr>
	<tr>
		<td align="right">
			<code><b><nop>RetryTimeout</b></code>
		</td>
		<td>
			The number of seconds the ODBC client will wait before re-attempting a timed-out call to the server, either Broker or Agent. After each timeout, this value is doubled, with a maximum equal to the client's <code><nop>BrokerTimeout</code> during initial connection establishment, and equal to the client's <code><nop>ReceiveTimeout</code> during an active session. An initial setting of 5 is generally recommended.<br /><br />Shown as the <code><i><b>Agent retry timeout</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 5.
		</td>
		<td>
			The number of seconds the Broker will wait before re-attempting to contact a Database Agent which has failed to respond. After each timeout, this value is doubled, with a maximum of 30. An initial setting of 5 is generally recommended.<br /><br />Shown as the <code><i><b>Client retry timeout</b></i></code> in the HTTP-based configuration tools. <br /><br />Default is 5.
		</td>
	</tr>
</table>
