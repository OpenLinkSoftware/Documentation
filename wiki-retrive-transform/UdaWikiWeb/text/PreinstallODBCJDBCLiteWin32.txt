%META:TOPICPARENT{name="SingleTierLitePreinstallWin32"}%
= Pre-Installation Requirements for the Single-Tier "Lite" Edition ODBC Driver for JDBC Data Sources (a/k/a the ODBC-to-JDBC Bridge Driver), for Windows =

%TOC%

== DBMS Requirements==

* Your target data source must be SQL compliant. 
* You must have all information necessary to configure a JDBC connection to the data source.


== Software Requirements ==

* You need to know whether the client application is [[Win32vs64OdbcAdmin|32-bit or 64-bit]]. The Single-Tier "Lite" Edition ODBC Driver for JDBC Data Sources must match the bit format of the client application.
* You must have JDBC drivers that connect to the target data source. The client portion of these drivers must be installed on the same machine as the Single-Tier ("Lite" Edition) ODBC Driver for JDBC Data Sources.
* You must have a JVM (Java Virtual Machine) that is compatible with the Single-Tier "Lite" Edition ODBC Driver for JDBC Data Sources --
#* Generally, the latest JVM from http://java.com/ is the best choice.
#* If using the 32-bit ODBC Driver, you **must** have the 32-bit JVM, even on 64-bit Windows.
#* If using the 64-bit ODBC Driver, you **must** have the 64-bit JVM, which is automatically presented only to 64-bit IE but may be manually selected for download using any browser.
#* It is generally best to **install both 32-bit JVM and 64-bit JVM** on 64-bit Windows.

== Configuration Requirements ==

* You must know the driver class name of your JDBC driver.
* You must know the full details of the JDBC connection URL that connects to your target JDBC Data Source.
* The path to the directory containing the {{{jvm.dll}}} must be included in your {{{%PATH%}}} Environment Variable. To do this, proceed as follows --
*# Use the Windows Explorer's **Search** feature to locate the {{{jvm.dll}}}, and make note of the directory in which it is found.  If more than one is found, work with the most recent.
*# **Start** -> **Control Panel** -> **System**
*# Click to the **Advanced** tab.
*# Click the **Environment Variables** button.
*# In the **System variables** pane, locate and select the environment variable named **{{{PATH}}}**.
*# Click **Edit** which will bring up a new dialog containing **Variable name** and **Variable value** fields.
*# Add the directory path from step #1 to the **back end** of the already present "Variable value" field, taking care not to delete anything that is already present.  Directory paths are separated by a semi-colon ';', so you should usually put a semicolon before the path you're adding.  Typically, the new text will resemble --
{{{
;C:/Program Files/Java/jre1.6.0_03/bin/client
}}}
*# Finally, click **OK** to accept the changes.
* Your Windows environment must be configured to enable connections using the intended JDBC driver. <nop>OpenLink Product Support can provide minimal assistance in this area.  Particularly, the full path to the JDBC driver {{{.jar}}} file must be included in your {{{%CLASSPATH%}}} Environment Variable. To do this, proceed as follows --
*# Locate the JDBC DRiver {{{.jar}}} file, and make note of the the full path to that file.
*# **Start** -> **Control Panel** -> **System**
*# Click to the **Advanced** tab.
*# Click the **Environment Variables** button.
*# In the **System variables** pane, locate and select the environment variable named **{{{CLASSPATH}}}**.
*# Click **Edit** which will bring up a new dialog containing **Variable name** and **Variable value** fields.
*# Add the full file path from step #1 to the **start** of the already present "Variable value" field, taking care not to delete anything that is already present.  Directory paths are separated by a semi-colon ';', so you should usually put a semicolon after the path you're adding.  Typically, the new text will resemble --
{{{
C:/Program Files/JDBC for DBMS/lib/your_driver.jar;
}}}
*# Finally, click **OK** to accept the changes.


== Next... ==
[[InstallODBCJDBCLiteWin32|Proceed to Installation Documentation]].
