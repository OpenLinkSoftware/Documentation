%META:TOPICPARENT{name="ErrorMessagesS"}%
==Error Messages (S)==

[[UDAErrorMessages|A]] [[ErrorMessagesB|B]] [[ErrorMessagesC|C]] [[ErrorMessagesD|D]] [[ErrorMessagesE|E]] [[ErrorMessagesF|F]] [[ErrorMessagesG|G]] [[ErrorMessagesH|H]] [[ErrorMessagesI|I]] [[ErrorMessagesJ|J]] [[ErrorMessagesK|K]] [[ErrorMessagesL|L]] [[ErrorMessagesM|M]] [[ErrorMessagesN|N]] [[ErrorMessagesO|O]] [[ErrorMessagesP|P]] [[ErrorMessagesQ|Q]] [[ErrorMessagesR|R]] [[ErrorMessagesS|S]] [[ErrorMessagesT|T]] [[ErrorMessagesU|U]] [[ErrorMessagesV|V]] [[ErrorMessagesW|W]] [[ErrorMessagesX|X]] [[ErrorMessagesY|Y]] [[ErrorMessagesZ|Z]] [[ErrorMessagesSymbols|#]]

    
===SQLINTEGER undeclared===


"'SQLINTEGER' undeclared" errors are associated with PHP/<nop>OpenLink compilation. To resolve this error, take the following action:


1. Review your error output. For instance:

{{{
php_odbc.c: In function `odbc_column_lengths':
php_odbc.c:606: `SQLINTEGER' undeclared (first use in this function)
php_odbc.c:606: (Each undeclared identifier is reported only once
php_odbc.c:606: for each function it appears in.)
php_odbc.c:606: parse error before `len'
php_odbc.c:634: `len' undeclared (first use in this function)
make[3]: *** [php_odbc.lo] Error 1
}}}

2. Determine on which line the parse error occurs. In this instance, the parse error is associated with line 606.

3. Use a text editor to open your /ext/odbc/php_odbc.h file.

4. Locate the problem line.

5. Replace reference to "SQLINTEGER len;" with "SDWORD len;".

6. Recompile and test.