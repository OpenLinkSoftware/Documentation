%META:TOPICPARENT{name="MultiTierInstallServerQuickstartUnix"}%

==<nop>OpenLink Multi-Tier Server-Side Components (Unix) for Progress==

===Aims and Intentions ===

This guide is intended to enable competent system administrators to install and configure <nop>OpenLink Multi-tier client side components on UNIX-like operating systems (e.g., Solaris, AIX, HP-UX, Linux, <nop>FreeBSD) in a few steps as possible.

This guide does not explain any of the non-pertinent features encountered along the way. Such explanations may be found in the full documentation.


===Prerequisites===

* You **MUST** be proficient in using a Unix shell.  {{{bash}}} is preferred; {{{sh}}}, {{{zsh}}}, {{{ksh}}}, {{{csh}}}, or {{{tcsh}}} are all usable.
* You **MUST** be proficient in using a Unix editor such as {{{vi}}} or {{{emacs}}}.
* You **MUST** have read and execute permissions on a full installation of the Progress or OpenEdge database, or on an installation of Progress® Client Networking (for SQL-89 Agents) or Progress® SQL-92 Client Access (for SQL-92 Agents).

===Installation===

# Log onto the machine and create a suitable <nop>OpenLink installation directory ({{{$OPENLINK_INSTALL}}}), such as {{{/opt/openlink/}}}.
# Copy all OpenLink component installation files to {{{$OPENLINK_INSTALL}}}.  At a minimum, these will include the <nop>OpenLink Request Broker ({{{oplrqb.tgz}}}), an <nop>OpenLink Database Agent for your respective target database ({{{e.g., prs100_mv.tgz}}}), and an license file (oplrqb.lic).
# Install using the "install.sh" shell script --
{{{
#sh install.sh
}}}
# You should take care to enter correct information when prompted pertaining to ports, passwords, etc., and write these down for future use.
# The installation should finish without error.

===Licensing===

<nop>OpenLink Multi-Tier licensing is handled on the server side so you should place the <nop>OpenLink license file ({{{oplrqb.lic}}}) in the {{{$OPENLINK_INSTALL/bin/}}} directory.

===Configuration===

Progress requires a small amount of additional environmental configuration in the <nop>OpenLink Request Broker session rulebook ({{{$OPENLINK_INSTALL/bin/oplrqb.ini}}}) --

# Open the rulebook file, {{{$OPENLINK_INSTALL/bin/oplrqb.ini}}}, with a suitable text editor such as vi.
# Locate and edit the {{{[Environment xxxxx]}}} section corresponding to your target database so as to ensure that any relevant environment variables pertaining you your system and target database are correct. //**NOTE:** You may need to consult with your database administrator to verify these.// The following example shows environment sections for a Progress 9 SQL-89 / 4GL agent, and a Progress 10 SQL-92 agent --
**Progress 9 (SQL-89/4GL)**
{{{
[Environment PROGRESS91E]
DLC                 = /dbs/progress/v9.1e
PROCFG              = /dbs/progress/v9.1e/progress.cfg
;TABLEVIEW           = tableview.dat ; Full path to file generated by setup.p
;TABLEVIEW_QUALIFIER = Y       ; Add owner information to select statement
;INSERT_LOGICAL      = Y       ; Rewrite character TRUE/FALSE to logical
;UPDATE_LOGICAL      = Y       ; Rewrite character TRUE/FALSE to logical
;MIN_FIELD_LEN       =         ; Min length for char field or expression
;MAX_FIELD_LEN       =         ; Max length for expression
;EXPR_PRECISION      = 15      ; Fixed precision for numeric expressions
;EXPR_SCALE          = 2       ; Fixed scale for numeric expressions 
CURSOR_SENSITIVITY  = LOW     ; Set to HIGH after loading oplrvc.sql

[Environment PROGRESS100SQL]
DLC                 = /dbs/progress/v10.0a
PROCFG              = /dbs/progress/v10.0a/progress.cfg
CURSOR_SENSITIVITY  = LOW      ; Set to HIGH after loading oplrvc.sql
LD_LIBRARY_PATH     = /dbs/progress/v10.0a/lib
SHLIB_PATH          = /dbs/progress/v10.0a/lib
LIBPATH             = /dbs/progress/v10.0a/lib
;SQL_CLIENT_CHARSET  = UTF-8    ; Uncomment for Unicode connection
}}}

===Start the <nop>OpenLink Request Broker=== 

It is often best to initially start the Request Broker in (d)ebug mode, to gather the most diagnostic information --
{{{
# cd $OPENLINK_INSTALL
# . ./openlink.sh
# oplrqb -d
OpenLink Request Broker
Version 2.47 as of Tue Jan 08 2008 (Release 6.2 cvsid 00089).
Compiled for Solaris 5.8 (sparc-sun-solaris2.8-32)
Copyright (C) OpenLink Software.  

Registered to OpenLink US Lab - INTERNAL USE ONLY
with product serial number OPL-US-INTERNAL
This is a 5 concurrent users license
restricted to 5 concurrent connections
Issued by OpenLink Software
This license will expire on Thu May 22 01:52:13 2008 GMT

oplrqb: using rulebook /opt/openlink/bin/oplrqb.ini
oplrqb: bound TCP protocol to 0.0.0.0.5000
oplrqb: request broker started by openlink
oplrqb: spawning /opt/openlink/bin/w3config/www_sv www_sv +debug
www_sv: started http://hostname:5000
oplrqb: started persistent www_sv (pid=25896)
oplrqb: ZeroConfig thread started
oplrqb: ZeroConfig registration Oracle 9.2 (oplussol4)
}}}
The <nop>OpenLink Request Broker will take over the terminal session, until terminated by &lt;Ctrl-C&gt; or other means.

Once connections are working, it is best to start without the {{{-d}}} or {{{+debug}}} arguments, to conserve disk space and minimize latency.
{{{
# cd $OPENLINK_INSTALL
# . ./openlink.sh
# oplrqb
}}}

===Testing===

You are now ready to set up and test a client connection.  Please proceed to the relevant [[MultiTierQuickStart|client quick-start guide]] for the chosen operating system.

===Additional Information===

Any changes made to {{{$OPENLINK_INSTALL/bin/oplrqb.ini}}} will not take effect until the Request Broker is re-initialized.
{{{
# cd $OPENLINK_INSTALL
# . ./openlink.sh
# oplshut +reinit
}}}

In some cases, activating settings changes require the Broker to be stopped and restarted.
{{{
# cd $OPENLINK_INSTALL
# . ./openlink.sh
# oplshut -fy
# oplrqb
}}}

To stop a Request Broker running normally --
{{{
# cd $OPENLINK_INSTALL
# . ./openlink.sh
# oplshut +force
}}}