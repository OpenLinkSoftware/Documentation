%META:TOPICPARENT{name="TroubleshootingUDAUsingEvidence"}%
==JDBC Connect Strings==

**Single-Tier JDBC Connection URLs** %BR%

<nop>OpenLink's Single-Tier drivers support JDBC Type 1 connections. Therefore, you need to insure that the URL format follows the JDBC Type 1 URL specification. 

{{{
jdbc:openlink://ODBC[/DSN][/UID][/PWD][/READONLY]
}}}
 
Next,  you must evaluate the specific parameters and values that are passed.  All Single-Tier URLs should begin like this:
 
{{{
jdbc:openlink://ODBC
}}}
 
Then,  they should pass DSN{{{=}}}//functional, local ODBC DSN// followed by /UID{{{=}}}//database username//, /PWD{{{=}}}//database password// and /READONLY{{{=}}}//yes or no// as needed or desired. 

 

**Multi-Tier JDBC Connection URLs**

<nop>OpenLink's Multi-Tier drivers support JDBC Type 1 and JDBC Type 3 connections.  Therefore, you need to insure that the URL format follows the JDBC Type 1 or JDBC Type 3 URL specification. 
 
**Type 1**
{{{
jdbc:openlink://ODBC[/DSN][/UID][/PWD][/READONLY] 
}}}

**Type 3**
{{{
jdbc:openlink://<Hostname>:[portnumber] [/UID] [/PWD] [/READONLY] [/SVT]
		[/APPLICATION] [/FBS|FETCHBUFFERSIZE] [/ENCRYPTED] [/CHARSET] [/UNICODE]
		[/DLF] [/DATABASE] [/OPTIONS] [/DRIVER]
}}}

Next, you must evaluate the specific parameters and values that are passed. All Multi-Tier URLs should begin like this:
 
{{{
jdbc:openlink://<Hostname>:[portnumber]
}}}

Note: Here, hostname pertains to the hostname or IP address of the machine that hosts the <nop>OpenLink Request Broker. Portnumber refers to the TCP port on which the Broker listens. 

Finally, the URL should pass the remaining URL parameters as needed or desired: 

* /UID - Database username. 
	
* /PWD - Database password. 
	
* /READONLY - Read-write or read-only session mode. 
	
* /SVT - A valid domain alias from the [Domain Aliases] section of the <nop>OpenLink server component's oplrqb.ini file. Default domain aliases represent the type of database agent to which the application intends to connect, e.g., DB2, Informix 2000, Oracle 8.1.x. Custom aliases may take any form.
	
* /APPLICATION - The Application name. Enables connectivity when restrictive server side rules screen by application name. 
	
* /FBS - (also FETCHBUFFERSIZE) The Fetch Buffer Size. The Fetch Buffer Size is an integer that represents the number of rows to return during one fetch operation. 
	
* /ENCRYPTED - Sets the Encrypted flag for outgoing packets. /ENCRYPTED may pass '1', '0', 'Y', 'N', 'y', or 'n.' (This feature is disabled by default.) 
	
* /CHARSET - Specifies the charset of remote databases. The default value is read from System.getProperty("file.encoding"). 
	
* /UNICODE - Instantiates unicode. The unicode connection isn't used by default. The value may be '1', '0', 'Y', 'N', 'y', 'n'(This feature is disabled by default.)  
	
* /DLF - Pushes large, binary objects to the end of the resultset. Smaller data types are retrieved first. This enhances performance. /DLF may be set to '1', '0', 'Y', 'N', 'y', or 'n.' (This feature is disabled by default.) 
	
* /DATABASE - Actual database name within a particular database environment. 

* /OPTIONS - Optional parameter that passes specialized database native client connection parameters. Used to connect to Progress databases in sockets mode. Also to connect in 3-Tier or application server architectures.
	
* /DRIVER - The Driver name contained in curly brackets ({}). Used for DSN-Less connections to remote ODBC Drivers. 

Note: You cannot pass the full path to Progress databases to the JDBC Database= parameter. (Slashes in path names are not parsed correctly.) Paths must be hardcoded in the Agent configuration section of the Session Rules Book. 


Note: Older Multi-Tier drivers supported URLs that took this form: 

{{{
jdbc:openlink://<Hostname>:[portnumber][/DSN][/UID][/PWD][/READONLY] 
}}}

This URL format is deprecated. Check individual driver support for this format, as needed.