%META:TOPICPARENT{name="SingleTierExpressInstallMac"}%
= Installation and Configuration of the Single-Tier "Express" Edition ODBC Driver for Microsoft SQL Server Data Sources, for Mac OS X=
**Review Preinstallation Documentation:**  [[PreInstallSQLExpressOSX|Pre-Installation Requirements]]
%TOC%

==Installation==

<i>Note: The software must be installed as a user with Administrative privileges on the machine.</i>


# The Single-Tier "Express" Edition ODBC Driver for Microsoft SQL Server Data Sources is distributed as a Disk Image ({{{.dmg}}}) file:  
%BR%%BR%<img src="%ATTACHURLPATH%/SQLServerDMGFile.png" style="wikiautogen"/>%BR%%BR%
# Double-click the disk image 'mul6esql.dmg' to access the installer {{{.mpkg}}} file:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLserverDMG.png" style="wikiautogen"/>%BR%%BR%
# Double-click the {{{.mpkg}}} file to run the installer and follow the instructions to complete the installation:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLpackage.png" style="wikiautogen"/>%BR%%BR%
# This is the **Welcome** dialog for the <nop>OpenLink ODBC Driver for Microsoft SQL Server (Express Edition):
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall1.png" style="wikiautogen"/>%BR%%BR%
# Review the **Read Me** file for installation requirements and known issues:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall3.png" style="wikiautogen"/>%BR%%BR%
# Read the **Software License Agreement**:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall4.png" style="wikiautogen"/>%BR%%BR%
# Agree to the **Software License Agreement** before continuing your installation:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall6.png" style="wikiautogen"/>%BR%%BR%
# Select a destination volume for the driver installation:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall7.png" style="wikiautogen"/>%BR%%BR%
# Choose to perform a custom or default installation of the driver:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall8.png" style="wikiautogen"/>%BR%%BR%
# If you chose the custom option, select which of the following components to install:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall10.png" style="wikiautogen"/>%BR%%BR%
# Note: The software must be installed as a user with Administrative privileges on the machine:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall12.png" style="wikiautogen"/>%BR%%BR%
# After the driver has been installed, you will be prompted for a license file. If a license file already exists on the machine, select the 'use existing file' option. A trial (try) or full (buy) license can be obtained by selecting the 'try and buy' option which loads the online try and buy web page:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall14.png" style="wikiautogen"/>%BR%%BR%
# To obtain the trial license you must be a registered user on the <nop>OpenLink Web site and login with the username (e-mail address) and password for that user. Click on the 'Shop' link to visit the online shop cart to purchase a full license if required:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall15.png" style="wikiautogen"/>%BR%%BR%
# Click on the 'download license' button to obtain an immediate license file and save it to your desktop. Alternatively, a mail can be sent to your e-mail address with a link to your <nop>OpenLink Data Space (ODS). Here, all trial and full license files will be stored in a specialized Briefcase for download at a later date.
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall16.png" style="wikiautogen"/>%BR%%BR%
# Select the license file that you want to use for the installation:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall18.png" style="wikiautogen"/>%BR%%BR%
# The installation is complete:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLinstall19.png" style="wikiautogen"/>%BR%%BR%

== Configuration ==

# To configure an ODBC DSN, run the <nop>OpenLink iODBC Administrator located in the /Applications/iODBC folder:
%BR%%BR%<img src="%ATTACHURLPATH%/ODBCadmin.png" style="wikiautogen"/>%BR%%BR%
# Click the Add button:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLconfig1.png" style="wikiautogen"/>%BR%%BR%
# Select the <nop>OpenLink Microsoft SQL Server Driver (Express Edition) v6.0 from the list of available drivers. Select the Unicode version of the driver **if and only if** you are working with multi-byte character sets, as unnecessary translations can significantly affect ODBC performance:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLconfig2.png" style="wikiautogen"/>%BR%%BR%
# Provide a suitable DSN name and optional description for the Data Source:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLconfig3.png" style="wikiautogen"/>%BR%%BR%
# The Connection tab takes the minimum parameters required to make a connection to the target database:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLconfig4.png" style="wikiautogen"/>
#* **Host**: This is the fully qualified hostname or IP address of the machine hosting the DBMS you wish to access, e.g., dbms-server.example.com or 192.168.155.123. Any hostname which can be resolved by your local DNS is acceptable.
#* **Port**: The port on which the Microsoft SQL Server instance listens.
#* **Database**: This is the Microsoft SQL Server database to which you want to connect.
#* **User Name**: This is a valid Microsoft SQL Server user.
#* The advanced button displays additional optional parameters that can be configured.
|**Name** |** Description**|
| **Tds** | The TDS version to be used. The default is '8.0'.|
| **Cachemetadata** | When used with {{{prepareSQL=3}}},  this property causes the driver to cache column meta data for SELECT statements. Use with care. The default value is - false.|
| **Charset** | This very important setting determines the byte value to character mapping for CHAR/VARCHAR/TEXT values. It applies to characters from the extended character set (codes 128-255). It doesn't have any effect for  NCHAR/NVARCHAR/NTEXT, since these values are stored using Unicode. The default  setting is the character set that the server was installed with.|
| **Language** | Applies to characters from the extended character set (codes 128-255). It doesn't have any effect for  NCHAR/NVARCHAR/NTEXT, since these values are stored using Unicode. The default  setting is the character set that the server was installed with.|
| **Domain** | Specifies the Windows domain in which to authenticate. If present and a domain user name and password are provided, it uses Windows (NTLM) authentication instead of the usual Microsoft SQL Server authentication. This allows non-Windows clients to log in to servers which are only configured to accept Windows authentication.  |
| **Instance** | Passes a Named Instance. Microsoft SQL Server can run multiple so-called 'named instances' (i.e. different server instances, running on different TCP ports) on the same machine. When using Microsoft tools, selecting one of these instances is made by using '[host_name][instance_name]' instead of the usual '[host_name]'. You will have to split the two and use the instance name as a property. |
| **<nop>AppName** | Application name. No practical use. It's displayed by the Enterprise Manager or the Profiler associated with the connection. |
| **<nop>ProgName** | Client library name. No practical use. It's displayed by the Enterprise Manager or Profiler associated with the connection. |
| **Wsid** | Workstation ID. No practical use. It's displayed by the Enterprise Manager or the Profiler associated with the connection. The default  value is the client host name. |
| **<nop>MacAddress** | Network interface card MAC address.  The default  value is '000000000000'.| 
| **<nop>SendStringParametersAsUnicode** | Determines whether string parameters are sent to the Microsoft SQL Server database in Unicode or in the default character encoding of the database. The default value is true.| 
| **<nop>LastUpdateCount** | If true, only the last update count will be returned by executeUpdate(). This is useful in case you are updating or inserting into tables that have triggers such as replicated tables. There's no way to make the difference between an update count returned by a trigger and the actual update count. However, the actual update count is always the last, as the triggers execute first. If false, all update counts are returned. Use getMoreResults() to loop through them. The default value is true.| 
| **<nop>PrepareSQL** | This parameter specifies the mechanism used for Prepared Statements. The default  is - 3 for Microsoft SQL Server.|
| **<nop>PacketSize** | The network packet size (a multiple of 512). The default is  4096 for TDS 7.0/8.0 and 512 for TDS 4.2/5.0.| 
| **<nop>TcpNoDelay** | When true, enables TCP_NODELAY on the socket.  The default value is true.| 
| **<nop>LobBuffer** |The amount of LOB data to buffer in memory before caching to disk. The value is in bytes for Blob data and chars for Clob data. The default  value is 32768. | 
| **<nop>MaxStatements** | The number of statement prepares each connection should cache. A value of 0 will disable statement caching. The default value is 500. |
| **<nop>LoginTimeout** | The amount of time to wait (in seconds) for a successful connection before timing out. If namedPipe is true and loginTimeout is non-zero, the value of loginTimeout is used for the retry timeout when 'All pipe instances are busy' error messages are received while attempting to connect to the server. If namedPipe is true and loginTimeout is zero (the default), a value of 20 seconds is used for the named pipe retry timeout. |
| **<nop>SocketTimeout** | The amount of time to wait (in seconds) for network activity before timing out.Use with care! If a non zero value is supplied, <nop>SocketTimeout must be greater than the maximum time that the server will take to answer any query. Once the timeout value is exceeded, the network connection will be closed. This parameter may be useful for detecting dead network connections in a pooled environment. The default value is 0.| 
| **<nop>NamedPipe** |When set to true, named pipe communication is used to connect to the database instead of TCP/IP sockets. When the os.name system property starts with 'windows' (case-insensitive), named pipes (both local and remote) are accessed through the Windows filesystem by opening a <nop>RandomAccessFile to the path. When Microsoft SQL Server and the client are on the same machine, a named pipe will usually have better performance than TCP/IP sockets, since the network layer is eliminated. |
| **Ssl** | Specifies if and how to use SSL for secure communication. The default value is off.| 
| **<nop>BatchSize** | Controls how many statements are sent to the server in a batch. The actual batch is broken up into pieces off this size that are sent separately.The default value is 0 (unlimited). | 
| **<nop>UseCursors** | Instructs the driver to use server side cursors instead of direct selects (AKA firehose cursors) for forward-only read-only result sets. With other types of result sets, server- or client-side cursors are always used.  The default value is false.| 
| **<nop>BufferMaxMemory** | Controls the global buffer memory limit for all connections (in kilobytes). When the amount of buffered server response packets reaches this limit, additional packets are buffered to disk. There is one exception. Each statement gets to buffer at least '[bufferMinPackets]' to memory before this limit is enforced. This means that this limit can and will usually be exceeded. The default value is 1024.|
| **<nop>BufferMinPackets** |Controls the minimum number of packets per statement to buffer to memory. Each statement will buffer at least this many packets before being forced to use a temporary file if the [bufferMaxMemory] is reached. This ensures good performance even when one statement caches a very large amount of data. The default value is 8.| 
| **<nop>UseLOBs** |Controls whether large types (IMAGE and TEXT/NTEXT) should be mapped by default (when using getObject()) to LOBs . The default type constant returned is also controlled by this property: Types.BLOB for IMAGE and Types.CLOB for TEXT/NTEXT when true, Types.LONGVARBINARY for IMAGE and Types.LONGVARCHAR for TEXT/NTEXT when false. The default value is true.|
# Click continue to proceed to the Options tab. This tab contains optional parameters that are not required for basic ODBC connectivity:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLconfig6.png" style="wikiautogen"/>
#* **Row Buffer Size** - This attribute specifies the number of records to be transported over the network in a single network hop. Values can range from 1 to 99.
#* **Hide Login Dialog** - Suppresses the ODBC "Username" and "Password" login dialog boxes when interacting with your ODBC DSN from within an ODBC compliant application.
#* **Read Only connection** - Specifies whether the connection is "Read-only." Make sure the checkbox is unchecked to request a "Read/Write" connection.
#* **Drop Catalog from Meta calls** - Enable this option to have the catalog name not appear for tables, views, and procedures when requesting database meta-data.
#* **No support of quoted identifier** - If set, the call <nop>SQLGetInfo for 'SQL_IDENTIFIER_QUOTE_CHAR' will return a space (" "). It can be used if the DBMS doesn't support quoted SQL like select * from "account."
#* **Drop Schema from Meta calls** - Enable this option to have the schema-name not appear for tables, views, and procedures when requesting database meta-data.
#* **SQLStatistics disabled** -  Check this box to have SQLStatistics() return an empty resultset. Use this if the underlying database does not support retrieval of statistics about a table (e.g. what indexes it has).
#*  **No support of search string escape** - If set, the call <nop>SQLGetInfo for 'SQL_LIKE_ESCAPE_CLAUSE' will return a space (" "). It can be used if the DBMS doesn't support SQL escape patterns.
#* **Patch of NULL size of SQL_CHAR** -  If set, this option overrides the size of SQL_CHAR column type returned by the database with the value set in the text box (in bytes). With a default value of 0, the driver uses the size returned by the database.
#* **SQL_DBMS Name** - Manually overrides the <nop>SQLGetInfo(SQL_DBMS_NAME) response returned by the driver. This is required for products like Microsoft <nop>InfoPath for which the return the value should be "SQL Server".
# Click continue to proceed to the Preferences tab. This tab contains optional parameters that are not required for basic ODBC connectivity:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLconfig7.png" style="wikiautogen"/>
#* **Initialization SQL** - Lets you specify a file containing SQL statements that will be run automatically against the database upon connection.
#* **Cursor Sensitivity** - Enables or disables the row version cache used with dynamic cursors. When dynamic cursor sensitivity is set high, the Cursor Library calculates checksums for each row in the current rowset and compares these with the checksums (if any) already stored in the row version cache for the same rows when fetched previously. If the checksums differ for a row, the row has been updated since it was last fetched and the row status flag is set to SQL_ROW_UPDATED. The row version cache is then updated with the latest checksums for the rowset. From the user's point of view, the only visible difference between the two sensitivity settings is that a row status flag can never be set to SQL_ROW_UPDATED when the cursor sensitivity is low. (The row status is instead displayed as SQL_ROW_SUCCESS.) In all other respects, performance aside, the two settings are the same. Deleted rows don't appear in the rowset. Updates to the row since the row was last fetched are reflected in the row data, and inserted rows appear in the rowset, if their keys fall within the span of the rowset. If your application does not need to detect the row status SQL_ROW_UPDATED, you should leave the 'High Cursor Sensitivity' checkbox unchecked, as performance is improved. The calculation and comparison of checksums for each row fetched carries an overhead. If this option is enabled, the table oplrvc must have been created beforehand using the appropriate script for the target database.
#* **Max Rows Override** - Allows you to define a limit on the maximum number of rows to be returned from a query. The default value of 0 means no limit.
#* **Disable Autocommit** - Changes the default commit behaviour of the <nop>OpenLink driver. The default mode is <nop>AutoCommit (box unchecked).
#* **Disable Rowset Size Limit** - Disables a limitation enforced by the cursor library. This limitation is enforced by default. It prevents the driver from claiming all available memory in the event that a resultset  generated from an erroneous query is very large. The limit is normally never reached.
#* **Defer fetching of long data** - Defers fetching of LONG (BINARY, BLOB etc.) data unless explicitly requested in a query. This provides significant performance increases when fields in query do not include LONG data fields.
#* **Multiple Active Statements Emulation** - Enables use of Multiple Active statements in an ODBC application even if the underlying database does not allow this, as it is emulated in the driver.
#* **Always include VIEWS in table list** - This switch is needed for Microsoft Excel and Query, Stata, and some other tools which explicitly request only <code>TABLEs</code> from the back-end DBMS.  Tick this box if you also need to see <code>VIEWs</code> in the graphical query builder.  This option is redundant when <i>Always include alltypes</i> is ticked.
#* **Always include alltypes in table list** - This switch is needed for Microsoft Excel and Query, Stata, and some other tools which explicitly request only <code>TABLEs</code> from the back-end DBMS.  Tick this box if you also need to see <code>SYSTEM TABLEs</code>, <code>VIEWs</code>, <code>SYSTEM VIEWs</code>, <code>SYNONYMs</code>, <code>GLOBAL TEMPORARYs</code>, <code>ALIASes</code>, and/or <code>LOCAL TEMPORARYs</code> in the graphical query builder.  <i><b>Note:</b> the <code>TABLE</code> list will be <b>much</b> longer than when this box is not ticked, and <code>SYSTEM</code> objects will be sorted to the top of the list, due to typical naming conventions.</i>
# Click on the 'Test Data Source' button to make a connection to the database to verify connectivity:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLconfig8.png" style="wikiautogen"/>%BR%%BR%
# Enter a valid username and password for the database:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLconfig9.png" style="wikiautogen"/>%BR%%BR%
# A successful connection to the database has been made:
%BR%%BR%<img src="%ATTACHURLPATH%/SQLsuccess.png" style="wikiautogen"/>%BR%%BR%


==Next...==

* [[TestingMacODBCDSNs|Test your DSNs with our sample program]].%BR%%BR%
* If anything isn't working as you expect, including errors resulting from the test above, [[UDATroubleshootingResources|see our Troubleshooting Resources]].%BR%%BR%
* Should you decide to purchase a commercial license at the end of your evaluation period, be sure to consult our documentation which explains the placement and uptake of commercial license files and the use of our <b><nop>OpenLink License Manager</b> technology: [[UDALicenseApplication|License Technology &amp; Application]].

