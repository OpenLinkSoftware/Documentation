<docbook><section><title>OLEDBInitializationPropertiers</title><para> </para><bridgehead class="http://www.w3.org/1999/xhtml:h3">Initialization Properties Used</bridgehead>
<para>The following lists the initialization properties currently used by the OpenLink Provider.
 Any properties not listed are not used by the OpenLink Provider.</para><para>Table: 5.7.4.1.1.
 OLE-DB Initialization Properties
</para><table><title /><tgroup><thead /><tbody>
<row />
<row><entry>DBPROP_AUTH_PASSWORD</entry><entry> 	Passed as the value of the PWD keyword in SQLDriverConnect.</entry></row>
<row><entry>DBPROP_AUTH_USERID</entry><entry> 	Passed as the value of the UID keyword in SQLDriverConnect.</entry></row>
<row><entry>DBPROP_INIT_CATALOG</entry><entry> 	Sets the initial catalog for data sources which recognise catalogs.</entry></row>
<row><entry>DBPROP_INIT_DATASOURCE</entry><entry> 	Passed as the value of the DSN keyword in SQLDriverConnect.</entry></row>
<row><entry>DBPROP_INIT_HWND</entry><entry>Passed as the value of the hwnd argument in SQLDriverConnect.</entry></row>
<row><entry>DBPROP_INIT_MODE</entry><entry>Mapped to the ODBC connect option SQL_ACCESS_MODE.</entry></row>
<row><entry>DBPROP_INIT_PROMPT</entry><entry>Passed as the value of the fDriverCompletion parameter in SQLDriverConnect.</entry></row>
<row><entry>DBPROP_INIT_PROVIDERSTRING</entry><entry> 	Specifies extended properties for controlling ODBC Cursor Library usage (through the &#39;Cursors&#39; keyword) and the whether bookmarks are exposed by default on rowsets (through the &#39;BookmarkDefault&#39; keyword).</entry></row>
<row><entry>DBPROP_INIT_TIMEOUT</entry><entry> 	Mapped to the ODBC connect option SQL_LOGIN_TIMEOUT.</entry></row>
</tbody></tgroup></table>
<para> </para><bridgehead class="http://www.w3.org/1999/xhtml:h3">Setting and Getting Provider Properties</bridgehead>
<para>The data source object is the first object created when a consumer instantiates the provider by calling CoCreateInstance.</para><para>The data source object provides the starting point for communications between the provider and consumer.
 For example, a consumer can call CoCreateInstance and request an IDBInitialize interface pointer to instantiate a data source object.
 The provider has a CLSID (class ID) that is stored in the Windows Registry.
 The consumer can use this CLSID with CoCreateInstance to instantiate the data source object.
 The OpenLink provider setup program registers the OpenLink provider in the Windows Registry.<para>The data source object is responsible for setting and returning information about the properties supported by the provider and exposing the list of supported keywords and literals.
 This functionality is supported through the mandatory IDBProperties interface and the optional IDBInfo interface.
 The IDBProperties interface contains three methods:</para></para><itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>GetProperties</emphasis> returns the list of properties currently set on the data source object.
</listitem>
<listitem> <emphasis>GetPropertyInfo</emphasis> returns information about supported rowset and data source properties.
</listitem>
<listitem> <emphasis>SetProperties</emphasis> sets the properties on the data source object.</listitem>
</itemizedlist><para>The IDBInfo interface contains two methods:</para><itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>GetKeywords</emphasis> returns a list of supported keywords.
</listitem>
<listitem> <emphasis>GetLiteralInfo</emphasis> returns information about literals used in text commands.
</listitem>
</itemizedlist></section></docbook>