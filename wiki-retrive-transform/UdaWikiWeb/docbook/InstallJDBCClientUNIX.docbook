<docbook><section><title>InstallJDBCClientUNIX</title><para> </para><bridgehead class="http://www.w3.org/1999/xhtml:h2"> OpenLink Generic JDBC Driver Installation and Configuration</bridgehead>
<para><emphasis>Review Preinstallation Documentation:</emphasis>  <ulink url="PreInstallClientUNIX">OpenLink Generic JDBC Driver Pre-Installation Requirements</ulink></para><bridgehead class="http://www.w3.org/1999/xhtml:h3">Installation</bridgehead>
<orderedlist spacing="compact"><listitem> Login to your Unix or Linux client machine.
<figure><graphic fileref="InstallJDBCClientUNIX/JDBC3_Login.png" /></figure> </listitem>
<listitem> cd into the installation directory.
<figure><graphic fileref="InstallJDBCClientUNIX/JDBC3_CD_Demos.png" /></figure> </listitem>
<listitem> The installation files ship as an installation shell script, a driver, and an optional admin .taz file.
 The installation shell script should be ftp&#39;d in ascii.
 The rest of the files should be ftp&#39;d in binary, where applicable.
<figure><graphic fileref="InstallJDBCClientUNIX/JDBC3_LS_Files.png" /></figure> </listitem>
<listitem> Export your JAVA_HOME variable.
 It should pass the full path to your JAVA installation.
<figure><graphic fileref="InstallJDBCClientUNIX/JDBC3_Export_JAVA.png" /></figure> </listitem>
<listitem> Use the echo command to ensure that JAVA_HOME is set.
<figure><graphic fileref="InstallJDBCClientUNIX/JDBC3_Echo_Java.png" /></figure> </listitem>
<listitem> Run the following command to start the installation <programlisting>sh install.sh
</programlisting></listitem>
<listitem> If you have a pre-existing installation running on the machine, you will be presented with the following options: <figure><graphic fileref="InstallJDBCClientUNIX/JDBC3_Install_2.png" /></figure> </listitem>
<listitem> The installation is complete.
<figure><graphic fileref="InstallJDBCClientUNIX/JDBC3_Install_End.png" /></figure></listitem>
</orderedlist><bridgehead class="http://www.w3.org/1999/xhtml:h3">Configuration</bridgehead>
<orderedlist spacing="compact"><listitem> Execute the bash command to open a bash shell.
 If you do not have have the bash shell, substitute the sh command for the bash command.
 This will open the bourne shell.
<figure><graphic fileref="InstallJDBCClientUNIX/JDBC3_Bash.png" /></figure> </listitem>
<listitem> Run the following command to set your CLASSPATH to include OpenLink&#39;s JDBC driver: <programlisting>. ./openlink.sh
</programlisting><figure><graphic fileref="InstallJDBCClientUNIX/JDBC_openlinksh.png" /></figure> </listitem>
<listitem> No further configuration should be needed.
<itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Driver Name</emphasis>: <computeroutput>opljdbc3.jar</computeroutput>, <computeroutput>megathin3.jar</computeroutput>, <computeroutput>opljdbc2.jar</computeroutput>, <computeroutput>megathin2.jar</computeroutput>, <computeroutput>opljdbc.jar</computeroutput>, or <computeroutput>megathin.jar</computeroutput> </listitem>
<listitem> <emphasis>Driver Class Name</emphasis>: <computeroutput>openlink.jdbc3.Driver</computeroutput>, <computeroutput>openlink.jdbc2.Driver</computeroutput>, or <computeroutput>openlink.jdbc.Driver</computeroutput> </listitem>
<listitem> <emphasis>Connection URL</emphasis>: <programlisting>jdbc:openlink://&lt;Hostname&gt;:[portnumber] [/UID] [/PWD] [/READONLY] [/SVT]
		[/APPLICATION] [/FBS|FETCHBUFFERSIZE] [/ENCRYPTED] [/CHARSET] [/UNICODE]
		[/DLF] [/DATABASE] [/OPTIONS] [/DRIVER] 
</programlisting></listitem>
</itemizedlist></listitem>
<listitem> Here is a description of each of the parameters: <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Hostname</emphasis> - Network Alias or IP address of machine that runs an OpenLink Request Broker instance.
</listitem>
<listitem> <emphasis> Port Number</emphasis> - TCP port on which the Request Broker listens.
</listitem>
<listitem> <emphasis>/UID</emphasis> - Database username.
</listitem>
<listitem> <emphasis>/PWD</emphasis> - Database password.
</listitem>
<listitem> <emphasis>/READONLY</emphasis> - Read-write or read-only session mode.
</listitem>
<listitem> <emphasis>/SVT</emphasis> - A valid domain alias from the [Domain Aliases] section of the OpenLink server component&#39;s oplrqb.ini file.
 Default domain aliases represent the type of database agent to which the application intends to connect, e.g., DB2, Informix 2000, Oracle 8.1.x.
 Custom aliases may take any form.
</listitem>
<listitem> <emphasis>/APPLICATION</emphasis> - The Application name.
 Enables connectivity when restrictive server side rules screen by application name.
</listitem>
<listitem> <emphasis>/FBS</emphasis> - (also FETCHBUFFERSIZE) The Fetch Buffer Size.
 The Fetch Buffer Size is an integer that represents the number of rows to return during one fetch operation..
</listitem>
<listitem> <emphasis>/ENCRYPTED</emphasis> - Sets the Encrypted flag for outgoing packets.
 /ENCRYPTED may pass &#39;1&#39;, &#39;0&#39;, &#39;Y&#39;, &#39;N&#39;, &#39;y&#39;, or &#39;n.&#39; (This feature is disabled by default.) </listitem>
<listitem> <emphasis>/CHARSET</emphasis> - Specifies the charset of remote databases.
 The default value is read from System.getProperty(&quot;file.encoding&quot;).
</listitem>
<listitem> <emphasis>/UNICODE</emphasis> - Instantiates unicode.
 The unicode connection isn&#39;t used by default.
 The value may be &#39;1&#39;, &#39;0&#39;, &#39;Y&#39;, &#39;N&#39;, &#39;y&#39;, &#39;n&#39;(This feature is disabled by default.) </listitem>
<listitem> <emphasis>/DLF</emphasis> - Pushes large, binary objects to the end of the resultset.
 Smaller data types are retrieved first.
 This enhances performance.
 /DLF may be set to &#39;1&#39;, &#39;0&#39;, &#39;Y&#39;, &#39;N&#39;, &#39;y&#39;, or &#39;n.&#39; (This feature is disabled by default.) </listitem>
<listitem> <emphasis>/DATABASE</emphasis> - Actual database name within a particular database environment.
</listitem>
<listitem> <emphasis>/OPTIONS</emphasis> - Optional parameter that passes specialized <ulink url="MTServerConfigConnectOptions">database native client connection parameters</ulink>.
 Do not use this parameter unless you need to pass Progress socket parameters or database native client parameters that enable a local OpenLink database agent to locate a remote database.
 Example parameters would be Oracle Net10 Service Names, Ingres vnodes, remote Informix instance names, or DB2 remote database aliases.
</listitem>
<listitem> <emphasis>/DRIVER</emphasis> - The Driver name contained in curly brackets ({}).
 Used for DSN-Less connections to remote ODBC Drivers.</listitem>
</itemizedlist></listitem>
</orderedlist><bridgehead class="http://www.w3.org/1999/xhtml:h3">Examples</bridgehead>
<programlisting>jdbc:openlink://localhost:5000/SVT=Ingres II/DATABASE=iidbdb/UID=ingres/PWD=ingres
</programlisting><programlisting>jdbc:openlink://192.128.13.119:5000/SVT=Oracle 8.1.x/DATABASE=ORCL/UID=scott/PWD=tiger
</programlisting><programlisting>jdbc:openlink://saturn:5000/SVT=Progress 91D/DATABASE=isports/OPTIONS=-S isports -N tcp -H saturn
</programlisting><programlisting>jdbc:openlink://localhost:5000/SVT=SQLServer 2000/DATABASE=Northwind/UID=sa/OPTIONS= -S SATURN
</programlisting></section></docbook>