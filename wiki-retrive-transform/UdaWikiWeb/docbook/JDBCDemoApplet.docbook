<docbook><section><title>JDBCDemoApplet</title><para> </para><title> JDBCDemo Applet </title> JDBCDemo Applet 
<para>This applet demonstrates basic JDBC functionality.</para><bridgehead class="http://www.w3.org/1999/xhtml:h2"> Utilization Steps </bridgehead>
<orderedlist spacing="compact"><listitem> Start the OpenLink Request Broker </listitem>
<listitem> Start up your Web Browser </listitem>
<listitem> Enter one of the following URLs into your browser depending on the location of your OpenLink Request Broker or HTTP-based <ulink url="OpenLink">OpenLink</ulink> ODBC Administrator <emphasis><emphasis>Note:</emphasis> Port &quot;8000&quot; presumes that you took the defaults when installing the UDA components.</emphasis> <itemizedlist mark="bullet" spacing="compact"><listitem> Local To you: <programlisting>http://localhost:8000/
</programlisting></listitem>
<listitem> Remote Server: <programlisting>http://&lt;hostname or IP address of remote server&gt;:8000/
</programlisting></listitem>
</itemizedlist></listitem>
<listitem> Drill down to <emphasis>Sample Applications</emphasis> -&gt; <emphasis>JDBC Applet Demos</emphasis> -- <figure><graphic fileref="JDBCDemoApplet/JDBCDemo1.png" /></figure> </listitem>
<listitem> Click on <emphasis>Applet demonstration with OpenLink Software JDBC Driver</emphasis>.
</listitem>
<listitem> Use the Applet&#39;s <emphasis>File</emphasis> -&gt; <emphasis>Set Connection URL</emphasis> menu item set a JDBC URL.
<itemizedlist mark="bullet" spacing="compact"><listitem> If uncertain follows the instructions laid out in the section covering OpenLink JDBC URL formats which shows you how to construct Type 1, 2, and 3 URL formats for our JDBC Drivers.
 This applet will run with third-party JDBC Drivers, but you will need to obtain URL construction information from the relevant driver vendor.
</listitem>
<listitem> The line below depicts the URL construction dialog presented: <programlisting>jdbc:openlink://localhost/DSN=WebJDBCDemo
</programlisting></listitem>
</itemizedlist></listitem>
<listitem> Enter a valid SQL statement for the back end database that you are connecting to via JDBC and then click on the &quot;Query&quot; button -- <figure><graphic fileref="JDBCDemoApplet/JDBCDemo2.png" /></figure> </listitem>
<listitem> Basic JDBC 1.1 functionality provides Forward-Only (as opposed to Bi-Directional) record Scrolling; this is why the basic JDBC applet only has a &quot;Next&quot; button.
 When you click on the &quot;Next&quot; button you are moved to the next record in your JDBC resultset.
 Unfortunately, you have to hit the &quot;Query&quot; button again and re-start Forward-Only navigation through the result set if you need to see any records previous to your current position.
 The examples that follow show how newer release of JDBC (version 2.0 and later) address the Bi-Directional Scrolling Limitation demonstrated by this Applet.</listitem>
</orderedlist></section></docbook>