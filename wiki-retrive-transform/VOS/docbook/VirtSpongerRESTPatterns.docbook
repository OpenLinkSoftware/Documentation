<docbook><section><title>VirtSpongerRESTPatterns</title><para> </para>
<title>Usage of the Sponger Middleware via REST patterns</title>Usage of the Sponger Middleware via REST patterns
<bridgehead class="http://www.w3.org/1999/xhtml:h2">What?</bridgehead>
<para>How to interact with the Sponger via REST patterns.</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h2">Why?</bridgehead>
 Delegation and proxies are part of the Internet and Web&#39;s federated architecture.
 Thus, developers of RESTful applications benefit immensely from the ability to leverage Sponger functionality via delegation to it as a proxy.<bridgehead class="http://www.w3.org/1999/xhtml:h2">How?</bridgehead>
<para>The following table presents list of the supported URL parameters:</para>
<para> </para>

<table><title /><tgroup><thead /><tbody>
<row />
<row><entry><emphasis>refresh</emphasis></entry><entry> clean </entry><entry><emphasis>Usage</emphasis>: for overwriting. The &#39;clean&#39; usage explicitly clears the graph i.e. will cause the Sponger to drop cache even if it is marked to be in the fly.Thus, if fetched cache by some reason is left in some inconsistent state like shutdown during Network Resource fetching, then &#39;clean&#39; is required as it doesn&#39;t check cache state.<emphasis>Note</emphasis>: must be used with caution as other threads may be doing fetching of network resources at same time. </entry><entry> <ulink url="http://linkeddata.uriburner.com/about/html/http://linkeddata.uriburner.com/about/id/entity/http/twitter.com/kidehen?@Lookup@=&amp;refresh=clean">Explicitly clear the graph</ulink></entry></row>
<row><entry><emphasis>sponger:get</emphasis></entry><entry>add </entry><entry><emphasis>Usage</emphasis>: Add new triples to named graphs, progressively. This is the default value for the parameter sponger:get. May be used together with refresh=&lt;seconds&gt; to overwrite the expiration in the cache. </entry><entry> <ulink url="http://linkeddata.uriburner.com/about/html/http://linkeddata.uriburner.com/about/id/entity/http/twitter.com/kidehen?sponger:get=add&amp;refresh=10">Add new triples and refresh on every 10 seconds</ulink></entry></row>
<row><entry><emphasis>sponger:get</emphasis></entry><entry>soft </entry><entry><emphasis>Usage</emphasis>: Network Resource Fetch data subject to cache invalidation mode and associated rules of instance. May be used together with refresh=&lt;seconds&gt; to overwrite the expiration in the cache. </entry><entry> <ulink url="http://linkeddata.uriburner.com/about/html/http://linkeddata.uriburner.com/about/id/entity/http/twitter.com/kidehen?sponger:get=soft&amp;refresh=10">Network Resource Fetch data with option <emphasis>soft</emphasis> and refresh on every 10 seconds</ulink></entry></row>
<row><entry><emphasis>sponger:get</emphasis></entry><entry>replace </entry><entry><emphasis>Usage</emphasis>: Replace subject to cache invalidation mode and rules, but coverage includes non fetched triples if such exist in a given named graph. may be used together with refresh=&lt;seconds&gt; to overwrite the expiration in the cache. </entry><entry> <ulink url="http://linkeddata.uriburner.com/about/html/http://linkeddata.uriburner.com/about/id/entity/http/twitter.com/kidehen?sponger:get=replace&amp;refresh=10">Replace data and refresh on every 10 seconds</ulink></entry></row>
</tbody></tgroup></table>
<bridgehead class="http://www.w3.org/1999/xhtml:h2">Related</bridgehead>
<itemizedlist mark="bullet" spacing="compact"><listitem><ulink url="VirtSpongerCartridgeProgrammersGuide_Part3">Sponger Queue API</ulink> </listitem>
<listitem><ulink url="http://virtuoso.openlinksw.com/Whitepapers/html/VirtSpongerWhitePaper.html">Technical White Paper</ulink> </listitem>
<listitem><ulink url="VirtSpongerCartridgeSupportedDataSources">Supported Virtuoso Sponger Cartridges</ulink> </listitem>
<listitem><ulink url="SPARQLSponger">SPARQL Sponger</ulink> </listitem>
<listitem><ulink url="http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtSpongerCartridgeProgrammersGuide#RDF%20Proxy%20Service">Virtuoso Linked Data Middleware REST Patterns</ulink> </listitem>
<listitem><ulink url="VirtSpongerCartridgeSupportedDataSourcesMetaRESTExamples">Parametrized Examples of Meta Cartridge Usage via REST Request</ulink> </listitem>
<listitem><ulink url="VirtSpongerCartridgeRDFExtractor">Sponger Cartridge RDF Extractor</ulink> </listitem>
<listitem><ulink url="RDFMappers">Extending SPARQL IRI Dereferencing with RDF Mappers</ulink> </listitem>
<listitem><ulink url="VirtSpongerCartridgeProgrammersGuide">Programmer Guide for Virtuoso Linked Data Middleware (&quot;Sponger&quot;)</ulink> </listitem>
<listitem><ulink url="VirtProgrammerGuideRDFCartridge">Create RDF Custom Cartridge Tutorial</ulink> </listitem>
<listitem><ulink url="VirtSpongerCartridgeSupportedDataSources">OpenLink-supplied Virtuoso Sponger Cartridges</ulink> </listitem>
<listitem><ulink url="VirtAuthServerUI">Virtuoso Authentication Server</ulink> </listitem>
<listitem><ulink url="VirtOAuthSPARQL">Virtuoso SPARQL OAuth Tutorial</ulink> </listitem>
<listitem><ulink url="VirtSpongerACL">Virtuoso Sponger Access Control List (ACL) Setup</ulink> </listitem>
<listitem><ulink url="VirtSPARQLSecurityWebID">WebID Protocol &amp; SPARQL Endpoint ACLs Tutorial</ulink> </listitem>
<listitem><ulink url="http://docs.openlinksw.com/virtuoso/virtuososponger.html">Virtuoso Documentation</ulink> </listitem>
</itemizedlist></section></docbook>