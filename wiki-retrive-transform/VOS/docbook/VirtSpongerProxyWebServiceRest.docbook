<docbook><section><title>VirtSpongerProxyWebServiceRest</title><para> </para>
<title> RDF Proxy Service</title> RDF Proxy Service
<para>In certain cases like for Ajax applications, it&#39;s prohibited to issue HTTP requests to another server that origin server.
 In other cases it is needed to transform the content of target to an RDF format.
 To this purpose the Virtuoso Server provide a RDF proxy service.
 This service takes as argument target URL and may return content as-is or will try to transform with SPARQL sponger and return RDF data representing the target.
 In case of transformation to RDF the serialization of the output can be forced by a URL parameter of by content negotiation.</para>
<para>Virtuoso reserves the path &#39;/proxy/&#39; for RDF proxy service.
 In the current implementation, Virtuoso defines virtual directories for HTTP requests that come to the port specified as &#39;<ulink url="ServerPort">ServerPort</ulink>&#39; in the &#39;[HTTPServer]&#39; section of Virtuoso configuration file and refer to the above path string.
 So if the Virtuoso installation on host example.com listens for HTTP requests on port 8080 then client applications should use the &#39;service endpoint&#39; string equal to &#39;<ulink url="http://example.com:8080/proxy/&quot;.">http://example.com:8080/proxy/&#39;.</ulink></para>
<para>The RDF proxy service takes following URL parameters:</para>
<itemizedlist mark="bullet" spacing="compact"><listitem>url - the URL of the target </listitem>
<listitem>force - if &#39;rdf&#39; is specified will try to extract RDF data from target and return it </listitem>
<listitem>header - HTTP headers to be sent to the target </listitem>
<listitem>output-format - if &#39;force=rdf&#39; is given, designate the output MIME type of the RDF data, the default is &#39;rdf+xml&#39;, can be also &#39;n3&#39; or &#39;turtle&#39; or &#39;ttl&#39;.
</listitem>
<listitem>get - the sponger cache behaviour , represents SPARQL extension &#39;get:soft&#39; , accepts two values &#39;soft&#39; (default) and &#39;replacing&#39; </listitem>
<listitem>login (optional) - user account name, if given the cached data will be associated with given account and certain RDF mapping functions such as for <ulink url="FaceBook">FaceBook</ulink> will use account specific settings </listitem>
<listitem>sparql_(extension) - (optional) - any of SPARQL extensions , for example &#39;sparql_input:grab-limit&#39; with value &#39;1&#39; will result in adding &#39;define  input:grab-limit 1&#39; to the query executed by proxy service.</listitem>
</itemizedlist><para>When no &#39;output-format&#39; is given and RDF data is asked, the result will be serialized with MIME type depending of &#39;Accept&#39; header i.e.
 the proxy service will do content negotiation.</para>
<para><ulink url="CategoryVirtuoso">CategoryVirtuoso</ulink> <ulink url="CategoryRDF">CategoryRDF</ulink></para>
<para> </para>
</section></docbook>