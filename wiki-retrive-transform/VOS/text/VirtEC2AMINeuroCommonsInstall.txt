%META:TOPICPARENT{name="VirtInstallationEC2"}%

---+ Prepopulated Virtuoso hosting of NeuroCommons on EC2 AMI

---++What is <nowiki>NeuroCommons</nowiki> Project?
As articulated in the [[http://sciencecommons.org/about/science-commons-dylan-video/][Science Commons mission statement video]], [[http://www.neurocommons.org/][NeuroCommons]] project within [[http://sciencecommons.org/about/][Science Commons]] aimed at creating openly accessible neuroscience and computational biology knowledgebases on the Web.

---++<nowiki>NeuroCommons</nowiki> Installation on Virtuoso EC2 AMI instance

OpenLink Software provides a backup up of the current <nowiki>NeuroCommons</nowiki> Database as hosted on the live service at 
<code><nowiki>http://sparql.neurocommons.org/</nowiki></code>, that users can restore into a Virtuoso EC2 AMI instance in the 
cloud, providing them with an instance of <nowiki>NeuroCommons</nowiki> for their own use. 

---+++Installation

   1 Start a [[VirtInstallationEC2][Virtuoso EC2 AMI instance]]. Note a Virtuoso Release 5 AMI instance ( ami-ids ami-59628630 or ami-c46084ad ) *must* be used with this backup. We recommended a 64-bit large image AMI instance with 8GB of memory be used, which is a <code>m1.large</code> EC2 instance type. 
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_AWS_Console_M1Large_Instance.png" style="wikiautogen"/>%BR%%BR%
   1 Note for best performance particularly under extensive usage it is recommended the 16GB <code>m1.xlarge</code> EC2 instance type be used.
   1 Load the Virtuoso Conductor Administration interface of the running EC2 AMI instance with a URL of the form 
<code><nowiki>http://your-ec2-instance-cname/conductor</nowiki></code>.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_Conductor.png" style="wikiautogen"/>%BR%%BR%
   1 From the Virtuoso Conductor, navigate to the "System Admin" -> "Packages" tab to obtain a list of available 
Virtuoso packages (VADs) to install.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_VADPackages.png" style="wikiautogen"/>%BR%%BR%
   1 Click the "Install" button to initiate installation of the "EC2 Extensions" VAD package for use in performing backup 
and restore tasks.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_VADEc2Exts.png" style="wikiautogen"/>%BR%%BR% 
   1 Click the "Proceed" button to install the "EC2 Extensions" VAD package.
   1 Go to the URL <code><nowiki>http://your-ec2-instance-cname/ec2exts</nowiki></code> to load the Virtuoso 
Extensions for Amazon EC2 Images login page and log in as the "dba" user.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_ExtLogin.png" style="wikiautogen"/>%BR%%BR%
   1 From the Virtuoso Extensions for Amazon EC2 Images main page, click the "Restore a Remote Backup" link.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_MainPage.png" style="wikiautogen"/>%BR%%BR%
   1 On the "Restore a Remote Backup" page, set the follow options.
<verbatim>
Protocol: WebDAV/HTTP
Host: s3.amazonaws.com
Path or Bucket: neurocommons-virtuoso-bundle
Backup File Prefix: neurocommons-bundle
</verbatim>
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_RestoreNeurocommons.png" style="wikiautogen"/>
   1 Click the "Restore" button to begin the restoration of the <nowiki>NeuroCommons</nowiki> database from backup.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_RestoreNeurocommonsProgress.png" style="wikiautogen"/>%BR%
.
%BR%
.
%BR%
.
%BR%<img src="%ATTACHURLPATH%/EC2_RestoreNeurocommonsProgressDone.png" style="wikiautogen"/>%BR%%BR%
   1 Click on the "Continue" button to begin the re-assembly of the database from the restored backup files. Output 
similar to the following will be displayed when the re-assembly of the database is complete.
%BR%<img src="%ATTACHURLPATH%/EC2_ReassembleNeurocommons.png" style="wikiautogen"/>%BR%

Once complete the server will have been restarted automatically with the restored <nowiki>NeuroCommons</nowiki> database ready for use.

---+++Usage Examples

%BR%
You can then access pages such as these on your <nowiki>NeuroCommons</nowiki> server:

   * <nowiki>NeuroCommons</nowiki> SPARQL endpoint &mdash; <code><nowiki>http://your-ec2-instance-cname/nsparql.html</nowiki></code>
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_NeurocommonsSPARQL.png" style="wikiautogen"/>%BR%%BR% 

   * <nowiki>NeuroCommons</nowiki> XHTML Description page &mdash; <code><nowiki>http://your-ec2-instance-cname/commons/record/pmid/12477932</nowiki></code>
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_NeurocommonsXHTML.png" style="wikiautogen"/>%BR%%BR% 

---+++ <nowiki>NeuroCommons</nowiki> VAD Application Package

For those running a <nowiki>NeuroCommons</nowiki> Virtuoso EC2 AMI instance created before December 8, 2008, you will need to update your <nowiki>NeuroCommons</nowiki> 
VAD Application package to obtain the latest enhancements, by taking the following steps

   1 Download the <a href="%ATTACHURLPATH%/neurocommons_dav.vad" style="wikiautogen"><nowiki>NeuroCommons</nowiki> VAD Application</a> 
(<a href="%ATTACHURLPATH%/neurocommons_dav.vad" style="wikiautogen"><code><nowiki>neurocommons_dav.vad</nowiki></code></a>) package.
   1 Navigate to the "System Admin" -> "Packages" tab of the Virtuoso Conductor.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_VADInstall.png" style="wikiautogen"/>%BR%%BR%
   1 Scroll down to the "Install Package" section of the tab, use the "Upload Package" option  "browse" button.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_VADUploadFileN.png" style="wikiautogen"/>%BR%%BR%
   1 Navigate to the location of the downloaded <code><nowiki>neurocommons_dav.vad</nowiki></code> file and click the "open" button to select it.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_VADNeuro.png" style="wikiautogen"/>%BR%%BR%
   1 Click the "Proceed" button to begin the installation process.
%BR%%BR%<img src="%ATTACHURLPATH%/EC2_VADNeuroInstall.png" style="wikiautogen"/>%BR%%BR%

---+++ Results

   * The <nowiki>NeuroCommons</nowiki> SPARQL endpoint can be accessed on <nowiki>http://your-ec2-instance-cname/sparql</nowiki>
   * The OpenLink [[http://wikis.openlinksw.com/dataspace/owiki/wiki/OATWikiWeb/InteractiveSparqlQueryBuilder][Interactive SPARQL Query Builder]] can be accessed on <nowiki>http://your-ec2-instance-cname/isparql</nowiki>, enabling the visual construction of queries (Graph Patterns).

---+++Related
   * [[VirtSPARQLEndpointProtection][Safeguarding your Virtuoso-hosted SPARQL Endpoint]]
   * [[VirtEBSBackedBYOLAMI][EBS-backed BYOL ("Bring Your Own License") Virtuoso EC2 AMI]]
   * [[VirtTipsAndTricksGuideSPARQLEndpointProtection][SPARQL Endpoint Protection Methods Collection]]
   * [[http://docs.openlinksw.com/virtuoso/][Virtuoso documentation]]
      * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html#rdfsupportedprotocolendpoint][SPARQL Service Endpoint]] 
      * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html#rdfsupportedprotocolendpointuri][Service Endpoint Security]] 
      * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html#sparqwebservicetbl][Managing a SPARQL Web Service Endpoint]] 
      * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html][SPARQL]]
   * [[VirtTipsAndTricksGuide][Virtuoso Tips and Tricks Collection]]
      * [[VirtSPARQLDET][SPARQL Endpoint DET Configuration Guide]]       
      * [[VirtSPARQLSecurityWebID][WebID Protocol & SPARQL Endpoint ACLs Tutorial]]
      * [[VirtOAuthSPARQL][SPARQL OAuth Tutorial]]
      * [[VirtTipsAndTricksGuideSPARQLEndpoints][Securing SPARQL endpoints]]
   * [[http://ods.openlinksw.com/wiki/ODS/OdsSPARQLAuth][SPARUL over SPARQL using the http://cname:port/sparql-auth endpoint]]
   * [[VirtAuthServerUI][Virtuoso Authentication Server UI]]
   * [[VirtSPARQLSSL][Manage a SPARQL-WebID based Endpoint]]
   * [[VirtSetupSSL][Configure Virtuoso instance as an X.509 Certificate Authority and HTTPS listener]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSSetupSSL][Configure Virtuoso+ODS instance as an X.509 Certificate Authority and HTTPS listener]]  
   * [[http://ods.openlinksw.com/wiki/ODS/VirtODSSecurityWebID][WebID Protocol Support in OpenLink Data Spaces]].
   * Manage ODS Datadspaces Objects WebID Access Control Lists (ACLs):
      * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebID][ODS Briefcase WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebIDPerson][Person Entity WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebIDGroup][Group Entity WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebIDPublic][Public WebID based ACL Guide]]      
      * [[http://ods.openlinksw.com/wiki/ODS/ODSFeedManagerWebIDACL][ODS Feed Manager WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSFeedManagerWebIDACLPerson][Person Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSFeedManagerWebIDACLGroup][Group Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSFeedManagerWebIDACLPublic][Public Specific ACL for anyone with a WebID]]
      * [[http://ods.openlinksw.com/wiki/ODS/ODSCalendarWebIDACL][ODS Calendar WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSCalendarWebIDACLPerson][Person Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSCalendarWebIDACLGroup][Group Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSCalendarWebIDACLPublic][Public Specific ACL for anyone with a WebID]]
      * [[http://ods.openlinksw.com/wiki/ODS/ODSBookmarksWebIDACL][ODS Bookmark Manager WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBookmarksWebIDACLPerson][Person Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBookmarksWebIDACLGroup][Group Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBookmarksWebIDACLPublic][Public Specific ACL for anyone with a WebID]]
      * [[http://ods.openlinksw.com/wiki/ODS/ODSAddressBookWebIDACL][ODS Addressbook  WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSAddressBookWebIDACLPerson][Person Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSAddressBookWebIDACLGroup][Group Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSAddressBookWebIDACLPublic][Public Specific ACL for anyone with a WebID]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSPkiSetup][Guide for Set up a X.509 certificate issuer and HTTPS listener and generate ODS user certificates.]]
   * [[http://ods.openlinksw.com/wiki/ODS/VirtODSPubSubHub][Setting up PubSubHub in ODS]]
   * [[http://ods.openlinksw.com/wiki/ODS/VirtPubSubHub][PubSubHubBub Demo Client Example]]
   * [[http://ods.openlinksw.com/wiki/ODS/VirtFeedPubSubHub][Feed subscription via PubSubHub protocol Example ]]
   * [[http://ods.openlinksw.com/wiki/ODS/VirtPubSubHubACL][Setting Up PubSubHub to use WebID Protocol or IP based control lists]]
   * [[http://ods.openlinksw.com/wiki/ODS/OdsKeyImport][CA Keys Import using Conductor]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSGenerateX509Certificate][Generate an X.509 Certificate hosted WebID Guide]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSGenerateWebIDX509CertOSKeystore][Generate an X.509 Certificate (with a WebID watermark) to be managed by host operating system keystore]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSGenerateWebIDX509CertBrsKeystore][Generate an X.509 Certificate (with a WebID watermark) to be managed by a browser-based keystore]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSWebIDIdP][Using Virtuoso's WebID Verification Proxy Service with a WebID-bearing X.509 certificate]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSWebIDIdpProxy][Using Virtuoso's WebID Identity Provider (IdP) Proxy Service with an X.509 certificate]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebIDShareFile][ODS Briefcase WebID Protocol Share File Guide]]
   * [[http://esw.w3.org/topic/foaf+ssl][WebID Protocol Specification]]
   * [[https://foaf.me/simpleLogin.php][Test WebID Protocol Certificate page]]
   * [[http://test.foafssl.org/cert/][WebID Protocol Certificate Generation page]]