%VOSWARNING%


---+Virtuoso CVS

<font size="+2"><i><b>Note:</b> This page has been left in place for historical purposes. Active Virtuoso code development is [[VOSGIT][now found on GitHub]], not <nop>SourceForge. Please change any relevant bookmarks.</i></font>

---++Introduction

This document describes how to checkout a copy of the CVS tree for development purposes. It also lists the packages that need to be installed prior to generating the necessary scripts and Makefiles to build the project.

CVS access is only needed for developers who want to actively track progress of the Virtuoso source code and contribute bug-fixes or enhancements to the project. It requires basic knowledge about the general layout of open source and GNU projects, the use of <code>autoconf</code> and <code>automake</code>, etc., which is beyond the scope of this document. If you have any questions, please email us at [[mailto:vos.admin@openlinksw.com][vos.admin@openlinksw.com]].


---+CVS Archive Server Access

OpenLink currently provides read-only CVS archive access through the SourceForge.net servers:
<verbatim>
$ cvs -d:pserver:anonymous@virtuoso.cvs.sourceforge.net:/cvsroot/virtuoso login    (the password is blank)
</verbatim>


To check-out a particular branch choose one of:

   * v6 development branch:
<verbatim>
$ cvs -z3 -d:pserver:anonymous@virtuoso.cvs.sourceforge.net:/cvsroot/virtuoso co -rV6_0_0-DEVEL virtuoso-opensource
</verbatim>

   * v5 development branch:
<verbatim>
$ cvs -z3 -d:pserver:anonymous@virtuoso.cvs.sourceforge.net:/cvsroot/virtuoso co -rV5_0-DEVEL virtuoso-opensource
</verbatim>

   * For a specific version, such as 6.1.4:
<verbatim>
$ cvs -z3 -d:pserver:anonymous@virtuoso.cvs.sourceforge.net:/cvsroot/virtuoso co -rVOS-6_1_4 virtuoso-opensource
</verbatim>


---+Package Dependencies

To generate the configure script and all other build files necessary, please make sure the following packages and recommended versions are installed on your system.

| Package | Version | From |
| autoconf |  2.57 | http://www.gnu.org/software/autoconf/ |
| automake |  1.6.3 | http://www.gnu.org/software/automake/ |
| libtool |  1.5 | http://www.gnu.org/software/libtool/ |
| flex |  2.5.4 | http://www.gnu.org/software/non-gnu/flex/ |
| bison |  1.35 | http://www.gnu.org/software/bison/ |
| gperf |  2.7.2 | http://www.gnu.org/software/gperf/ |
| gawk |  3.1.1 | http://www.gnu.org/software/gawk/ |
| m4 |  1.4.1 | http://www.gnu.org/software/m4/ |
| make |  3.79.1 | http://www.gnu.org/software/make/ |
| <nop>OpenSSL |  0.9.7 | http://www.openssl.org/ |

Of course, you will also need any GNU packages required by these. The <code>autogen.sh</code> and <code>configure</code> scripts check for the presence and right version of some of the required components.

The above versions are the minimum recommended versions of these packages. Older version of these packages can sometimes be used, but could cause build problems.

To check the version number of the tools installed on your system, use one of the following commands:

<verbatim>$ autoconf --version
$ automake --version
$ libtoolize --version
$ flex --version
$ bison --version
$ gperf --version
$ gawk --version
$ m4 --version
$ make --version
$ openssl version
</verbatim>

---++Diskspace Requirements

The build produces a demo database and Virtuoso application packages that are quite large. At least 800 MB of free space should be available in the build file system.

When running <b><code>make install</code></b>, the target file system should have about 460 MB free. By default, the install target directories are under <code><nowiki>/usr/local/</nowiki></code>, but you can specify a different target if you wish --
<verbatim>
$ ./configure --prefix=/path/to/dir
</verbatim>

The minimum working configuration consists of the server executable and config files plus database, no more than a few MB for the server executable, depending on platform and options.


---++Generate build files

To generate the <code>configure</code> script and all related build files, use use the supplied script in your CVS checkout directory:
<verbatim>
$ ./autogen.sh
</verbatim>

If the above command succeed without any error messages, please use the following command to check out all the options you can use:
<verbatim>
$ ./configure --help
</verbatim>

Certain build targets are only enabled when the <code>--enable-maintainer-mode</code> flag is added to configure.

Please read the files <code>INSTALL</code> and <code>README</code> in this directory for further information on how to configure the package and install it on your system.

---++Submitting fixes and enhancements

Patches and new contributions can be submitted as diffs from the current CVS archive by:
<verbatim>
$ cvs add newfiles
$ cvs -z3 diff -uN > diffs
</verbatim>

Patches and contributions can be sent to the <nop>OpenLink Virtuoso source archive manager at [[mailto:vos.admin@openlinksw.com][vos.admin@openlinksw.com]] to be included the next distribution. Please provide accompanying documentation on which bugs are fixed or new features are introduced.
