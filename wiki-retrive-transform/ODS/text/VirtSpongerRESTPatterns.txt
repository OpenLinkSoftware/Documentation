%META:TOPICPARENT{name="VOSIndex"}%


---+Usage of the Sponger Middleware via REST patterns

---++What?

How to interact with the Sponger via REST patterns.

---++Why?
Delegation and proxies are part of the Internet and Web's federated architecture. Thus, developers of RESTful applications benefit immensely from the ability to leverage Sponger functionality via delegation to it as a proxy. 

Two proxies are available: /about (deprecated) and /describe. /about provides a simple RDF browsing interface, /describe exposes a functionally richer faceted browser.

---++How?

The following table presents list of the supported URL parameters:


|*Parameter*|*Value*|*Description*|*Example*|
|<b>sr</b> <br/>(/describe)<br/><br/><b>refresh</b><br/>(/about)| clean |<b>Use</b>: Clear the target graph before sponging<br/><br/>The 'clean' usage explicitly clears the target graph i.e. will cause the Sponger to clear it's cache even if it is marked to be in use.<br/>Thus, if the fetch cache is for some reason left in an inconsistent state, for instance by a shutdown during Network Resource fetching, then 'clean' is required as it doesn't check the cache state beforehand.<br/><b>Note</b>: <br/>* must be used with caution as other threads may be doing fetching of network resources at same time. <br/>* refresh must be used in tandem with @Lookup@ i.e. &@Lookup@=&refresh=clean |Explicitly clear the graph <br/><br/>[[http://linkeddata.uriburner.com/describe?url=https%3A%2F%2Ftwitter.com%2Fkidehen&sponger:get=add&sr=clean][/describe]] <br/>[[http://linkeddata.uriburner.com/about/html/https://twitter.com/kidehen?@Lookup@=&refresh=clean][/about]]|
|<b>sponger:get</b>|add | <b>Use</b>: When adding new triples, do not overwrite existing triples with the same subject and predicate<br/><br/>Add new triples to named graphs, progressively. This is the default value for the parameter <code>sponger:get</code>. May be used together with refresh=&lt;seconds&gt; to override the default cache expiration (which is based on a cache expiry date/time calculated from information in the HTTP headers returned from a previous sponge of the target data source). | Add new triples and refresh on every 10 seconds<br/><br/>[[http://linkeddata.uriburner.com/describe/?url=https%3A%2F%2Ftwitter.com%2Fkidehen?sponger:get=add&sr=10][/describe]]<br/>[[http://linkeddata.uriburner.com/about/html/https/twitter.com/kidehen?sponger:get=add&@Lookup@=&refresh=10][/about]]|
|<b>sponger:get</b>|soft |<b>Use</b>: Add triples only if the target graph is initially empty<br/><br/>Network Resource Fetch data subject to the cache invalidation policies and associated rules of instance. May be used together with refresh=&lt;seconds&gt; to override the default cache expiration. | Network Resource Fetch data with option <b>soft</b> and refresh on every 10 seconds<br/><br/>[[http://linkeddata.uriburner.com/describe/?url=https%3A%2F%2Ftwitter.com%2Fkidehen?sponger:soft=add&sr=10][/describe]]<br/>[[http://linkeddata.uriburner.com/about/html/https/twitter.com/kidehen?sponger:get=soft&@Lookup@=&refresh=10][/about]]|
|<b>sponger:get</b>|replace |<b>Use</b>: When adding new triples, overwrite existing triples with the same subject and predicate<br/><br/>Replace subject to cache invalidation policy and rules, but coverage includes non fetched triples if such exist in a given named graph. may be used together with refresh=&lt;seconds&gt; to override the default cache expiration. | Replace data and refresh on every 10 seconds<br/><br/>[[http://linkeddata.uriburner.com/describe/?url=https%3A%2F%2Ftwitter.com%2Fkidehen?sponger:get=replace&sr=10][/describe]]<br/>[[http://linkeddata.uriburner.com/about/html/https/twitter.com/kidehen?sponger:get=replace&@Lookup@=&refresh=10][/about]]|



---++Related

   * [[VirtSpongerCartridgeProgrammersGuide_Part3][Sponger Queue API]]
   * [[http://virtuoso.openlinksw.com/Whitepapers/html/VirtSpongerWhitePaper.html][Technical White Paper]]
   * [[VirtSpongerCartridgeSupportedDataSources][Supported Virtuoso Sponger Cartridges]]
   * [[SPARQLSponger][SPARQL Sponger]]
   * [[http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtSpongerCartridgeProgrammersGuide#RDF%20Proxy%20Service][Virtuoso Linked Data Middleware REST Patterns]]
   * [[VirtSpongerCartridgeSupportedDataSourcesMetaRESTExamples][Parametrized Examples of Meta Cartridge Usage via REST Request]]
   * [[VirtSpongerCartridgeRDFExtractor][Sponger Cartridge RDF Extractor]]
   * [[RDFMappers][ Extending SPARQL IRI Dereferencing with RDF Mappers]]
   * [[VirtSpongerCartridgeProgrammersGuide][Programmer Guide for Virtuoso Linked Data Middleware ("Sponger")]]
   * [[VirtProgrammerGuideRDFCartridge][Create RDF Custom Cartridge Tutorial]]
   * [[VirtSpongerCartridgeSupportedDataSources][OpenLink-supplied Virtuoso Sponger Cartridges]]
   * [[VirtAuthServerUI][Virtuoso Authentication Server]]
   * [[VirtOAuthSPARQL][Virtuoso SPARQL OAuth Tutorial]]
   * [[VirtSpongerACL][Virtuoso Sponger Access Control List (ACL) Setup]]
   * [[VirtSPARQLSecurityWebID][WebID Protocol & SPARQL Endpoint ACLs Tutorial]]
   * [[http://docs.openlinksw.com/virtuoso/virtuososponger.html][Virtuoso Documentation]]