%META:TOPICPARENT{name="OATDOCIndex"}%
---+ ws.js

Web Services (WSDL) interface.

%TOC%

---++ Functions

---+++ OAT.WS.getEndpoint(wsdlURL, callback)

Asynchronously retrieve the endpoint URL for a given <tt>wsdlURL</tt>. Will <tt>callback(url)</tt> when retrieved.

---+++ OAT.WS.listServices(wsdlURL, callback)

Asynchronously retrieve a list of valid services for a given <tt>wsdlURL</tt>. Will <tt>callback(servicesArray)</tt> when retrieved.

---+++ OAT.WS.listParameters(wsdlURL, service, callback)

Asynchronously retrieve input and output values for given <tt>wsdlURL</tt> and service. Will <tt>callback(inputObject, outputObject) </tt> when retrieved.

---+++ OAT.WS.invoke(wsdlURL, service, callback, options)

Invokes a web <tt>service</tt>, with WSDL file located at <tt>wsdlURL</tt>. Input values are specified in <tt>options</tt>; will <tt>callback(outputObject)</tt> when finished. Options:

   * <tt><b>type</b><tt> - (default <tt>OAT.AJAX.TYPE_XML</tt>)
   * <tt><b>headers</b></tt> - (default <tt>{"SOAPAction":service}</tt>)

---+++Example

<verbatim>
/* Sample code for google search */
var wsdl = "/google/services.wsdl";
var serviceName = "doGoogleSearch";
var inputObject = {
        doGoogleSearch:{
                key:"IGWnqjhQFHKvB8MdJlVI0GPKDJxZhwBf",
                q:"my query",
                start:0,
                maxResults:10,
                filter:"",
                restrict:"",
                safeSearch:"",
                lr:"",
                ie:"",
                oe:""
        }
}

function callback(outputObject) {
        alert('Data arrived!');
}

OAT.WS.invoke(wsdl, callback, serviceName, inputObject);
</verbatim>

CategoryDocumentation CategoryOAT CategoryOpenSource
