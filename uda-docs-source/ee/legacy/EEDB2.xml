<chapter id="EEDB2" >
  <title>OpenLink ODBC Driver for DB2 (Express Edition) </title>
  <sect1 id="eedb2mac">
    <title>OpenLink ODBC Driver for DB2 (Express Edition) for Mac OS X</title> 
    <sect2 id="eedb2macinstall">
      <title>Installation Guide</title>
      <para> The OpenLink ODBC Driver for DB2 (Express Edition) is
        distributed as a Disk image (DMG) file. Simply double click on the
        disk image 'mul6edb2.dmg' to extract the installer mpkg file:
      </para>
      <figure><graphic
                 fileref="InstallerA_DB2.png"/></figure> 
      <para>Double click on the mpkg file to run the installer and
        following the on screen instruction as indicated below to complete
        the installation:</para>
      <figure><graphic fileref="InstallerB_DB2.png"/></figure>
      <para>
        Installer Welcome Dialog for the OpenLink ODBC Driver for DB2 (Express
        Edition): </para>
      <figure><graphic fileref="Installer1_DB2.png"/></figure> <para>Please
        review the readme file for installation requirements and known
        issues:</para>
      <figure><graphic fileref="Installer2_DB2.png"/></figure>
      <para>Please read the software license agreement before
        continuing your installation:</para>
      <figure><graphic fileref="Installer3_DB2.png"/></figure> 
      <para>Select destination volume for driver installation:</para>
      <figure><graphic fileref="Installer5_DB2.png"/></figure>
      <para>Choose to perform a custom or default installation of the driver:</para>
      <figure><graphic fileref="Installer6_DB2.png"/></figure>
      <para>If you chose the custom option select which of the
        components below are to be installed:</para>
      <figure><graphic fileref="InstallerC_DB2.png"/></figure>
      <para>The software must be installed as a user with administrative privileges on the machine:</para>
      <figure><graphic fileref="Installer7_DB2.png"/></figure>
      <para>After the driver has been installed you will be prompted
        for a license file. If a license file already exists on the
        machine then select the 'use exisiting file' option. A trial
        (try) or full (buy) license can be obtain by selecting the 'try
        and buy' option which loads our online try and buy web page:</para>
      <figure><graphic fileref="Installer8_DB2.png"/></figure>
      <para>To obtain the trial license you must be a registered user
        on the OpenLink Web site and login with the username
        (e-mail address) and password for that user. Click on the
        'Shop' link to visit our online shop cart to purchases a full
        license if required:</para>
      <figure><graphic fileref="InstallerD_DB2.png"/></figure>
      <para>Click on the 'download license' button to obtain the
        license file immediately and save to your desktop.
        Alternatively an auto e-mail will be sent to the registered
        users e-mail address with a link to their OpenLink Data
        Space (ODS)
        where all trial and full license files will be stored in the
        Briefcase for download at a later date.</para>
      <figure><graphic fileref="InstallerE_DB2.png"/></figure>
      <para>Select the license file to be used for the installation:</para>
      <figure><graphic fileref="Installer10_DB2.png"/></figure>
      <para>Installation is complete:</para>
      <figure><graphic fileref="Installer11_DB2.png"/></figure>
    </sect2>
    <sect2 id="eedb2macconf">
      <title>Configuration</title>
      <para>To configure an ODBC DSN, run the
        OpenLink iODBC Administrator located in the
        /Applications/iODBC folder:
      </para>
      <figure><graphic fileref="DSN0_AdminStart.png"/></figure>
      <para>Click on the add button to Choose the ODBC Driver the DSN
        should be created for:</para>
      <figure><graphic fileref="DSN1_AdminStart.png"/></figure>
      <para>Choose the OpenLink DB2 Driver (Express Edition) v6.0 from
        the list of available drivers:</para>
      <figure><graphic fileref="DSN3_SelectDB2Driver.png"/></figure>
      <para>In the Data Source tab, select a suitable DSN name and
        optional description for the Data Source to be created:</para>
      <figure><graphic fileref="DSN5_DB2Name.png"/></figure>
      <para>The Connection Tab request the minimum paramters required
        to make a connection to the target database:</para>
      <figure><graphic fileref="DSN7_DB2Host.png"/></figure>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem>Host - the hostname of the server on which the DB2
          database is running</listitem>
        <listitem>Port - the TCP port on which DB2 listens</listitem>
        <listitem>Database - a valid DB2 database alias</listitem>
        <listitem>Username - the username of a valid DB2 user</listitem>
        <listitem>Advanced - Additional optional configuration
          paramters:</listitem>
      </itemizedlist>
      <table><title></title><tgroup><thead/><tbody>
            <row>
              <entry>
                <emphasis>FullyMaterializeLobData</emphasis></entry>
              <entry>Indicates whether the driver retrieves LOB locators for
                FETCH operations. The data type of this property is boolean. If
                the value is true, LOB data is fully materialized within the
                JDBC driver when a row is fetched. If this value is false, LOB
                data is streamed. The driver uses locators internally to
                retrieve LOB data in chunks on an as-needed basis It is highly
                recommended that you set this value to false when you retrieve
                LOBs that contain large amounts of data. The default is
                true.</entry>
            </row>
            <row>
              <entry>
                <emphasis>ResultSetHoldability</emphasis></entry>
              <entry>Specifies whether cursors remain open after a commit
                operation. Valid values are 1 - HOLD_CURSORS_OVER_COMMIT or 2 -
                CLOSE_CURSORS_AT_COMMIT.</entry>
            </row>
            <row>
              <entry>
                <emphasis>CliSchema</emphasis></entry>
              <entry>Specifies the schema of the DB/2 shadow catalog tables or
                views that are searched when an application invokes a
                DatabaseMetaData method.</entry>
            </row>
            <row>
              <entry>
                <emphasis>CurrentSchema</emphasis></entry>
              <entry>Specifies the default schema name that is used to qualify
                unqualified database objects in dynamically prepared SQL
                statements. This value of this property sets the value in the
                CURRENT SCHEMA special register on a server other than a DB2
                UDB for z/OS server. Do not set this property for a DB2 UDB for
                z/OS server.</entry>
            </row>
            <row>
              <entry>
                <emphasis>CurrentSQLID</emphasis></entry>
              <entry>Specifies: The authorization ID that is used for
                authorization checking on dynamically prepared CREATE, GRANT,
                and REVOKE SQL statements. The owner of a table space,
                database, storage group, or synonym that is created by a
                dynamically issued CREATE statement. The implicit qualifier of
                all table, view, alias, and index names specified in dynamic
                SQL statements.</entry>
            </row>
            <row>
              <entry>
                <emphasis>CurrentFunctionPath</emphasis></entry>
              <entry>Specifies the SQL path that is used to resolve unqualified
                data type names and function names in SQL statements that are
                in JDBC programs. The data type of this property is String. For
                a DB2 UDB for Linux, UNIX and Windows server, the maximum
                length is 254 bytes. The value is a comma-separated list of
                schema names. Those names can be ordinary or delimited
                identifiers.</entry>
            </row>
            <row>
              <entry>
                <emphasis>CurrentLockTimeout</emphasis></entry>
              <entry>Directs DB2 UDB for Linux, UNIX and Windows servers to
                wait indefinitely for a lock or to wait for the specified
                number of seconds for a lock when the lock cannot be obtained
                immediately. The data type of this property is int. A value of
                zero means no wait. A value of -1 means to wait indefinitely. A
                positive integer indicates the number of seconds to wait for a
                lock.</entry>
            </row>
            <row>
              <entry>
                <emphasis>JdbcCollection</emphasis></entry>
              <entry>Specifies the collection ID for the packages that are used
                by an instance of the DB2 Universal JDBC Driver at run time.
                The data type of jdbcCollection is String. The default is
                NULLID.</entry>
            </row>
            <row>
              <entry>
                <emphasis>CurrentPackageSet</emphasis></entry>
              <entry>Specifies the collection ID to search for DB2 packages for
                the DB2 Universal JDBC Driver. The data type of this property
                is String. The default is NULLID. If currentPackageSet is set,
                its value overrides the value of jdbcCollection.</entry>
            </row>
            <row>
              <entry>
                <emphasis>CurrentPackagePath</emphasis></entry>
              <entry>Specifies a comma-separated list of collections on the
                server. The DB2 server searches these collections for the DB2
                packages for the DB2 Universal JDBC Driver. The precedence
                rules for the currentPackagePath and currentPackageSet
                properties follow the precedence rules for the DB2 CURRENT
                PACKAGESET and CURRENT PACKAGE PATH special registers.</entry>
            </row>
            <row>
              <entry>
                <emphasis>SecurityMechanism</emphasis></entry>
              <entry>Specifies the DRDA security mechanism. Possible values
                are: 3 - User ID and password, 4 - User ID only, 7 - User ID,
                encrypted password,9 - Encrypted user ID and password, 11 -
                Kerberos. If this property is specified, the specified security
                mechanism is the only mechanism that is used. If the security
                mechanism is not supported by the connection, an exception is
                thrown.</entry>
            </row>
            <row>
              <entry>
                <emphasis>KerberosServerPrincipal</emphasis></entry>
              <entry>For a data source that uses Kerberos security, specifies
                the name that is used for the data source when it is registered
                with the Kerberos Key Distribution Center (KDC).</entry>
            </row>
            <row>
              <entry>
                <emphasis>DeferPrepares</emphasis></entry>
              <entry>Specifies whether to defer prepare operations until run
                time. The data type of this property is boolean.</entry>
            </row>
            <row>
              <entry>
                <emphasis>ClientUser</emphasis></entry>
              <entry>Specifies the current client user name for the connection.
                This information is for client accounting purposes. Unlike the
                connection user name, this value can change during a
                connection. For a DB2 UDB for Linux, UNIX and Windows server,
                the maximum length is 255 bytes.</entry>
            </row>
            <row>
              <entry>
                <emphasis>ClientWorkstation</emphasis></entry>
              <entry>Specifies the workstation name for the current client for
                the connection. This information is for client accounting
                purposes. This value can change during a connection. The data
                type of this property is String. For a DB2 UDB for Linux, UNIX
                and Windows server, the maximum length is 255 bytes.</entry>
            </row>
            <row>
              <entry>
                <emphasis>ClientApplicationInformation</emphasis></entry>
              <entry>Specifies application information for the current client
                for the connection. This information is for client accounting
                purposes. This value can change during a connection. The data
                type of this property is String. For a DB2 UDB for Linux, UNIX
                and Windows server, the maximum length is 255 bytes.</entry>
            </row>
            <row>
              <entry>
                <emphasis>ClientAccountingInformation</emphasis></entry>
              <entry>Specifies accounting information for the current client
                for the connection. This information is for client accounting
                purposes. This value can change during a connection. The data
                type of this property is String. For a DB2 UDB for Linux, UNIX
                and Windows server, the maximum length is 255 bytes.</entry>
            </row>
      </tbody></tgroup></table><para>As indiacted above the paramters of the options and
        preferences tabs are not required for a basic connection:</para>
      <figure><graphic fileref="DSN10_DB2Options.png"/></figure>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Row Buffer Size</emphasis> - This attribute
          specifies the number of records to be transported over the network in
          a single network hop. Values can range from 1 to 99.</listitem>
        <listitem><emphasis>Hide Login Dialog</emphasis> - Suppress the ODBC
          "Username" and "Password" login dialog box when interacting with your
          ODBC DSN from within an ODBC compliant application.</listitem>
        <listitem><emphasis>Read Only connection</emphasis> - Specify whether
          the connection is to be "Read-only". Make sure the checkbox is
          unchecked to request a "Read/Write" connection.</listitem>
        <listitem><emphasis>Drop Catalog from Meta calls</emphasis> - Enable
          this option to have the catalog name not appear for tables, views and
          procedures when requesting database meta-data.</listitem>
        <listitem><emphasis>Drop Schema from Meta calls</emphasis> - Enable
          this option to have the schema-name not appear for tables, views and
          procedures when requesting database meta-data.</listitem>
        <listitem><emphasis>SQLStatistics disabled</emphasis> - Check this box
          to have SQLStatistics() return an empty resultset. Use this if the
          underlying database does not support retrieving statistics about a
          table (e.g. what indexes there are on it).</listitem>
        <listitem><emphasis>No support of quoted identifier</emphasis> - If it
          is set, the call SQLGetInfo<ulink url="/bin/edit/Main/SQLGetInfo?topicparent=Main.UdaEeInstallConfigDB2"/> for
          'SQL_IDENTIFIER_QUOTE_CHAR' will return the space (" "). It
          can be used if DBMS doesn't support quoted SQL like select *
          from "account"</listitem>
        <listitem><emphasis>No support of search string escape</emphasis> - If
          it is set, the call SQLGetInfo<!-- ulink url="/bin/edit/Main/SQLGetInfo?topicparent=Main.UdaEeInstallConfigDB2"/ --> for
          'SQL_LIKE_ESCAPE_CLAUSE' will return the space (" "). It can
          be used if DBMS doesn't support SQL escape patterns</listitem>
        <listitem><emphasis>Patch of NULL size of SQL_CHAR</emphasis> - If set
          this option overrides the size of SQL_CHAR column type
          returned by the database with the value set in the text box
          (in bytes). With the default value of 0 the driver uses the
          size returned by the database.</listitem>
        <listitem><emphasis>SQL_DBMS Name</emphasis> - Manually override the
          SQLGetInfo (SQL_DBMS_NAME) response returned by the driver. This is
          know to be required for products like Microsoft InfoPath for which
          the return the value should be "SQL Server".</listitem>
      </itemizedlist>
      <figure><graphic fileref="DSN11_DB2Preferences.png"/></figure>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Initialization SQL</emphasis> - Lets you specify a
          file containing SQL statements that will be run against the database
          upon connection, automatically.</listitem>
        <listitem><emphasis>Cursor Sensitivity</emphasis> - Enables or disables
          the row version cache used with dynamic cursors. When dynamic cursor
          sensitivity is set high, the Cursor Library calculates checksums for
          each row in the current rowset and compares these with the checksums
          (if any) already stored in the row version cache for the same rows
          when fetched previously. If the checksums differ for a row, the row
          has been updated since it was last fetched and the row status flag is
          set to SQL_ROW_UPDATED. The row version cache is then updated with
          the latest checksums for the rowset. From the user's point of view,
          the only visible difference between the two sensitivity settings is
          that a row status flag can never be set to SQL_ROW_UPDATED when the
          cursor sensitivity is low. (The row status is instead displayed as
          SQL_ROW_SUCCESS.) In all other respects, performance aside, the two
          settings are the same - deleted rows don't appear in the rowset,
          updates to the row since the row was last fetched are reflected in
          the row data, and inserted rows appear in the rowset if their keys
          fall within the span of the rowset. If your application does not need
          to detect the row status SQL_ROW_UPDATED, you should leave the 'High
          Cursor Sensitivity' checkbox unchecked, as performance is improved.
          The calculation and comparison of checksums for each row fetched
          carries an overhead. If this option is enabled, the table oplrvc must
          have been created beforehand using the appropriate script for the
          target database.</listitem>
        <listitem><emphasis>MaxRows Override</emphasis> - Allows you to define
          a limit on the maximum number of rows to returned from a query. The
          default value of 0 means no limit.</listitem>
        <listitem><emphasis>Disable AutoCommit</emphasis> - Change the default
          commit behaviour of the OpenLink Lite Driver. The default mode is
          AutoCommit mode (box unchecked).</listitem>
        <listitem><emphasis>Disable Rowset Size Limit</emphasis> - Disable the
          limitation enforced by the cursor library. The limitation is enforced
          by default to prevent the Driver claiming all available memory in the
          event that a resultset is generated from an erroneous query is very
          large. The limit is normally never reached.</listitem>
        <listitem><emphasis>Defer fetching of long data</emphasis> - Defer
          fetching of LONG (BINARY, BLOB etc.) data unless explicitly requested
          in query. This provides significant performance increase when fields
          in query does not include LONG data fields.</listitem>
        <listitem><emphasis>Multiple Active Statements Emulation</emphasis> -
          Enables use of Multiple Active statements in an ODBC application even
          if the underlying database does not allow this, as it is emulated in
          the driver.</listitem>
      </itemizedlist>
      <para>Click on the 'Test Data Source' button to make a
        connection to the database to verify connectivity:</para>
      <figure><graphic fileref="DSN12_DB2Test.png"/></figure>
      <para>Enter a vaild username and pasword for the database:</para>
      <figure><graphic fileref="DSN13_DB2Login.png"/></figure>
      <para>A successful connection to the database has been made:</para>
      <figure><graphic fileref="DSN14_DB2Success.png"/></figure>
    </sect2>
  </sect1>
  <sect1 id="eedb2win">
    <title>OpenLink ODBC Driver for DB2 (Express Edition) for
      Windows</title> 
    <sect2 id="eedb2wininst"> <title>Installation</title>
      <para>The OpenLink ODBCDriver for DB2 (Express Edition) is distributed as a Windows MSI installer. Simply double click the installer 'ntl6edb2.msi' to commence the installation: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst00.png"/>
        </figure>
      </para>
      <para>Installer Welcome Dialog for the OpenLink ODBCDriver for DB2 (Express Edition): </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst01.png"/>
        </figure>
      </para>
      <para>Please read the software license agreement and accept before continuing your installation: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst02.png"/>
        </figure>
      </para>
      <para>Before installation, you will be prompted for a license file. If a license file already exists on the machine, then select the 'use exisiting file' option. A trial (try) or full (buy) license can be obtained by selecting the 'try and buy' option which loads OpenLink's online try and buy web page: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst03.png"/>
        </figure>
      </para>
      <para>To obtain the trial license, you must be a registered user on the OpenLinkWeb site and login with the username (e-mail address) and password for that user name. Click on the 'Shop' link to visit OpenLink's online shop cart to purchase a full license, if required. </para>
      <para>Click on the 'download license' button to immediately obtain the license file and save it to your desktop. Alternatively, an auto-generated e-mail will be sent to your registered user e-mail address with a link to your OpenLinkData Space ( ODS), which contains all trial and full licenses in the Briefcase for download at a later date. </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst04.png"/>
        </figure>
      </para>
      <para>Select the license file to be used for the installation: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst05.png"/>
        </figure>
      </para>
      <para>Choose to perform a custom, typical or complete installation of the driver: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst06.png"/>
        </figure>
      </para>
      <para>Select the features to be installed: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst07.png"/>
        </figure>
      </para>
      <para>Click the install button to begin installation of the components: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst12.png"/>
        </figure>
      </para>
      <para>Installation in progress: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst11.png"/>
        </figure>
      </para>
      <para>The software installation is complete and ready for use: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2inst10.png"/>
        </figure>
      </para>
    </sect2>
    <sect2 id="eedb2winconf"> <title>Configuration</title>
      <para>To configure an ODBCDSN, run the ODBCAdministrator located in the Administrative Tools section of the Control Panel: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf01.png"/>
        </figure>
      </para>
      <para>Click on the Drivers tab to confirm the OpenLinkDB2 ODBCDriver [Express Edition][6.0] has been successfully installed: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf02.png"/>
        </figure>
      </para>
      <para>From either the User or System DSN tabs, click on the Add button and select the OpenLinkDB2 ODBCDriver [Express Edition][6.0] from the list presented: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf03.png"/>
        </figure>
      </para>
      <para>In the Data Source tab, select a suitable DSN name and optional description for the Data Source to be created: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf04.png"/>
        </figure>
      </para>
      <para>The Connection tab requests the minimum parameters required to make a connection to the target database: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf05.png"/>
        </figure>
      </para>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Host</emphasis>: This is the fully qualified
          hostname or IP address of the machine hosting the DBMS you
          wish to access, e.g., dbms-server.example.com, or
          192.168.155.123. Any hostname which will be resolved by your
          local DNS
          is acceptable.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Port</emphasis>: This is the port on which DB2 is
          listening</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Database</emphasis>: This is the name of a valid
          DB2 database alias to which you want to connect</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Login ID</emphasis>: This is a valid user for the
          DB2 database</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Password</emphasis>: This is a valid password for
          the DB2 database</listitem>
      </itemizedlist>
      <para>Click next to verify that all settings are correct or uncheck the check box to delay testing to a later stage. </para>
      <para>The advanced button displays additional optional parameters that can be configured: </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf06.png"/>
        </figure>
      </para>
      <table>
        <title/>
        <tgroup>
          <thead/>
          <tbody>
            <row>
            </row>
            <row>
              <entry>
                FullyMaterializeLobData</entry>
              <entry>Indicates whether the driver
                retrieves LOB locators for FETCH operations. The data type
                of this propery is boolean. If the value is true, LOB data
                is fully materialized within the JDBC driver
                when a row is fetched. If this value is false, LOB data is
                streamed.</entry>
            </row>
            <row>
              <entry>
                ResultSetHoldability</entry>
              <entry>Specifies whether cursors remain open
                after a commit operation. Valid values are 1-
                HOLD_CURSORS_OVER_COMMIT or 2 -
                CLOSE_CURSORS_AT_COMMIT.</entry>
            </row>
            <row>
              <entry>CLiSchema</entry>
              <entry>Specifies the schema of the DB2
                shadow catalog tables or views that are searched when an
                application invokes a DatabaseMetaData
                method.</entry>
            </row>
            <row>
              <entry>
                CurrentSchema</entry>
              <entry>Specifies the default schema name
                that is used to qualify unqualified database objects in
                dynamically prepared SQL statements. This value of this property
                sets the value in the CURRENT SCHEMA special register on a
                server other an a DB2 UDB for z/OS server. Do not set this
                property for a DB2 UDB for z/OS server.</entry>
            </row>
            <row>
              <entry>
                CurrentSQLID</entry>
              <entry>Specifies the authorization ID that
                is used for authorization checking on dynamically prepared
                CREATE, GRANT, and REVOKE SQL statements. The owner of a table
                space, database, storage group, or synonym that is created
                by a dynamically issued CREATE statement. The implicit
                qualifier of all table, view, alias, and index names
                specified in dynamic SQL statements.</entry>
            </row>
            <row>
              <entry>
                CurrentFunctionPath</entry>
              <entry>Species th SQL path that is
                used to resolve unqualified data type names and function
                names in SL statements that are in JDBC programs.
                The data type of this property is String. For a DB2 UDB for
                Linux, UNIX, and Windows server, the maximum length is 254
                bytes. The value is a comma-separated list of schema names.
                Those names can be ordinary or delimited identifiers.</entry>
            </row>
            <row>
              <entry>
                CurrentLockTimeout</entry>
              <entry>Directs DB2 UDB for Linux, UNIX, and
                Windows servers to wait indefinitely for a lock or to wait
                for the specified number of seconds for a lock when the
                lock cannot be obtained immediately. The data type of this
                property is Int. A value of zero means no wait. A value of
                -1 means to wait indefinitely. A postive integer indicates
                the number of seconds to wait for a lock.</entry>
            </row>
            <row>
              <entry>
                JdbcCollection</entry>
              <entry>Specifies the collection ID for the
                packages that are used by an instance of the DB2 Universal
                JDBC
                Driver at run time. The data type of jdbcCollection is
                String. The default is NULLID.</entry>
            </row>
            <row>
              <entry>
                CurrentPackageSet</entry>
              <entry>Specifies the collection ID to search
                for DB2 packages for the DB2 Universal JDBC Driver.
                The data type of this property is String. The default is
                NULLID. If currentPackageSet is set, its value overrides
                the value of jdbcCollection.</entry>
            </row>
            <row>
              <entry>
                CurrentPackagePath</entry>
              <entry>Species a comma-separated list of
                collections on the server. The DB2 server searches these
                collections for the DB2 packages for the DB2 Universal
                JDBC
                Driver. The precedence rules for the currentPackagePath and
                currentPackageSet properties follow the precedence rules
                for the DB2 CURRENT PACKAGESET and CURRENT PACKAGE PATH
                special registers.</entry>
            </row>
            <row>
              <entry>
                SecurityMechanism</entry>
              <entry>Specifies theDRDA security mechanism.
                Possible values are: 3 - User ID and password, 4 - User ID
                only, 7 - User ID, encrypted password, 9 - Encrypted user
                ID and password, 11 - Kerberos. If this property is
                specified, the specified security mechanism is the only
                mechanism that is used. If the security mechanism is not
                supported by the connection, an exception is thrown.</entry>
            </row>
            <row>
              <entry>
                KerberosServerPrincipal</entry>
              <entry>For a data source that uses Kerberos
                security, this specifies the name that is used for the data
                source when it is registered with the Kerberos Key
                Distribution Center (KDC).</entry>
            </row>
            <row>
              <entry>
                DeferPrepares</entry>
              <entry>Specifies whether to defer prepare
                operations until run time. The data type of this property
                is boolean.</entry>
            </row>
            <row>
              <entry>ClientUser</entry>
              <entry>Specifies the current client user
                name for the connection. This information is for client
                accounting purposes. Unlike the connection user name, this
                value can change during a connection. For a DB2 UDB for
                Linux, UNIX, and Windows servers, the maximum length is 255
                bytes.</entry>
            </row>
            <row>
              <entry>
                ClientWorkstation</entry>
              <entry>Specifies the workstation name for
                the current client for the connection. This information is
                for client accounting purposes. This value can change
                during a connection. The data type of this property is
                String. For a DB2 UDB for Linux, UNIX, and Windows servers,
                the maximum length is 255 bytes.</entry>
            </row>
            <row>
              <entry>
                ClientApplicationInformation</entry>
              <entry>Specifies the application information
                for the current client for the connection. This information
                is for client accounting purposes. This value can change
                during a connection. The data type of this property is
                String. For a DB2 UDB for Linux, UNIX, and Windows servers,
                the maximum length is 255 bytes.</entry>
            </row>
            <row>
              <entry>
                ClientAccountingInformation</entry>
              <entry>Specifies accounting information for
                the current client for the connection. This information is
                for client accounting purposes. This value can change
                during a connection. The data type of this property is
                String. For a DB2 UDB for Linux, UNIX, and Windows servers,
                the maximum length is 255 bytes.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>As indicated above, the parameters on the options and preferences tabs are not required for a basic connection. </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf07.png"/>
        </figure>
      </para>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Drop Catalog name from DatabaseMetaData
            calls</emphasis> - Enable this option to have the catalog name
          not appear for tables, views, and procedures when requesting
          database meta-data.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Drop Schema name from DatabaseMetaData
            calls</emphasis> - Enable this option to have the schema-name
          not appear for tables, views, and procedures when requesting
          database meta-data.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Return an empty ResultSet for
            SQLStatistics</emphasis> - Check this box to have
          SQLStatistics() return an empty resultset. Use this if the
          underlying database does not support retrieving statistics
          about a table, e.g., what indexes there are on it.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Disable support of quoted identifier</emphasis> -
          If it is set, the call SQLGetInfo for
          'SQL_IDENTIFIER_QUOTE_CHAR' will return the space (" "). It
          can be used if the DBMS does not support quoted SQL, e.g., select
          * from "account."</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Disable support of search pattern escape</emphasis>
          - If it is set, the call SQLGetInfo for
          'SQL_LIKE_ESCAPE_CLAUSE' will return the space (" "). It can
          be used if the DBMS does not support SQL escape
          patterns.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Patch of NULL size of SQL_CHAR</emphasis> - If set,
          this option overrides the size of SQL_CHAR column type
          returned by the database with the value set in the text box
          (in bytes). With the default value of 0, the driver uses the
          size returned by the database.</listitem>
      </itemizedlist>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf08.png"/>
        </figure>
      </para>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Read Only connection</emphasis> - Specify whether
          the connection is to be "Read-only". Make sure the checkbox
          is unchecked to request a "Read/Write" connection</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Disable Interactive Login</emphasis> - Suppress the
          ODBC
          "Username" and "Password" login dialog box when interacting
          with your ODBC DSN from within an ODBC compliant
          application.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Row Buffer Size</emphasis> - This attribute
          specifies the number of records to be transported over the
          network in a single network hop. Values can range from 1 to
          99.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Max rows override</emphasis> - Allows you to define
          a limit on the maximum number of rows to be returned from a
          query. The default value of 0 means no limit.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Initial SQL</emphasis> - Lets you specify a file
          containing SQL statements that will be automatically run
          against the database upon connection.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Dynamic Cursor Sensitivity</emphasis> - Enables or
          disables the row version cache used with dynamic cursors.
          When dynamic cursor sensitivity is set high, the Cursor
          Library calculates checksums for each row in the current
          rowset and compares these with the checksums (if any) already
          stored in the row version cache for the same rows when
          fetched previously. If the checksums differ for a row, the
          row has been updated since it was last fetched, and the row
          status flag is set to SQL_ROW_UPDATED. The row version cache
          is then updated with the latest checksums for the rowset.
          From the user's point of view, the only visible difference
          between the two sensitivity settings is that a row status
          flag can never be set to SQL_ROW_UPDATED, when the cursor
          sensitivity is low. (The row status is instead displayed as
          SQL_ROW_SUCCESS.) In all other respects, performance aside,
          the two settings are the same - deleted rows do not appear in
          the rowset, updates to the row since the row was last fetched
          are reflected in the row data, and inserted rows appear in
          the rowset if their keys fall within the span of the rowset.
          If your application does not need to detect the row status
          SQL_ROW_UPDATED, you should leave the 'High Cursor
          Sensitivity' checkbox unchecked, as performance is improved.
          The calculation and comparison of checksums for each row
          fetched carries an overhead. If this option is enabled, the
          table oplrvc must have been created beforehand using the
          appropriate OpenLink script for the target database.</listitem>
      </itemizedlist>
      <para>* <emphasis>Enable logging to the log file:</emphasis>- Specifies the full path to a text file. If the associated checkbox is checked, and a file is passed, the driver will log auto-generate a clientside ODBCtrace. </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf09.png"/>
        </figure>
      </para>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Disable AutoCommit</emphasis> -
          Change the default commit behaviour of the OpenLink
          Driver. The default mode is AutoCommit (box
          unchecked).</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Disable Rowset Size Limit</emphasis> - Disable the
          limitation enforced by the cursor library. The limitation is
          enforced by default to prevent the Driver claiming all
          available memory in the event that a resultset generated from
          an erroneous query is very large. The limit is normally never
          reached.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>Multiple Active Statements Emulation</emphasis> -
          Enables use of Multiple Active statements in an ODBC application
          even if the underlying database does not allow this, as it is
          emulated in the driver.</listitem>
      </itemizedlist>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem><emphasis>SQL_DBMS Name</emphasis> - Manually override the
          SQLGetInfo(SQL_DBMS_NAME)
          response returned by the driver. This is required for
          products like Microsoft InfoPath for which
          the return value must be "SQL Server".</listitem>
      </itemizedlist>
      <para>Click on the <emphasis>Test Data Source</emphasis>button to verify that a successful connection can be made to the database. </para>
      <para>
        <figure>
          <graphic fileref="EEWindb2conf10.png"/>
        </figure>
      </para>
    </sect2>
  </sect1> 
</chapter>
