<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- 
  $Id: JDBCClientClasses_old.xml,v 1.2 2004/11/09 21:49:21 cvs Exp $
  (C)Copyright 1996-2024 OpenLink Software
-->
<chapter id="JDBCClientClasses" >
<title>JDBC Components</title>
<abstract>
  <para>Guide for successfully installing and running the OpenLink JDBC Client 
  Classes.</para>
  <para>The OpenLink Drivers for JDBC enable the development, deployment, and 
  utilization of database independent Java Applications, Applets, Servlets, 
  and Bean Components (collectively called JDBC Clients) that conform to the 
  JDBC 1.1.x, or JDBC 2.0.x specifications from JavaSoft.</para>
  <para>JDBC clients are built by importing the &quot;java.sql.*&quot; 
  collection of classes known as the JDBC Driver Manager interface.  The JDBC 
  Driver Manager uses JDBC URLs to link JDBC clients with JDBC Drivers.  It is 
  important to note that JDBC URLs are JDBC Driver specific. Detailed 
  information regarding JDBC is available from: 
  <ulink url="http://java.sun.com/products/jdbc/index.html">java.sun.com</ulink>.</para>
</abstract>
<chapterinfo>
  <keywordset>
    <keyword>JDBC</keyword>
    <keyword>JDBC Driver</keyword>
    <keyword>JDBC Drivers</keyword>
    <keyword>Client Classes</keyword>
    <keyword>JDBC Client</keyword>
    <keyword>JDBC Client Classes</keyword>
    <keyword>Type 1</keyword>
    <keyword>Type 2</keyword>
    <keyword>Type 3</keyword>
    <keyword>Type 4</keyword>
    <keyword>Thin</keyword>
    <keyword>Lite</keyword>
  </keywordset>
</chapterinfo>
	<!-- ===== ~~~~~ ===== ~~~~~ ===== ~~~~~ ===== -->
<sect1 id="opljava"><title>OpenLink Drivers for Java Database Connectivity (JDBC)</title>
<sect2 id="New_Features_Summary">
<title>New JDBC Driver Packages</title>
<para>OpenLink now has a broader range of JDBC Driver types which also
transcend JDBC versions.</para>
<para>The drivers are now categorized as follows:</para>
<itemizedlist mark="bullet">
<listitem><para>Generic Drivers for JDBC 1.1.x (compatible with Java
Virtual Machine version 1.1.x)</para>
</listitem>
<listitem><para>Generic Drivers for JDBC 2.0 (compatible with Java
Virtual Machine version 1.2 &amp; 1.3)</para>
</listitem>
<listitem><para>Generic Drivers for JDBC 3.0 (compatible with Java
Virtual Machine version 1.4)</para>
</listitem>
<listitem><para>Megathin Drivers for JDBC 1.1.x (compatible with
Java Virtual Machine version 1.1.x)</para>
</listitem>
<listitem><para>Megathin Drivers for JDBC 2.0 (compatible with
Java Virtual Machine version 1.2 &amp; 1.3)</para>
</listitem>
<listitem><para>Megathin Drivers for JDBC 3.0 (compatible with
Java Virtual Machine version 1.4)</para>
</listitem>
</itemizedlist>
<para>The following table depicts how each of these drivers is packaged, what
JDBC Driver formats are supported, and whether they are certified 100% Pure
Java or Not:</para>
<table>
<tgroup><thead>
<row><entry><para>Product Name</para></entry><entry><para>Java Package</para></entry>
<entry><para>JDBC Driver Name</para></entry><entry><para>JDBC Driver Formats </para></entry>
<entry><para>100% Pure Java ?</para></entry>
</row>
</thead>
<tbody>
<row><entry><para>Generic Drivers for JDBC 1.1.x</para></entry>
<entry><para>opljdbc.jar</para></entry><entry><para>openlink.jdbc.Driver</para></entry>
<entry><para>1,3</para></entry><entry><para>N</para></entry>
</row>
<row><entry><para>Generic  Drivers for JDBC 2.0</para></entry>
<entry><para>opljdbc2.jar</para></entry><entry><para>openlink.jdbc2.Driver</para></entry>
<entry><para>1,3</para></entry><entry><para>N</para></entry>
</row>
<row><entry><para>Generic  Drivers for JDBC 3.0</para></entry>
<entry><para>opljdbc3.jar</para></entry><entry><para>openlink.jdbc3.Driver</para></entry>
<entry><para>1,3</para></entry><entry><para>N</para></entry>
</row>
<row><entry><para>Megathin Drivers for JDBC 1.1.x</para></entry>
<entry><para>megathin.jar</para></entry><entry><para>openlink.jdbc.Driver</para></entry>
<entry><para>3</para></entry><entry><para>Y</para></entry>
</row>
<row><entry><para>Megathin Drivers for JDBC 2.0</para></entry>
<entry><para>megathin2.jar</para></entry><entry><para>openlink.jdbc2.Driver</para></entry>
<entry><para>3</para></entry><entry><para>Y</para></entry>
</row>
<row><entry><para>Megathin Drivers for JDBC 3.0</para></entry>
<entry><para>megathin3.jar</para></entry><entry><para>openlink.jdbc3.Driver</para></entry>
<entry><para>3</para></entry><entry><para>Y</para></entry>
</row>
</tbody></tgroup></table>
</sect2>
<sect2 id="newfeat"><title>New Features &amp; Enhancements</title>
<orderedlist>
<listitem>
<formalpara><title>Unicode Support</title>
<para>The OpenLink JDBC drivers support the UNICODE connection.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>Enhanced Communications Layer</title>
<para>Prior to Release 4.1, the JDBC driver sent preformed database metadata calls in 
a manner considered to be redundant prior to SELECT statements. With this new release, each 
SELECT statement only sends and receives TCP packets associated with these metadata calls one
time prior to execution.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>Connection Pooling Support</title>
<para>The JDBC driver now supports connection pooling according to the
JDBC 3.0 specification.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>Scrollable Cursors</title>
<para>A new OpenLink RowSet class enables JDBC applications to take advantage of ODBC-style scrollable cursors functionality, with the ability to: retrieve rowsets, go to any row in the resultset or rowset, add new rows to the database, refresh and update any row with a single method invocation, lock and unlock any row, retrieve the current row number, as well as use ODBC-style bookmarks. This is an OpenLink extension to JDBC.</para>
<para>
The Drivers for JDBC 2.0 implement the Scrollable Cursor Interfaces introduced in JDBC 2.0. They also retain support for the OpenLink Scrollable Cursor extension so as to provide access to those Scrollable Cursor features that exist in ODBC but are missing from the JDBC 2.0 specification.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>Array Binding</title>
<para>As part of the new RowSet class. It is now possible to bind data arrays to the columns of the OpenLink RowSet object, and retrieve the data directly into the arrays with a single invocation of the RowSet.next() method. Please see the accompanying demonstration application for an example of its usage.</para>
<para>
This approach enables you to retrieve multiple records with a reduced number of
calls to the RowSet.next() method. It basically improves JDBC Application
performance.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>openlink.sql.Statement</title>
<para>This is a new OpenLink interface that extends java.sql.Statement to
provide additional methods for configuring the ODBC-Style Scrollable Cursors
functionality.</para>
<para>
You only need this functionality when working with the OpenLink Scrollable
Cursor extensions. The Drivers for JDBC 2.0 implement similar features for the
JDBC 2.0 Scrollable Cursor specification.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>Security</title>
<para>The OpenLink client and server components for JDBC encrypt the
data sent across the network between the client and server. This provides for
enhanced security, particularly over a WAN. This is transparent to the
application, and there are no driver specific properties for the application
to set.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>Version self-checking</title>
<para>The OpenLink client component for JDBC now cross checks version
numbers with the server Agent for JDBC at connect time, this ensures that
compatible components always in use. An exception will be thrown when
incompatibilities are encountered, this exception will also contain information
about the component versions relating to the exception.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>Easier Client Version checking</title>
<para>There is now an easier way of checking the OpenLink client for JDBC
version. Make sure that the driver is in the classpath and then at
your command prompt enter the command:</para>
<programlisting>java openlink.jdbc.Driver</programlisting>
<para>(for JDK 1.x Drivers)</para>
<para>or</para>
<programlisting>java openlink.jdbc2.Driver</programlisting>
<para>(for JDK 1.2 or 1.3/2.0 Drivers)</para>
<para>or</para>
<programlisting>java openlink.jdbc3.Driver</programlisting>
<para>(for JDK 1.4/3.0 Drivers)</para>
<para>or</para>
<programlisting>java openlink.jdbc.Driver</programlisting>
<para>(for 100% Pure Java Drivers for JDK 1.x)</para>
<para>or</para>
<programlisting>java openlink.jdbc2.Driver</programlisting>
<para>(for 100% Pure Java Drivers for JDK 1.2 or 1.32.0)</para>
<para>or</para>
<programlisting>java openlink.jdbc3.Driver</programlisting>
<para>(for 100% Pure Java Drivers for JDK 1.4/3.0)</para>
<para>The driver will respond with appropriate version and release number
information.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>OpenLink Native (UDBC) Bridge for JDBC</title>
<para>UDBC is OpenLink's Universal Database Connectivity solution for cross
platform data access. The new OpenLink Client UDBC Bridge for JDBC
enables JDBC binding to Native Database Interfaces without going through an
ODBC Driver Manager.</para>
</formalpara>
</listitem>
</orderedlist>
</sect2>
</sect1>
    <!-- ===== ~~~~~ ===== ~~~~~ ===== ~~~~~ ===== -->
    <sect1 id="downloading">
        <title>Downloading Driver Software</title>
        <para>The OpenLink Drivers for JDBC are packaged either as a bundle alongside the other OpenLink
    data access drivers (ODBC, UDBC, and OLE-DB) that make up the OpenLink Universal Data
    Access Driver Suite or as a separate release archive which contains only the OpenLink
    Megathin Drivers for JDBC.</para>
	<para>The Megathin Driver for JDBC is a 100% pure Type 3 Network enabled Java Driver.</para>
        <para>If you are not installing these Drivers from a CD you would have to visit the OpenLink Web Site&apos;s
    download page, &usweb;, to obtain these Drivers.</para>
        <para>The screen shots that follow depict the OpenLink download
    wizard interaction that is required in order to download either the JDBC Driver bundle or
    the standalone Megathin Drivers.</para>
        <sect2 id="downwizintjbundle">
            <title>OpenLink Web Download Wizard Interaction for obtaining OpenLink Drivers for JDBC Bundle</title>
            <orderedlist>
                <listitem>
                    <para>Select a Client Operating System from the &quot;Select
        Client Operating System&quot; listbox and then select a database engine that you will be
        connecting to via your Driver for JDBC using the &quot;Select Database&quot; listbox.</para>
                    <figure id="fg-jcc001" float="1">
                        <title>Client OS</title>
                        <graphic fileref="clicls01.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Pick one or more server components matching the server
        operating system that will host the OpenLink Server components required by the Drivers for
        JDBC. Then click on the &quot;Download Selected Software&quot; button.</para>
                    <figure id="fg-jcc002" float="1">
                        <title>Client OS</title>
                        <graphic fileref="clicls02.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Download all the software components presented in the
        &quot;Software Download&quot; page.</para>
                    <figure id="fg-jcc003" float="1">
                        <title>Software Download</title>
                        <graphic fileref="clicls03.gif" format="gif"/>
                    </figure>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="downwizjmthin">
            <title>Download Wizard Interaction for obtaining OpenLink Megathin Drivers for JDBC</title>
            <orderedlist>
                <listitem>
                    <para>Select a Java Virtual Machine version from the
        &quot;Select Client Operating System&quot; listbox and then select a database engine that
        you will be connecting to via your Driver for JDBC using the &quot;Select Database&quot;
        listbox.</para>
                    <figure id="fg-jcc004" float="1">
                        <title>Software Download</title>
                        <graphic fileref="clicls04.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Pick one or more server components matching the server
        operating system that will host the OpenLink Server components required by the Drivers for
        JDBC.  Then click on the &quot;Download Selected Software&quot; button.</para>
                    <figure id="fg-jcc005" float="1">
                        <title>Software Download</title>
                        <graphic fileref="clicls05.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Download all the software components presented in the
        &quot;Software Download&quot; page.</para>
                    <figure id="fg-jcc006" float="1">
                        <title>Software Download</title>
                        <graphic fileref="clicls06.gif" format="gif"/>
                    </figure>
                </listitem>
            </orderedlist>
        </sect2>
    </sect1>
    <!-- ===== ~~~~~ ===== ~~~~~ ===== ~~~~~ ===== -->
    <sect1 id="InstallConfig">
        <title>OpenLink Drivers for JDBC Installation &amp; Configuration</title>
        <para>Once you have downloaded your OpenLink drivers for
    JDBC using the instructions provided above, the next step in the process is the actual
    configuration of these drivers for use within your operating environment.</para>
        <para>Java is operating system independent by virtue of
    its core philosophy, but JDBC Drivers may or may not be operating system independent as
    this is JDBC Driver format and implementation specific. The sections that follow walk your
    through the OpenLink Driver for JDBC installation and configuration process.</para>
        <sect2 id="WIN32LocalClientServer">
            <title>Windows 95/98/NT/2000 Based Local Client-Server Environment</title>
            <para>In this scenario your Windows machine is acting as the host
    machine for both your OpenLink client and server components, implying that you are going
    to install your OpenLink Client and Server components for JDBC on the same machine.</para>
            <para>Installation Process</para>
            <orderedlist>
                <listitem>
                    <para>Download appropriate driver software
        installation archive using the instructions provided in the section that covers
        interaction with the OpenLink Software Download Wizard.</para>
                </listitem>
                <listitem>
                    <para>As Windows 95/98/NT/2000 is playing the dual role of both
        Client and Server machine for your OpenLink components, you would have downloaded a ZIP
        archive that contains both the OpenLink Client &amp; Server components for this platform.
        Extract the contents of this ZIP archive to a temporary installation folder and then run
        the &quot;Setup.exe&quot; program</para>
                </listitem>
                <listitem>
                    <para>The archive you have downloaded will contain the entire
        suite of Data Access Drivers for this platform. If you do not require the OpenLink ODBC or
        OLE-DB Drivers simply uncheck these components using the installers component list dialog
        when presented during the install process.</para>
                </listitem>
                <listitem>
                    <para>The installer will automatically determine what version of
        the Java Virtual Machine is installed on your machine and then automatically checks which
        OpenLink Drivers for JDBC java classes should be checked for installation by default. You
        can override this settings during the installation process so as to match your specific
        requirements should they differ from those derived by the installer. </para>
                </listitem>
                <listitem>
                    <para>The installer will also add the OpenLink Driver for JDBC
        class files that you have selected in step 3 to the CLASSPATH environment variable on your
        system</para>
                </listitem>
                <listitem>
                    <para>Reboot your system.</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                    <table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
                        <title>JDBC Driver Version Commands</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>OpenLink Driver for JDBC Type</entry>
                                    <entry>Verification Command</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Generic Driver for JDBC 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDBC 1.2.x or 2.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDBC 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDBC 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDBC 1.2.x or 2.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDBC 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                    <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                    <para>http://localhost:8000/</para>
                    <para>If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                </listitem>
                <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ingii_sv --help   (this will verify the Ingres II Database Agent)
db2_sv --help     (this will verify the IBM DB2 Database Agent)</programlisting>
                    <para>
        See the detailed section about <!-- href="../unix/agntspec.htm" -->OpenLink Database Agents
        for additional information.</para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="WIN32ClientServer">
            <title>Windows 95/98/NT/2000 Based Client-Server (2-Tier Configuration) Environment</title>
            <para>In this scenario one or more Windows machines act
    as the host machine for your OpenLink client components, while a separate Windows server
    machine hosts your OpenLink server components. This Windows server machine also hosts the
    database engine that you will be connecting to via JDBC, this machine is typically
    referred to as your Database Server machine.</para>
            <sect3 id="clicomponent">
                <title>Client Components Installation</title>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate
        driver software using the instructions provided in the section that covers interaction
        with the OpenLink Software Download Wizard on to your designated client machine</para>
                    </listitem>
                    <listitem>
                        <para>As Windows 95/98/NT/2000 is playing the single role of
        Client  machine for your OpenLink Drivers for JDBC, you would have downloaded a ZIP
        archive that contains only the OpenLink Client components. Extract the contents of this
        ZIP archive to a temporary installation folder and then run the &quot;Setup.exe&quot;
        program</para>
                    </listitem>
                    <listitem>
                        <para>The archive you have downloaded will contain the entire
        suite of Data Access Drivers for this platform. If you do not require the OpenLink ODBC or
        OLE-DB Drivers simply uncheck these components using the installers component list dialog
        when presented during the install process</para>
                    </listitem>
                    <listitem>
                        <para>The installer will automatically determine what version of
        the Java Virtual Machine is installed on your machine and then automatically checks which
        OpenLink Drivers for JDBC java classes should be checked for installation by default. You
        can override this settings during the installation process so as to match your specific
        requirements should they differ from those derived by the installer</para>
                    </listitem>
                    <listitem>
                        <para>The installer will also add the OpenLink Driver for JDBC
        class files that you have selected in step 3 to the CLASSPATH environment variable on your
        system</para>
                    </listitem>
                    <listitem>
                        <para>Reboot your system</para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                        <table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
                            <title>JDBC Driver Version Commands</title>
                            <tgroup align="char" charoff="50" char="." cols="2">
                                <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                                <thead>
                                    <row>
                                        <entry>OpenLink Driver for JDBC Type</entry>
                                        <entry>Verification Command</entry>
                                    </row>
                                </thead>
                                <tbody>
                                    <row>
                                        <entry>Generic Driver for JDBC 1.1.x</entry>
                                        <entry>java openlink.jdbc.Driver</entry>
                                    </row>
                                    <row>
                                        <entry>Generic Driver for JDBC 1.2.x or 2.x</entry>
                                        <entry>java openlink.jdbc2.Driver</entry>
                                    </row>
                                    <row>
                                        <entry>Generic Driver for JDBC 1.3.x</entry>
                                        <entry>java openlink.jdbc2.Driver</entry>
                                    </row>
                                    <row>
                                        <entry>Megathin Driver for JDBC 1.1.x</entry>
                                        <entry>java openlink.jdbc.Driver</entry>
                                    </row>
                                    <row>
                                        <entry>Megathin Driver for JDBC 1.2.x or 2.x</entry>
                                        <entry>java openlink.jdbc2.Driver</entry>
                                    </row>
                                    <row>
                                        <entry>Megathin Driver for JDBC 1.3.x</entry>
                                        <entry>java openlink.jdbc2.Driver</entry>
                                    </row>
                                </tbody>
                            </tgroup>
                        </table>
                        <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                    </listitem>
                </orderedlist>
            </sect3>
            <sect3 id="srvcomponent">
                <title>Server Components Installation</title>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate
        server components software using the instructions provided in the section that covers
        interaction with the OpenLink Software Download Wizard on to your designated server machine</para>
                    </listitem>
                    <listitem>
                        <para>As Windows 95/98/NT/2000 is playing the single role of
        Server machine for your OpenLink Drivers for JDBC, you would have downloaded a ZIP archive
        that contains only the OpenLink Server components. Extract the contents of this ZIP
        archive to a temporary installation folder and then run the &quot;Setup.exe&quot; program</para>
                    </listitem>
                    <listitem>
                        <para>The archive you have downloaded will contain both OpenLink
        client and Server components for this platform. Since you are setting up a Server machine
        simply uncheck the OpenLink Client components (ODBC, JDBC, OLE-DB) using the installers
        component list dialog when presented during the install process, this ensures that you
        only install OpenLink Server components on your Server machine(s)</para>
                    </listitem>
                    <listitem>
                        <para>If you are an existing OpenLink user please ensure that
        you do not have an OpenLink Request Broker process running (check your services control panel item),
        if there is a Request Broker process running please shut it down at this point</para>
                    </listitem>
                    <listitem>
                        <para>Run the &quot;setup.exe&quot; program</para>
                    </listitem>
                    <listitem>
                        <para>Start the OpenLink Request Broker, you this by either
        going into your &quot;Services&quot; control panel (for Windows NT) or to the
        &quot;OpenLink Data Access Drivers&quot; Windows Start Menu, and then click on the &quot;Broker Startup&quot;
        menu item</para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session from either your OpenLink Client or Server
        machine and then enter one of the following URLs:</para>
                        <para>From Client Machine:</para>
                        <programlisting>http://&lt;server name or IP address&gt;:8000</programlisting>
                        <para>From Server Machine:</para>
                        <programlisting>http://localhost:8000</programlisting>
                        <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.
            </para>
                    </listitem>
                    <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ingii_sv --help   (this will verify the Ingres II Database Agent)
db2_sv --help     (this will verify the IBM DB2 Database Agent)</programlisting>
                        <para>
        See the detailed section about OpenLink Database Agents
        for additional information.</para>
                    </listitem>
                </orderedlist>
            </sect3>
        </sect2>
        <sect2 id="WIN32AppServer">
            <title>Windows 95/98/NT/2000 Based Application-Server (3-Tier Configuration) Environment</title>
            <para>In this scenario your OpenLink Client and Server
    components for JDBC are installed on an Application Server, as this is where your JDBC
    based application will be hosted and developed (if you are building a JDBC based
    3-Tier solution). Thus, the installation process is broken down into two parts,
    Application Server, and Database Server components installation. You will not need to
    install any software on the client machines being used by your JDBC solutions end-users.
    Application Server Components Installation </para>
            <orderedlist>
                <listitem>
                    <para>Download appropriate
        server components software using the instructions provided in the section that covers
        interaction with the OpenLink Software Download Wizard on to your designated server machine</para>
                </listitem>
                <listitem>
                    <para>As this machine needs to host both Client and Server
        components (by virtue of this machine playing the role of Application Server), you would
        have downloaded a ZIP archive that contains both the OpenLink Client &amp; Server
        components for this platform. Extract the contents of this ZIP archive to a temporary
        installation folder and then run the &quot;Setup.exe&quot; program</para>
                </listitem>
                <listitem>
                    <para>The archive you have downloaded will contain the entire
        suite of Data Access Drivers for this platform. If you do not require the OpenLink ODBC or
        OLE-DB Drivers simply uncheck these components using the installers component list dialog
        when presented during the install process.</para>
                </listitem>
                <listitem>
                    <para>If you choose to use OpenLink&apos;s Database Independent
        Networking to connect to remote database engines hosted on one or more dedicated Database
        Server machine, then ensure that an OpenLink Database Agent checkbox for each Database
        Engine type is checked from the component list presented by the installer. If on the other
        hand you choose to use Database Specific Networking provided by your database vendor(s)
        when connecting to your remote Database Engine(s) hosted on your dedicated Database Server
        machines, then  simply leave all the OpenLink Database Agent checkboxes unchecked. </para>
                    <para>SQL*Net, Open Client, Progress Client. I-Connect, Ingres Net, and Netlib are database
        specific networking products for Oracle, Sybase, Progress, Informix, Ingres, and Microsoft
        SQL Server respectively.</para>
                </listitem>
                <listitem>
                    <para>The installer will automatically determine what version of
        the Java Virtual Machine is installed on your machine and then automatically checks which
        OpenLink Drivers for JDBC java classes should be checked for installation by default. You
        can override this settings during the installation process so as to match your specific
        requirements should they differ from those derived by the installer</para>
                </listitem>
                <listitem>
                    <para>The installer will also add the OpenLink Driver for JDBC
        class files that you have selected in step 3 to the CLASSPATH environment variable on your
        system</para>
                </listitem>
                <listitem>
                    <para>Reboot your system </para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                    <table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
                        <title>JDBC Driver Version Commands</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>OpenLink Driver for JDBC Type</entry>
                                    <entry>Verification Command</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Generic Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDK 1.2.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Generic Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                    <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session from either your OpenLink Client or Server
        machine and then enter one of the following URLs:</para>
                    <para>From Client Machine:</para>
                    <programlisting>http://&lt;server name or IP address&gt;:8000</programlisting>
                    <para>From Server Machine:</para>
                    <programlisting>http://localhost:8000</programlisting>
                    <para>If you are presented with the Home Page of the &quot;OpenLink Admin Assistant&quot; then
        this confirms that your OpenLink Server environment is also correctly setup.</para>
                </listitem>
                <listitem>
                    <para>If you are going to be connecting to your remote database
        servers using database specific networking provided by one or more database vendors then
        you need to perform an additional check to ensure that your database agents have been
        installed properly. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ingii_sv --help   (this will verify the Ingres II Database Agent)
db2_sv --help     (this will verify the IBM DB2 Database Agent)</programlisting>
                    <para>See the detailed section about OpenLink Database Agents
        for additional information.</para>
                </listitem>
            </orderedlist>
            <sect3 id="dbsrvcomponent">
                <title>Database Server Components Installation </title>
                <para>This step is only required if your are connecting your
    Application Server components installed in the prior section to a remote database engine
    hosted on a dedicated Database Server machine using OpenLink&apos;s Database Independent
    Networking.</para>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate
        server components software using the instructions provided in the section that covers
        interaction with the OpenLink Software Download Wizard on to your designated server machine</para>
                    </listitem>
                    <listitem>
                        <para>As Windows 95/98/NT/2000 is playing the single role of a
        dedicated Database Server machine for your OpenLink Application Server components for
        JDBC, you would have downloaded a ZIP archive that contains only the OpenLink Server
        components. Extract the contents of this ZIP archive to a temporary installation folder
        and then run the &quot;Setup.exe&quot; program</para>
                    </listitem>
                    <listitem>
                        <para>The archive you have downloaded will contain both OpenLink
        client and Server components for this platform. Since you are setting up a Server machine
        simply uncheck the OpenLink Client components (ODBC, JDBC, OLE-DB) using the installers
        component list dialog when presented during the install process, this ensures that you
        only install OpenLink Server components on your Server machine(s)</para>
                    </listitem>
                    <listitem>
                        <para>Ensure that an OpenLink Database Agent checkbox for each
        Database Engine type is checked from the component list presented by the installer.
        Uncheck all JDBC component related checkboxes unless you anticipate using this dedicated
        Database Server as an Application Server at a later date.</para>
                    </listitem>
                    <listitem>
                        <para>If you are an existing OpenLink user please ensure that
        you do not have an OpenLink Request Broker process running (check your services control
        panel item), if there is a Request Broker process running please shut it down at this
        point</para>
                    </listitem>
                    <listitem>
                        <para>Run the &quot;setup.exe&quot; program</para>
                    </listitem>
                    <listitem>
                        <para>Start the OpenLink Request Broker, you do this by either
        going into your &quot;Services&quot; control panel (for Windows NT) or to the
        &quot;OpenLink Data Access Drivers&quot; Windows Start Menu, and then click on the
        &quot;Broker Startup&quot; menu item</para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Database server components
        installation by starting a Web Browser session from either your OpenLink Client,
        Application or Server machine and then enter one of the following URLs:</para>
                        <para>From Client or Application Server Machine:</para>
                        <programlisting>http://&lt;server name or IP address&gt;:8000</programlisting>
                        <para>From Database Server Machine:</para>
                        <programlisting>http://localhost:8000</programlisting>
                        <para>If you are presented with the Home Page of the &quot;OpenLink Admin Assistant&quot; then
        this confirms that your OpenLink Server environment is also correctly setup.</para>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ora8_sv --help    (this will verify the Oracle Database Agent)
db2_sv --help     (this will verify the IBM DB2 Database Agent)</programlisting>
                        <para>See the detailed section about OpenLink Database Agents for additional information.</para>
                    </listitem>
                </orderedlist>
            </sect3>
            <sect3 id="UNIXLocalClientServer">
                <title>Linux or UNIX Based Local Client-Server Configuration</title>
                <para>In this scenario your Linux or UNIX machine is acting as
    the host machine for both your OpenLink client and server components, implying that you
    are going to install your OpenLink Client and Server components for JDBC on the same
    machine.</para>
                <para>Installation Process</para>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software Download Wizard.
        Ensure that you hatched a checkbox for each Database Engine type that you will be connecting to via JDBC.</para>
                    </listitem>
                    <listitem>
                        <para>Move the Request Broker and Database Agent archives into a
        temporary installation folder on your Linux or UNIX machine then run the following
        command from the command line prompt:</para>
                        <!--
        <para>Linux:</para>
        <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-glibc2.rpm</programlisting>
        <para>(for glibc2 based Linux Environments) or</para>
        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-libc5.rpm</programlisting>
         <para>(for libc5 based Linux Environments) </para>
        <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
 -->
                        <programlisting>sh install.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Follow the instructions presented by the installer for
        configuring your OpenLink Database Agents.
<!-- , if you installed via a Linux RPM archive, post
        RPM installation you will need to run the &quot;oplcfg&quot;  located in the
        &quot;openlink/bin&quot; sub-directory of your OpenLink base installation directory
 -->
                        </para>
                    </listitem>
                    <listitem>
                        <para>The installer creates an OpenLink environment setup script
        named &quot;openlink.sh&quot; in the openlink installation&apos;s base installation directory.
        This files contains the following entries which you can modify so as to match the OpenLink
        Drivers for JDBC to the appropriate  Java environment on your machine:</para>
                        <programlisting>
CLASSPATH=$CLASSPATH:/dbs/openlink/v40/openlink/jdk1.1.x/opljdbc.jar
#CLASSPATH=$CLASSPATH:/dbs/openlink/v40/openlink/jdk1.2.x/opljdbc2.zip
</programlisting>
                    </listitem>
                    <listitem>
                        <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your .profile file) by executing the following command from
        your Linux or UNIX command line prompt:</para>
                        <programlisting>. openlink.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                        <table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
                            <title>JDBC Driver Version Commands</title>
                            <tgroup align="char" charoff="50" char="." cols="2">
                                <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                                <thead>
                                    <row>
                                        <entry>OpenLink Driver for JDBC Type</entry>
                                        <entry>Verification Command</entry>
                                    </row>
                                </thead>
                                <tbody>
                                    <row>
                                    <entry>Generic Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDK 1.2.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Generic Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                                </tbody>
                            </tgroup>
                        </table>
                        <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                        <programlisting>http://localhost:8000</programlisting>
                        <para>or</para>
                        <programlisting>http://&lt;hostname of current machine&gt;:8000</programlisting>
                        <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                    </listitem>
                    <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ora8_sv --help   (this will verify the Oracle Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
<para>See the detailed section about OpenLink Database Agents for additional information.</para>
                    </listitem>
                </orderedlist>
            </sect3>
            <sect3 id="UNIXClientServer">
                <title>Linux or UNIX Based Client-Server (2-Tier Configuration) Installation</title>
                <para>In this scenario one or more Linux or UNIX machines act as
    the host machine for your OpenLink client components, while a separate Linux or UNIX
    server machine hosts your OpenLink server components. This Linux or UNIX server machine
    also hosts the database engine that you will be connecting to via JDBC, this machine is
    typically referred to as your Database Server machine.</para>
                <para>Client Components Installation</para>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate
        driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software Download Wizard</para>
                    </listitem>
                    <listitem>
                        <para>Although Linux or UNIX is only playing role of both Client
        machine for your OpenLink components, you still need to download a
        compressed TAR archive containing the OpenLink Request Broker (the download page
        clearly identifies this archive), this contains both the OpenLink Request Broker and the
        OpenLink Driver for JDBC components. Move this archive to a temporary installation folder
        and then run the following installation program:</para>
                        <!--
        <para>Linux:</para>
        <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
        <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
 -->
                        <programlisting>sh install.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>The installer creates an OpenLink environment setup script
        named &quot;openlink.sh&quot; in the openlink installation base installation directory.
        This files contains the following entry which you can modify so as to match the OpenLink
        Drivers for JDBC to the appropriate  Java environment on your machine:</para>
                        <programlisting>
CLASSPATH=$CLASSPATH:/dbs/openlink/v40/openlink/jdk1.1.x/opljdbc.jar
#CLASSPATH=$CLASSPATH:/dbs/openlink/v40/openlink/jdk1.2.x/opljdbc2.zip</programlisting>
                    </listitem>
                    <listitem>
                        <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your .profile file) by executing the following command from
        your Linux or UNIX command line prompt:</para>
                        <programlisting>. openlink.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                        <table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
                            <title>JDBC Driver Version Commands</title>
                            <tgroup align="char" charoff="50" char="." cols="2">
                                <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                                <thead>
                                    <row>
                                        <entry>OpenLink Driver for JDBC Type</entry>
                                        <entry>Verification Command</entry>
                                    </row>
                                </thead>
                                <tbody>
                                   <row>
                                    <entry>Generic Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDK 1.2.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Generic Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                                </tbody>
                            </tgroup>
                        </table>
                        <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                        <programlisting>http://localhost:8000</programlisting>
                        <para>or</para>
                        <programlisting>http://&lt;hostname of current machine&gt;:8000</programlisting>
                        <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                    </listitem>
                    <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ora80_sv --help  (this will verify the Oracle Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
                        <para>See the detailed section about OpenLink Database Agents for additional information.</para>
                    </listitem>
                </orderedlist>
                <para>Database Server Components Installation</para>
                <para>Only perform these steps if you are connecting to database
    engines hosted on your dedicated Database Server using OpenLink&apos;s Database Independent
    Networking:</para>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate
        server components installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software Download Wizard.
        Ensure that you hatched a checkbox for each Database Engine type that
        you will be connecting to via JDBC. </para>
                    </listitem>
                    <listitem>
                        <para>Move the Request Broker and Database Agent archives into a
        temporary installation folder on your Database Server machine then run the following
        command from the command line prompt:</para>
                        <!--
        <para>Linux:</para>
        <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-glibc2.rpm</programlisting>
        <para>(for glibc2 based Linux Environments) or</para>
        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-libc5.rpm</programlisting>
          <para>(for libc5 based Linux Environments)</para>
        <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
 -->
                        <programlisting>sh install.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Follow the instructions presented by the installer for
        configuring your OpenLink Database Agents</para>
                    </listitem>
                    <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ora80_sv --help  (this will verify the Oracle Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
<para>See the detailed section about OpenLink Database Agents for additional information.</para>
                    </listitem>
                </orderedlist>
            </sect3>
            <sect3 id="UNIXAppServer">
                <title>Linux or UNIXBased Application-Server (3-Tier Configuration) Installation</title>
                <para>In this scenario your OpenLink Client machine plays the role of an Application Server,
    as this is where your JDBC based application will be hosted
    and  developed (if you are building a 3-Tier JDBC solution). Thus, the installation
    process is broken down into two parts, Application Server, and Database Server components
    installation. You will not need to install any software on the machines being used by your
    JDBC solution&apos;s end-users.</para>
                <para>Application Server Components Installation</para>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate
        driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software Download Wizard.
        Ensure that you hatched a checkbox for each Database Engine type that
        you will be connecting to via JDBC.</para>
                    </listitem>
                    <listitem>
                        <para>Although Linux or UNIX is only playing role of Client
        machine for your OpenLink components, you still need to download Linux RPMs or
        a UNIX compressed TAR archives containing the OpenLink Request Broker and the Database
        Agents for each database engine that you will be connecting to via JDBC (the download page
        clearly identifies these archives).</para>
                    </listitem>
                    <listitem>
                        <para>Move the Request Broker and this archive to a temporary
        installation folder, if you choose to use OpenLink&apos;s Database Independent Networking to
        connect to remote database engines hosted on one or more dedicated Database Server
        machines, do not move the  Database Agent archives into the temporary installation
        directory on the Application Server. Run the following installation programs from the
        temporary installation directory on your Application Server machine:</para>
                        <para>Linux:</para>
                        <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
                        <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
                        <programlisting>sh install.sh</programlisting>
                        <para>Linux:</para>
                        <programlisting>
        rpm -ivh openlink-4.0-2.rpm</programlisting>
                        <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
                        <programlisting>sh install.sh</programlisting>
                        <para>
        * Ignore the Database Agent configuration menu when presented to you by the installer. *</para>
                        <para>
        If on the other hand you choose to use Database Specific Networking provided by your
        database vendor(s) when connecting to your remote Database Engine(s) hosted on your
        dedicated Database Server machines, then then move each Database Agent archive into a
        temporary installation directory alongside the Request Broker archive and then run the
        following installation programs:</para>
                        <para>Linux:</para>
                        <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
                        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-glibc2.rpm</programlisting>
                        <para>(for glibc2 based Linux Environments) or</para>
                        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-libc5.rpm</programlisting>
                        <para> (for libc5 based Linux Environments)</para>
                        <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
                        <programlisting>sh install.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>The installer creates an OpenLink environment setup script
        named &quot;openlink.sh&quot; in the openlink installation base installation directory.
        This files contains the following entry which you can modify so as to match the OpenLink
        Drivers for JDBC to the appropriate  Java environment on your machine:</para>
                        <programlisting>
CLASSPATH=$CLASSPATH:/dbs/openlink/v40/openlink/jdk1.1.x/opljdbc.jar
#CLASSPATH=$CLASSPATH:/dbs/openlink/v40/openlink/jdk1.2.x/opljdbc2.zip</programlisting>
                    </listitem>
                    <listitem>
                        <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your .profile file) by executing the following command from
        your Linux or UNIX command line prompt:</para>
                        <programlisting>
        . openlink.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                        <table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
                            <title>JDBC Driver Version Commands</title>
                            <tgroup align="char" charoff="50" char="." cols="2">
                                <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                                <thead>
                                    <row>
                                        <entry>OpenLink Driver for JDBC Type</entry>
                                        <entry>Verification Command</entry>
                                    </row>
                                </thead>
                                <tbody>
                                    <row>
                                    <entry>Generic Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDK 1.2.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Generic Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Generic Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                                </tbody>
                            </tgroup>
                        </table>
                        <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                        <programlisting>
        http://localhost:8000 or http://&lt;hostname of current machine&gt;:8000</programlisting>
                        <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Database server components
        installation by starting a Web Browser session from either your OpenLink Client,
        Application or Server machine and then enter one of the following URLs:</para>
                        <para>From Client Machine:</para>
                        <programlisting>http://&lt;server name or IP address&gt;:8000</programlisting>
                        <para>From Database Server Machine:</para>
                        <programlisting>http://localhost:8000</programlisting>
                        <para>
        If you are presented with the Home Page of the &quot;OpenLink Admin Assistant&quot; then
        this confirms that your OpenLink Server environment is also correctly setup.</para>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ora80_sv --help  (this will verify the Oracle Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
                        <para>
        See the detailed section about OpenLink Database Agents for additional information.
        </para>
                    </listitem>
                </orderedlist>
            </sect3>
            <sect3 id="dbsrvcompinst">
                <title>Database Server Components Installation</title>
                <para>Only perform these steps if you are connecting to database
    engines hosted on your dedicated Database Server using OpenLink&apos;s Database Independent
    Networking:</para>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate
        server components installation archive using the instructions provided in the section that
        covers interaction with the OpenLink <ulink url="#Downloading and Installing the Software">Software
        Download Wizard</ulink>. Ensure that you hatched a checkbox for each Database Engine type that
        you will be connecting to via JDBC. </para>
                    </listitem>
                    <listitem>
                        <para>Move the Request Broker and Database Agent archives into a
        temporary installation folder on your Database Server machine then run the following
        commands from the command line prompt:</para>
                        <para>Linux:</para>
                        <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
                        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-glibc2.rpm</programlisting>
                        <para> (for glibc2 based Linux Environments) or</para>
                        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-libc5.rpm</programlisting>
                        <para> (for libc5 based Linux Environments)</para>
                        <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
                        <programlisting>sh install.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Follow the instructions presented by the installer for
        configuring your OpenLink Database Agents</para>
                    </listitem>
                    <listitem>
                        <para>The installer creates an OpenLink environment setup script
        named &quot;openlink.sh&quot; in the openlink installation&apos;s base installation directory. </para>
                    </listitem>
                    <listitem>
                        <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your .profile file) by executing the following command from
        your Linux or UNIX command line prompt:</para>
                        <programlisting>. openlink.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Database server components
        installation by starting a Web Browser session from either your OpenLink Client,
        Application or Server machine and then enter one of the following URLs:</para>
                        <para>From Client or Application Server Machine:</para>
                        <programlisting>http://&lt;server name or IP address&gt;:8000</programlisting>
                        <para>From Database Server Machine:</para>
                        <programlisting>http://localhost:8000</programlisting>
                        <para>
        If you are presented with the Home Page of the &quot;OpenLink Admin Assistant&quot; then
        this confirms that your OpenLink Server environment is also correctly setup.</para>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ora80_sv --help  (this will verify the Oracle Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
                        <para>
        See the detailed section about OpenLink Database Agents for additional information.</para>
                    </listitem>
                </orderedlist>
            </sect3>
        </sect2>
    </sect1>
    <sect1 id="JavaLocalClientServer">
        <title>Java Based Local Client-Server</title>
        <para>In this scenario the Java Virtual Machine is acting as the
    host of your OpenLink client component for JDBC (a 100% Pure Java Driver for JDBC). The
    operating system hosting your Java Virtual Machine, also hosts the OpenLink Server server
    components for JDBC. Thus, you are going to install your OpenLink Client and Server
    components for JDBC on the same machine.</para>
        <sect2 id="clicompins">
            <title>Client Components Installation Process</title>
            <orderedlist>
                <listitem>
                    <para>Download appropriate
        driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software
        Download Wizard. You would have selected &quot;Java Virtual Machine&quot; as you
        client operating system when interacting with the OpenLink download Wizard and then have
        the files &quot;megathin.jar&quot; or &quot;megathin2.jar&quot; presented in the download
        results page depending on the version of the Java Virtual Machine selected</para>
                </listitem>
                <listitem>
                    <para>Place the
        &quot;megathin.jar&quot; or &quot;megathin2.jar&quot; file into directory of your choice
        then add the directory and reference to the JAR file to your CLASSPATH environment
        variable. See example below:</para>
                    <para>
        Windows 95/98/NT/2000</para>
                    <para>
        Presuming you place the &quot;megathin.jar&quot; file in the &quot;\program
        files\openlink\jdk11&quot; on your Windows machine, you would add the following line to
        your &quot;autoexec.bat&quot; if you are running Windows 95/98:</para>
                    <programlisting>
        set CLASSPATH=%CLASSPATH%;&quot;c:\program files\openlink\jdk11\megathin.jar&quot;:. </programlisting>
                    <para>
        If you are using NT or Windows 2000 &quot; then you need to open the &quot;System
        Environment&quot; properties of the &quot;System&quot; Control Panel applet and then add
        the same entry to the &quot;System Variables&quot; section if you want the driver to be
        accessible to all users, if not place the entry in the &quot;User Variables&quot; section.</para>
                    <formalpara>
                        <title>Linux or UNIX</title>
                        <para>
        Presuming you place the &quot;megathin.jar&quot; file in the
        &quot;/opt/openlink/jdk11&quot; on your Linux or UNIX machine, you would need to modify
        the following line in the file &quot;openlink.sh&quot; so that they match what is listed
        below:</para>
                        <programlisting>CLASSPATH=$CLASSPATH:/opt/openlink/jdk1.1.x/megathin.jar</programlisting>
                    </formalpara>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="servcomp">
            <title>Server Components Installation</title>
            <para>Windows 95/98/NT/2000</para>
            <orderedlist>
                <listitem>
                    <para>As Windows 95/98/NT/2000 is playing the dual role of both
        Client and Server machine for your OpenLink components, you would have downloaded a ZIP
        archive that contains both the OpenLink Client &amp; Server components for this platform.
        Extract the contents of this ZIP archive to a temporary installation folder and then run
        the &quot;Setup.exe&quot; program</para>
                </listitem>
                <listitem>
                    <para>The archive you have downloaded will contain the entire
        suite of Data Access Drivers for this platform. If you do not require the OpenLink ODBC or
        OLE-DB Drivers simply uncheck these components using the installers component list dialog
        when presented during the install process. </para>
                </listitem>
                <listitem>
                    <para>Reboot your system </para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                    <table>
                        <title>JDBC Driver Version Commands</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>OpenLink Driver for JDBC Type</entry>
                                    <entry>Verification Command</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                    <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                    <programlisting>http://localhost:8000</programlisting>
                    <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                </listitem>
                <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
inf73_sv --help  (this will verify the Informix Database Agent)
ingii_sv --help  (this will verify the Ingres II Database Agent)
</programlisting>
    <para>
        See the detailed section about OpenLink Database Agents for additional information.</para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="linunixsrvcomp">
            <title>Linux or UNIX Server Components Installation</title>
            <orderedlist>
                <listitem>
                    <para>Download appropriate
        driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software Download Wizard.
        Ensure that you hatched a checkbox for each Database Engine type that
        you will be connecting to via JDBC.</para>
                </listitem>
                <listitem>
                    <para>Move the Request Broker and Database Agent archives into a
        temporary installation folder on your Linux or UNIX machine then run the following
        commands from the command line prompt:</para>
                    <para>Linux:</para>
                    <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
                    <programlisting>rpm -ivh openlink-agents-4.0-2.i386-glibc2.rpm</programlisting>
                    <para>(for glibc2 based Linux Environments) or</para>
                    <programlisting>rpm -ivh openlink-agents-4.0-2.i386-libc5.rpm</programlisting>
                    <para>(for libc5 based Linux Environments)</para>
                    <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
                    <programlisting>sh install.sh</programlisting>
                </listitem>
                <listitem>
                    <para>Follow the instructions presented by the installer for
        configuring your OpenLink Database Agents.
<!-- , if you installed via a Linux RPM archive, post
        RPM installation you will need to run the &quot;oplcfg&quot;  located in the
        &quot;openlink/bin&quot; sub-directory of your OpenLink base installation directory.
 -->
                    </para>
                </listitem>
                <listitem>
                    <para>The installer creates an OpenLink environment setup script
        named &quot;openlink.sh&quot; in the openlink installation&apos;s base installation directory.
        This files contains the following entries which you can modify so as to match the OpenLink
        Drivers for JDBC to the appropriate Java environment on your machine:</para>
                    <programlisting>CLASSPATH=$CLASSPATH:/openlink/openlink/jdk1.1.x/megathin.jar</programlisting>
                    <note>
                        <title>Note:</title>
                        <para>This step is only required because the Linux and UNIX installer archives
        automatically install all the OpenLink Driver types for JDBC, and also perform the default
        CLASSPATH entry configuration.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your &quot;.profile&quot; file) by executing the following
        command from your Linux or UNIX command line prompt:</para>
                    <programlisting>. openlink.sh</programlisting>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a Linux or UNIX command prompt:</para>
                    <table>
                        <title>JDBC Driver Version Commands</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>OpenLink Driver for JDBC Type</entry>
                                    <entry>Verification Command</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                    <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                    <programlisting>http://localhost:8000</programlisting>
                    <para>or</para>
                    <programlisting>http://&lt;hostname of current machine&gt;:8000</programlisting>
                    <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                </listitem>
                <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
syb11_sv --help  (this will verify the Sybase Database Agent)
inf73_sv --help  (this will verify the Informix Database Agent)
</programlisting>
   <para>See the detailed section about OpenLink Database Agents for additional information.</para>
                </listitem>
            </orderedlist>
        </sect2>
    </sect1>
    <sect1 id="JavaClientServer">
        <title>Java Based Client-Server (2-Tier) Installation</title>
        <para>In this scenario the Java Virtual Machine and OpenLink
    Drivers for JDBC reside on separate to OpenLink Server server components for JDBC and
    Database Connectivity. Thus, you are going to install your OpenLink Client and Server
    components for JDBC on separate machines, one acting as the Client and the other the
    Server. The Server also hosts the actual database engine that you will be connecting to
    via JDBC.</para>
        <sect2 id="winclicomp">
            <title>Windows 95/98/NT/2000 Client Components Installation Process</title>
            <orderedlist>
                <listitem>
                    <para>Download appropriate
        driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software Download Wizard.
        You would have selected &quot;Java Virtual Machine&quot; as you
        client operating system when interacting with the OpenLink download Wizard and then have
        the files &quot;megathin.jar&quot; or &quot;megathin2.jar&quot; presented in the download
        results page depending on the version of the Java Virtual Machine selected</para>
                </listitem>
                <listitem>
                    <para>Place the &quot;megathin.jar&quot; or &quot;megathin2.jar&quot; file into directory of your choice
        then add the directory and reference to the JAR file to your CLASSPATH environment
        variable. See example below:</para>
                    <para>Windows 95/98/NT/2000</para>
                    <para>
        Presuming you place the &quot;megathin.jar&quot; file in the &quot;\program
        files\openlink\jdk11&quot; on your Windows machine, you would add the following line to
        your &quot;autoexec.bat&quot; if you are running Windows 95/98:</para>
                    <programlisting>set CLASSPATH=%CLASSPATH%;&quot;c:\program files\openlink\jdk11\megathin.jar&quot;:. </programlisting>
                    <para>
        If you are using NT or Windows 2000 &quot; then you need to open the &quot;System
        Environment&quot; properties of the &quot;System&quot; Control Panel applet and then add
        the same entry to the &quot;System Variables&quot; section if you want the driver to be
        accessible to all users, if not place the entry in the &quot;User Variables&quot; section.</para>
                </listitem>
                <listitem>
                    <para>Reboot your machine</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                    <table>
                        <title>JDBC Driver Version Commands</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>OpenLink Driver for JDBC Type</entry>
                                    <entry>Verification Command</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                    <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="linunixclicomp">
            <title>Linux or UNIX Client Components Installation</title>
            <orderedlist>
                <listitem>
                    <para>Presuming you place the &quot;megathin.jar&quot; file in the
        &quot;/opt/openlink/jdk11&quot; on your Linux or UNIX
        machine, you would need to modify the following line in the file &quot;openlink.sh&quot;
        so that they match what is listed below:</para>
                    <programlisting>CLASSPATH=$CLASSPATH:/opt/openlink/jdk1.1.x/megathin.jar</programlisting>
                </listitem>
                <listitem>
                    <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your &quot;.profile&quot; file) by executing the following
        command from your Linux or UNIX command line prompt:</para>
                    <programlisting>. openlink.sh</programlisting>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a Linux or UNIX command prompt:</para>
                    <table>
                        <title>JDBC Driver Version Commands</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>OpenLink Driver for JDBC Type</entry>
                                    <entry>Verification Command</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                    <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="srvcompinst">
            <title>Server Components Installation</title>
            <para>Only perform these steps if you are connecting to database engines hosted on your
    dedicated Database Server using OpenLink&apos;s Database Independent Networking:</para>
            <para>Windows 95/98/NT/2000</para>
            <orderedlist>
                <listitem>
                    <para>As a separate Windows 95/98/NT/2000 is playing the role of
        Server machine, you would have downloaded a ZIP archive that contains both the OpenLink
        Client &amp; Server components for this platform. Extract the contents of this ZIP archive
        to a temporary installation folder on the Windows Server machine and then run the
        &quot;Setup.exe&quot; program</para>
                </listitem>
                <listitem>
                    <para>The archive you have downloaded will contain the entire
        suite of Data Access Drivers for this platform. If you do not require the OpenLink ODBC or
        OLE-DB Drivers simply uncheck these components using the installers component list dialog
        when presented during the install process. </para>
                </listitem>
                <listitem>
                    <para>Reboot your system </para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                    <programlisting>http://localhost:8000/</programlisting>
                    <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                </listitem>
                <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
pro83a_sv --help (this will verify the Progress Database Agent)
syb11_sv --help  (this will verify the Sybase Database Agent)
</programlisting>
                    <para>
        See the detailed section about OpenLink Database Agents for additional information.</para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="linunixsrccompi">
            <title>Linux or UNIX Server Components Installation</title>
            <orderedlist>
                <listitem>
                    <para>Download appropriate
        driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software Download Wizard. Ensure that you hatched a
        checkbox for each Database Engine type that you will be connecting to via JDBC. </para>
                </listitem>
                <listitem>
                    <para>Move the Request Broker and Database Agent archives into a
        temporary installation folder on your Linux or UNIX machine then run the following
        commands from the command line prompt:</para>
                    <para>Linux:</para>
                    <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
                    <programlisting>rpm -ivh openlink-agents-4.0-2.i386-glibc2.rpm</programlisting>
                    <para>(for glibc2 based Linux Environments) or</para>
                    <programlisting>rpm -ivh openlink-agents-4.0-2.i386-libc5.rpm</programlisting>
                    <para>(for libc5 based Linux Environments)</para>
                    <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
                    <programlisting>sh install.sh</programlisting>
                </listitem>
                <listitem>
                    <para>Follow the instructions presented by the installer for
        configuring your OpenLink Database Agents.
<!-- , if you installed via a Linux RPM archive, post
        RPM installation you will need to run the &quot;oplcfg&quot;  located in the
        &quot;openlink/bin&quot; sub-directory of your OpenLink base installation directory
 -->
		    </para>
                </listitem>
                <listitem>
                    <para>The installer creates an OpenLink environment setup script
        named &quot;openlink.sh&quot; in the openlink installation&apos;s base installation directory.
        This files contains the following entries which you can modify so as to match the OpenLink
        Drivers for JDBC to the appropriate Java environment on your machine:</para>
                    <programlisting>CLASSPATH=$CLASSPATH:/openlink/openlink/jdk1.1.x/megathin.jar</programlisting>
                    <note>
                        <title>Note:</title>
                        <para>This step is only required because the Linux and UNIX installer archives
        automatically install all the OpenLink Driver types for JDBC, and also perform the default
        CLASSPATH entry configuration.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your &quot;.profile&quot; file) by executing the following
        command from your Linux or UNIX command line prompt:</para>
                    <programlisting>. openlink.sh</programlisting>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                    <programlisting>http://localhost:8000</programlisting>
                    <para>or</para>
                    <programlisting>http://&lt;hostname of current machine&gt;:8000</programlisting>
                    <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                </listitem>
                <listitem>
                    <para>An additional but non compulsory check that you may perform is to actually verify the
        existence and state of the OpenLink Database server components called the OpenLink
        Database agents. Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ingii_sv --help  (this will verify the Ingres II Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
                    <para>
        See the detailed section about OpenLink Database Agents for additional information.</para>
                </listitem>
            </orderedlist>
        </sect2>
    </sect1>
    <sect1 id="JavaAppServer">
        <title>Java Based Application-Server (3-Tier) Installation</title>
        <para>In this scenario the Java Virtual Machine and OpenLink
    Drivers for JDBC and  the OpenLink Server server components for JDBC reside on the
    same machine which is known as the Application Server. The OpenLink Database Server
    components reside on a separate Database Server machine (if required) which hosts the
    database that you will be connecting to via JDBC. </para>
        <sect2 id="wincli">
            <title>Windows 95/98/NT/2000 Client Components Installation Process.</title>
            <para>Windows 95/98/NT/2000 Application Server Components Installation</para>
            <orderedlist>
                <listitem>
                    <para>Download appropriate
        driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink Software Download Wizard.
            You would have selected &quot;Java Virtual Machine&quot; as your
        client operating system when interacting with the OpenLink download Wizard and then have
        the files &quot;megathin.jar&quot; or &quot;megathin2.jar&quot; presented in the download
        results page depending on the version of the Java Virtual Machine selected</para>
                </listitem>
                <listitem>
                    <para>Place the
        &quot;megathin.jar&quot; or &quot;megathin2.jar&quot; file into directory of your choice
        then add the directory and reference to the JAR file to your CLASSPATH environment
        variable. See example below:</para>
                    <para>Windows 95/98/NT/2000</para>
                    <para>
        Presuming you place the &quot;megathin.jar&quot; file in the &quot;\program
        files\openlink\jdk11&quot; on your Windows machine, you would add the following line to
        your &quot;autoexec.bat&quot; if you are running Windows 95/98:</para>
                    <programlisting>set CLASSPATH=%CLASSPATH%;&quot;c:\program files\openlink\jdk11\megathin.jar&quot;:. </programlisting>
                    <para>
        If you are using NT or Windows 2000 &quot; then you need to open the &quot;System
        Environment&quot; properties of the &quot;System&quot; Control Panel applet and then add
        the same entry to the &quot;System Variables&quot; section if you want the driver to be
        accessible to all users, if not place the entry in the &quot;User Variables&quot; section.</para>
                </listitem>
                <listitem>
                    <para>Reboot your machine</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                    <table>
                        <title>JDBC Driver Version Commands</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>OpenLink Driver for JDBC Type</entry>
                                    <entry>Verification Command</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                    <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink
        Driver for JDBC server components installation by starting a Web Browser session and then
        entering the following URL:</para>
                    <para>
        http://localhost:8000 or http://&lt;hostname of current machine&gt;:8000</para>
                    <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Database server components.
		     Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para>
<programlisting>
ora80_sv --help  (this will verify the Oracle Database Agent)
pro83a_sv --help (this will verify the Progress Database Agent)
syb10_sv --help  (this will verify the Sybase Database Agent)
inf73_sv --help  (this will verify the Informix Database Agent)
ingii_sv --help  (this will verify the Ingres II Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
                    <para>
        See the detailed section about OpenLink Database Agents for additional information.
        </para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="linunixappsrvcomp">
            <title>Linux or UNIX Application Server Components Installation</title>
            <orderedlist>
                <listitem>
                    <para>Presuming you place the
        &quot;megathin.jar&quot; file in the &quot;/opt/openlink/jdk11&quot; on your Linux or UNIX
        machine, you would need to modify the following line in the file &quot;openlink.sh&quot;
        so that they match what is listed below:</para>
                    <programlisting>CLASSPATH=$CLASSPATH:/opt/openlink/jdk1.1.x/megathin.jar</programlisting>
                </listitem>
                <listitem>
                    <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your &quot;.profile&quot; file) by executing the following
        command from your Linux or UNIX command line prompt:</para>
                    <programlisting>. openlink.sh</programlisting>
                </listitem>
                <listitem>
                    <para>Verify your OpenLink Driver for JDBC client components
        installation by running one of the following commands (depending on your choice of driver
        for JDBC) from a DOS Window&apos;s command prompt:</para>
                    <table>
                        <title>JDBC Driver Version Commands</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>OpenLink Driver for JDBC Type</entry>
                                    <entry>Verification Command</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Megathin Driver for JDK 1.1.x</entry>
                                    <entry>java openlink.jdbc.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.2.x </entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
                                <row>
                                    <entry>Megathin Driver for JDK 1.3.x</entry>
                                    <entry>java openlink.jdbc2.Driver</entry>
                                </row>
				<row>
                                    <entry>Megathin Driver for JDK 1.4.x</entry>
                                    <entry>java openlink.jdbc3.Driver</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                    <para>If you receive output indicating the relevant OpenLink
        component branding then this indicates that the drivers have been installed correctly and
        are ready for use with you Java environment, anything else indicates something is wrong.
        Typically this would be a mismatch between the Java Virtual machine (your default Java
        environment) and the OpenLink Driver for JDBC classes. Correcting your PATH or CLASSPATH
        environment variable entries will typically resolve these problems.</para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="dbsrvcmpins">
            <title>Database Server Components Installation</title>
            <para>Only perform these steps if you are connecting to database engines hosted on your dedicated Database Server using
    OpenLink&apos;s Database Independent Networking:</para>
            <sect3 id="win">
                <title>Windows 95/98/NT/2000</title>
                <orderedlist>
                    <listitem>
                        <para>As a separate Windows 95/98/NT/2000 is playing the role of
        Server machine, you would have downloaded a ZIP archive that contains both the OpenLink
        Client &amp; Server components for this platform. Extract the contents of this ZIP archive
        to a temporary installation folder on the Windows Server machine and then run the
        &quot;Setup.exe&quot; program</para>
                    </listitem>
                    <listitem>
                        <para>The archive you have downloaded will contain the entire
        suite of Data Access Drivers for this platform. If you do not require the OpenLink ODBC or
        OLE-DB Drivers simply uncheck these components using the installers component list dialog
        when presented during the install process. </para>
                    </listitem>
                    <listitem>
                        <para>Reboot your system.
        </para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                        <para>
        http://localhost:8000/</para>
                        <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                    </listitem>
                    <listitem>
                        <para>Verify the existence and state of the OpenLink Database
        server components called the OpenLink Database agents.
	Do this by changing into the &quot;bin&quot; sub-directory of the
        OpenLink base directory. Then run an agent with the --help parameter. For example:
        </para><programlisting>
ingii_sv --help  (this will verify the Ingres II Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
                        <para>See the detailed section about OpenLink Database Agents for additional information.</para>
                    </listitem>
                </orderedlist>
            </sect3>
            <sect3 id="linunixsrv">
                <title>Linux or UNIX Server</title>
                <orderedlist>
                    <listitem>
                        <para>Download appropriate
        driver software installation archive using the instructions provided in the section that
        covers interaction with the OpenLink <ulink url="#Downloading and Installing the Software">Software
        Download Wizard</ulink>. Ensure that you hatched a checkbox for each Database Engine type that
        you will be connecting to via JDBC. </para>
                    </listitem>
                    <listitem>
                        <para>Move the Request Broker and Database Agent archives into a
        temporary installation folder on your Linux or UNIX machine then run the following
        commands from the command line prompt:</para>
                        <para>Linux:</para>
                        <programlisting>rpm -ivh openlink-4.0-2.rpm</programlisting>
                        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-glibc2.rpm</programlisting>
                        <para> (for glibc2 based Linux Environments) or</para>
                        <programlisting>rpm -ivh openlink-agents-4.0-2.i386-libc5.rpm</programlisting>
                        <para> (for libc5 based Linux Environments)</para>
                        <para>Linux (if your Linux system does not have the RPM facility) and UNIX:</para>
                        <programlisting>sh install.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Follow the instructions presented by the installer for
        configuring your OpenLink Database Agents.
	<!-- if you installed via a Linux RPM archive, post
        RPM installation you will need to run the &quot;oplcfg&quot; located in the
        &quot;openlink/bin&quot; sub-directory of your OpenLink base installation directory. -->
        </para>
                    </listitem>
                    <listitem>
                        <para>The installer creates an OpenLink environment setup script
        named &quot;openlink.sh&quot; in the openlink installation&apos;s base installation directory.
        This files contains the following entries which you can modify so as to match the OpenLink
        Drivers for JDBC to the appropriate  Java environment on your machine:</para>
                        <programlisting>CLASSPATH=$CLASSPATH:/openlink/openlink/jdk1.1.x/megathin.jar</programlisting>
                        <note>
                            <title>Note:</title>
                            <para>This step is only required because the Linux and UNIX installer archives
        automatically install all the OpenLink Driver types for JDBC, and also perform the default
        CLASSPATH entry configuration.</para>
                        </note>
                    </listitem>
                    <listitem>
                        <para>Run the script &quot;openlink.sh&quot; (you may also want
        to add a reference to this in your &quot;.profile&quot; file) by executing the following
        command from your Linux or UNIX command line prompt:</para>
                        <programlisting>. openlink.sh</programlisting>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Driver for JDBC server components
        installation by starting a Web Browser session and then entering the following URL:</para>
                        <programlisting>http://localhost:8000</programlisting>
                        <para>or </para>
                        <programlisting>http://&lt;hostname of current machine&gt;:8000</programlisting>
                        <para>
        If you are presented with the Home Page of the OpenLink Admin Assistant then this confirms
        that your OpenLink Server environment is also correctly setup.</para>
                    </listitem>
                    <listitem>
                        <para>Verify your OpenLink Database server components, you do
        this by moving into the &quot;bin&quot; sub-directory of your OpenLink installation&apos;s base
        installation directory. Then run one of the following commands (depending on what
        database(s) you will be connecting to via JDBC):</para>
<programlisting>
ora80_sv --help  (this will verify the Oracle Database Agent)
pro83a_sv --help (this will verify the Progress Database Agent)
syb11_sv --help  (this will verify the Sybase Database Agent)
inf73_sv --help  (this will verify the Informix Database Agent)
ingii_sv --help  (this will verify the Ingres II Database Agent)
db2_sv --help    (this will verify the IBM DB2 Database Agent)
</programlisting>
                        <para>See the detailed section about OpenLink Database Agents for additional information.</para>
                    </listitem>
                </orderedlist>
            </sect3>
        </sect2>
        <sect2 id="MixedEnvironmentInstallations">
            <title>Mixed Environment Installations</title>
            <para>It is important to note that the client and server
    operating systems hosting your OpenLink  Software do not have to be the same. The
    Installation instructions have only taken this approach in order to simplify understanding
    of the installation process. A Linux or UNIX machine can act as a client to a Windows
    machine and vice versa, all you have to do is follow the steps for installing either the client
    or server components on the appropriate platform.</para>
        </sect2>
    </sect1>
    <!-- ===== ~~~~~ ===== ~~~~~ ===== ~~~~~ ===== -->
    <sect1 id="OpenLinkMiddleware">
        <title>OpenLink Server Components Configuration</title>
        <para>The OpenLink JDBC agent and OpenLink Database agents form
    the OpenLink server components, In the prior section you would have installed these
    components on the appropriate server machine. </para>
        <para>Following installation you have to configure these server components in order to enable
    connectivity between your backend database(s) and your OpenLink Driver for JDBC. Both of
    these components are exposed to your OpenLink Driver for JDBC via the OpenLink Request Broker.</para>
        <para>This new OpenLink release enables the direct connection to an OpenLink Database agent from your OpenLink Java client classes, as JDBC support in now built in to the database agents. Thus you no longer have to connect via the OpenLink JDBC Agent proxy, as in the past, although connection via this method is still supported. Obviously connecting directly to the Database agent will provide better performance, and is now the recomended connection method whenever possible.
</para>
        <formalpara>
            <title>JDBC Agents</title>
            <para>These server components are available in two formats, one
    based on the OpenLink Generic ODBC technology and the other based on OpenLink Generic UDBC
    technology. </para>
            <para>The ODBC based agents are identified as &quot;JODBC&quot;
    agents to the OpenLink Driver for JDBC and packaged as &quot;jodbc_sv.exe&quot; and
    &quot;jodbc_sv&quot; on Windows and Linux/UNIX platforms respectively. The JODBC agent
    provides you with the flexibility of either connecting to backend databases via existing
    ODBC DSNs or directly (DSN-Less connections), this facility also has the added benefit of
    not restricting the use of your Type 3 OpenLink Driver for JDBC to OpenLink ODBC DSNs.
    This is how OpenLink provides remote JDBC-ODBC Bridging with out compromising the platform
    independence or Java Purity required of a Type 3 JDBC Driver.</para>
            <para>The UDBC based agents are identified as &quot;JUDBC&quot;
    agents to the OpenLink Driver for JDBC and packaged as &quot;judbc_sv.exe&quot; and
    &quot;judbc_sv&quot; on Windows and Linux/UNIX platforms respectively. The JUDBC agent
    provides you with the flexibility of either connecting to backend databases via existing
    UDBC DSNs or directly (DSN-Less connections). This is how OpenLink provides remote
    JDBC-Native Interface Bridging without compromising the platform independence or Java
    Purity required of a Type 3 JDBC Driver: the OpenLink UDBC layer acts as a Generic Native
    Database Interface. It does not have any interaction with an ODBC Driver Manager or ODBC
    DSNs.
</para>
        </formalpara>
        <formalpara>
            <title>Database Agents</title>
            <para>OpenLink Database Agents are the OpenLink data access
    server components that actually provide database connectivity services to your OpenLink
    Driver for JDBC. A Database Agent exists for each database engine supported by OpenLink,
    the supported database list currently includes: Oracle, DB2, Informix, Sybase, Ingres,
    Progress, Microsoft SQL Server, OpenLink Virtuoso, Solid, PostgresSQL, and other ODBC
    based databases.</para>
            <para>Please follow the instructions
provided in the OpenLink Database Agents configuration guide prior to attempting to use
your OpenLink Drivers for JDBC (if you haven&apos;t already done so as part of the installation process).
            </para>
        </formalpara>
    </sect1>
    <!-- ===== ~~~~~ ===== ~~~~~ ===== ~~~~~ ===== -->
    <sect1 id="OPLDriversUtilization">
        <title>OpenLink Drivers for JDBC Utilization</title>
        <para>OpenLink Drivers for JDBC are available in three
    different JDBC Driver formats.</para>
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>JDBC Type 1</title>
                    <para>Driver for JDBC is implemented as a bridge to ODBC Drivers, thereby implementing the JDBC
        Driver classes through native methods, this is due to the fact that ODBC is a &apos;C&apos; language
        based data access application programming interface. Thus, this driver format is
        inherently part Java and part Native, implying that it is inherently platform specific
        rather than independent.
        </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>JDBC Type 3</title>
                    <para>Driver for JDBC is implemented in Java
        sitting atop a database independent networking layer bridge also implemented in Java.
        Thus, the entire driver is Pure Java and thereby operating system independent.</para>
                </formalpara>
            </listitem>
        </itemizedlist>
        <para>JDBC Applets, Applications, Bean Components, and Servlets
    communicate with JDBC drivers through JDBC Uniform Resource Locators (URLs). Theses URLs
    are service request and binding formats implemented slightly differently for each OpenLink
    Driver for JDBC format. The general JDBC URL format is:</para>
        <para>jdbc:&lt;jdbc-subprotocol&gt;:[jdbc implementation
    specific URL attributes]</para>
        <para>The &quot;sub-protocol&quot; component of the URL above
    identifies each JDBC implementation and typically identifies the JDBC driver vendor, the
    actual URL attributes are vendor specific. Each OpenLink Driver for JDBC type has a
    different JDBC URL format, the sections that follow depict and provides examples of these
    formats.</para>
        <sect2 id="JDBCType1">
            <title>OpenLink Driver for JDBC Type 1 </title>
            <para>This driver format connects you to ODBC Data Source Names (DSNs) via JDBC. The URL format
    is as follows:</para>
            <programlisting>jdbc:openlink://ODBC[/DSN][/UID][/PWD][/READONLY]</programlisting>
            <formalpara><title>URL Format</title>
            <simplelist>
	      <member>/DSN - ODBC Data Source Name</member>
              <member>/UID - Username</member>
              <member>/PWD - Password</member>
              <member>/READONLY - Determines session mode, read-write or read-only.</member>
	    </simplelist>
	    </formalpara>
            <formalpara><title>Example</title>
            <para>If you were attempting to connect to an ODBC DSN on your machine named &quot;CustomerDatabase&quot; in read-only mode then you would enter the following JDBC URL:</para>
            <programlisting>jdbc:openlink://ODBC/DSN=CustomerDatabase/UID=test/PWD=test/READONLY=Y</programlisting>
            <note>
                <title>Note:</title>
                <para>In the case of OpenLink ODBC DSNs you do not have
    to provide values for the /UID and /PWD attributes since these can be controlled and
    configured on the database or application server using the OpenLink Session Rules Book.
    </para>
            </note>
	    </formalpara>
        </sect2>
        <sect2 id="JDBCType3">
            <title>OpenLink Driver for JDBC Type 3</title>
            <para>URL Format</para>
            <para>This driver format connects you to remote database using
    remote ODBC DSNs.  It also supports direct DSN-Less connections to
    remote databases. The URL format is as follows:</para>
            <programlisting>
jdbc:openlink://&lt;Hostname&gt;:[portnumber] [/UID] [/PWD] [/READONLY] [/SVT]
      [/APPLICATION] [/FBS|FETCHBUFFERSIZE] [/ENCRYPTED] [/CHARSET] [/UNICODE]
      [/DLF] [/DATABASE] [/OPTIONS] [/DRIVER]</programlisting>
	    <formalpara><title>URL Attributes</title>
            <simplelist>
              <member>Hostname - Network Alias or IP address of server machine
    running an OpenLink Request Broker instance</member>
              <member>Port Number - Port number that identifies location of
    OpenLink JDBC Agent Service, the default value is 5000</member>
              <member>/UID - Username</member>
              <member>/PWD - Password</member>
              <member>/READONLY - Determines session mode, read-write or
    read-only</member>
              <member>/SVT - Determines OpenLink Database Agent type (Oracle,
    Informix, Sybase, Progress, Ingres, SQL Sever, Sybase etc.) </member>
              <member>/APPLICATION - Set the Application name with which
			  connections have to be obtained.</member>
              <member>/FBS - (also FETCHBUFFERSIZE) Sets the Fetch Buffer Size,
			  which is the number of JDBC resultset rows that get packed
    into a single network packet</member>
              <member>/ENCRYPTED - Set the Encrypted flag for outgoing packets with which
		connections have to be obtained. The encryption isn't used by
		default. The value may be '1', '0', 'Y', 'N', 'y', 'n'</member>
              <member>/CHARSET	- Set the charset of remote database with which connections
		have to be obtained. The default value is get from
		System.getProperty("file.encoding")</member>
              <member>/UNICODE  - Set the Unicode attribute with which connections have to be
		 obtained. The unicode connection isn't used by default.
		 The value may be '1', '0', 'Y', 'N', 'y', 'n'</member>
              <member>/DLF	- Set the DeferLongFetch attribute with which connections have
		 to be obtained. The defer Long etch isn't used by default.
		 The value may be '1', '0', 'Y', 'N', 'y', 'n'</member>
              <member>/DATABASE - Actual database name within a particular
    database environment</member>
              <member>/OPTIONS - Values used to connect to OpenLink Database
    Agents to remote database servers using database vendors networking</member>
              <member>/DRIVER - IS the Driver name in {}, used when making a DSN-Less
			  connection to a remote ODBC Driver</member>
            </simplelist>
            </formalpara>
        </sect2>
        <sect2 id="examples">
            <title>Examples</title>
            <sect3 id="connremoteodbc">
    <title>Connecting To Remote Database</title>
    <para>If you were attempting to connect to a remote Database
    Server Type &quot;SQLServer 2000&quot;, hosted on a database server machine with the network
    alias &quot;pluto&quot;, with an OpenLink JDBC server listening at port 5001 (rather than default of 5000), and you wanted
    this session to be in read-only mode then you would enter the following JDBC URL:</para>
    <programlisting>jdbc:openlink://pluto:5001/SVT=SQLServer 2000/UID=test/PWD=test/
		READONLY=YES/FBS=55</programlisting>
    <note><title>Note:</title>
		<orderedlist>
      <listitem><para>In the case of OpenLink ODBC DSNs you do not have to
        provide values for the /UID and /PWD attributes since these can be controlled and
        configured on the database or application server using the OpenLink Session Rules Book</para>
      </listitem>
      <listitem><para>&quot;/FBS&quot; ensures that each iteration of a JDBC
        Resultset fetch loop returns 55 records or less until all records have been retrieved from
        a remote database server</para></listitem>
    </orderedlist>
	</note>
	</sect3>
            <sect3 id="connremoteudbc">
                <title>Connecting To Remote UDBC DSN</title>
                <para>If you were attempting to connect to a remote UDBC DSN
    named &quot;CustomerDatabase&quot;, hosted on a database server machine with the network
    alias &quot;pluto&quot;, with an OpenLink JDBC server listening at port 5001 (rather than default of 5000),
        and you wanted
    this session to be in read-only mode then you would enter the following JDBC URL:</para>
                <programlisting>jdbc:openlink://pluto:5001/DSN=CustomerDatabase/UID=test/PWD=test/
        READONLY=Y/JDBCAGENT=judbc/FBS=55</programlisting>
                <note>
                    <title>Note:</title>
                    <para>
                        <orderedlist>
                            <listitem>
                                <para>In the case of OpenLink ODBC DSNs you do not have to
        provide values for the /UID and /PWD attributes since these can be controlled and
        configured on the database or application server using the OpenLink Session Rules Book
        </para>
                            </listitem>
                            <listitem>
                                <para>If &quot;pluto&quot; is a Linux or UNIX machine then the
        &quot;/JDBCAGENT&quot; attribute defaults to &quot;judbc&quot; when left out of the JDBC
        URL. Likewise if &quot;pluto&quot; is a Windows 95/98/NT/2000 machine the
        &quot;/JDBCAGENT&quot; attribute defaults to &quot;jodbc&quot;</para>
                            </listitem>
                            <listitem>
                                <para>&quot;/FBS&quot; ensures that each iteration of a JDBC
        Resultset fetch loop returns 55 records or less until all records have been retrieved from
        a remote database server</para>
                            </listitem>
                        </orderedlist>
                    </para>
                </note>
            </sect3>
            <sect3 id="dsnlessconnection">
                <title>Connecting directly via your OpenLink Database agent</title>
                <para>As your OpenLink Database Agent now has built-in support for JDBC, you can make a direct connection to the database using the Type-3 format by specifying the OpenLink Database Type and Database Name attributes as part of your JDBC URL. This is the recommended connection method for a JDBC Type-3 connection whenever possible.</para>
                <para>To connect to a remote Microsoft SQL Server 6 or 7 database using this format you would construct the following URL:</para>
                <programlisting>jdbc:openlink://saturn:5001/SVT=SQLServer 6/DATABASE=pubs/UID=sa/
        PWD=/FBS=55/READONLY=Y</programlisting>
                <note>
                    <title>Notes:</title>
                    <para>
                        <orderedlist>
                            <listitem>
                                <para>You do not necessarily have to
        provide values for the /UID and /PWD attributes since these can be controlled and
        configured on the database or application server using the OpenLink Session Rules Book</para>
                            </listitem>
                            <listitem>
                                <para>Since we are using the direct Database Agent connection type, no JDBC agent reference will be needed in the URL string.</para>
                            </listitem>
                        </orderedlist>
                    </para>
                </note>
            </sect3>
            <sect3 id="dsnlessodbcdriverconn">
                <title>Connecting To Database via ODBC Driver Without A DSN (DSN-Less Connection)</title>
                <para>This JDBC URL format is currently only supported by the
    OpenLink JDBC Agent for ODBC DSNs (JODBC Agent).  DSN-Less connections require you to
    determine the ODBC connect string attributes for the ODBC Driver that you are using. For
    OpenLink ODBC Drivers these values are:</para>
                <table>
                    <title>Connect String Attributes</title>
                    <tgroup align="char" charoff="50" char="." cols="2">
                        <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                        <thead>
                            <row>
                                <entry>Attribute</entry>
                                <entry>Description</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>Driver</entry>
                                <entry>Full driver name as defined in the ODBC control panel</entry>
                            </row>
                            <row>
                                <entry>ServerType</entry>
                                <entry>Database Agent Type</entry>
                            </row>
                            <row>
                                <entry>Host</entry>
                                <entry>Machine hosting the Database Agent serving an OpenLink ODBC Driver</entry>
                            </row>
                            <row>
                                <entry>Username</entry>
                                <entry>Valid Database Username</entry>
                            </row>
                            <row>
                                <entry>Password</entry>
                                <entry>Valid Password for Username</entry>
                            </row>
                            <row>
                                <entry>FetchBufferSize</entry>
                                <entry>Number of resultset records fetched during each ODBC fetch loop</entry>
                            </row>
                            <row>
                                <entry>Database</entry>
                                <entry>Actual database name within database server environment</entry>
                            </row>
                            <row>
                                <entry>NoLoginBox</entry>
                                <entry>Disables OpenLink ODBC
    Drivers attempt to present dialog when ODBC Driver determines an incomplete ODBC connect
    string (collection of ODBC attributes passed at connect time) good examples being missing
    or blank &quot;Username&quot; and &quot;Password&quot; attributes.</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <para>If you were connecting a remote Oracle database on a
    machine called &quot;pluto&quot; and you wanted this session to be read-only, your URL
    formal would be as follows:</para>
                <programlisting>jdbc:openlink://pluto/DRIVER={OpenLink Generic 32 Bit Driver v4.0}/Database=ORCL/Username=test/
            PWD=test/ReadOnly=Yes/FBS=55/ServerType=Oracle 8/Host=pluto</programlisting>
            </sect3>
            <sect3 id="ConnectingToRemoteDBonSepServer">
                <title>Connecting To Remote Databases on a Separate Server Machine (OpenLink 3-Tier Architecture)</title>
                <para>You may choose to install your OpenLink Drivers for JDBC
    on an Application Server and then install your OpenLink Data Access Server components
    (Request Broker and Database Agents) on your dedicated database server machine. In such a
    scenario, you will be connecting to your remote database engine using OpenLink Database Independent
    networking as opposed to your Database vendor&apos;s database specific networking middleware. Please note that you
    would need the OpenLink server components installed on both the application server and the database server in this
    scenario.</para>
                <para>If you were connecting from an Application Server
    called &quot;pluto&quot; to a dedicated Database Server machine named
    &quot;ora_server&quot;, hosting an Oracle 8i database identified as &quot;ORCL&quot;
    you would construct the following JDBC URL:</para>
                <programlisting>jdbc:openlink://pluto/SVT=JDBC/HOST=ora_server/DATABASE=ORCL/UID=test/PWD=test</programlisting>
                <note>
                    <title>Notes:</title>
                    <para>
                        <orderedlist>
                            <listitem>
                                <para>This URL string assumes that you have already configured the Generic JUDBC client to point to
                                 the "Oracle 8.1.x" Server Type. This is done via the Admin Assistant, under "Database Agent Administration".</para>
                            </listitem>
                            <listitem>
                                <para>This feature applies to both OpenLink JDBC Agent types: JODBC Agent and JUDBC Agent.</para>
                            </listitem>
                            <listitem>
                                <para>You could also have used the &quot;/DSN&quot;
        attribute to point to an ODBC or UDBC DSN which has been configured to connect to the
        Database Server machine. This requires you to have configured a UDBC DSN (Unix) or ODBC DSN (Windows) on your
        Application Server machine, but it removes the necessity to embed connection attributes such as Database name and Username/Password
        in your URL string.</para>
                            </listitem>
                        </orderedlist>
                    </para>
                </note>
            </sect3>
            <sect3 id="ConnectingToRemoteDBUsingDBComs">
                <title>Connecting To Remote Databases On Separate Server Machine Using Database Vendor's Networking (Mixed 3-Tier Architecture)</title>
                <para>Organizational standards or individual preference may
    present you with a scenario in which you have two server machines in use: one acting as an
    Application Server hosting your OpenLink Drivers for JDBC and OpenLink Data Access Server
    components (Request Broker &amp; Database Agents), and the other acting as a dedicated
    Database Server. You may not have the necessary authority to install the OpenLink Data
    Access Server components on the Database Server, or you simply prefer to use your database
    vendor's networking software which is already configured on your Application Server. This
    scenario can be described as a &quot;Mixed 3-Tier&quot; architecture, as you are going to use your OpenLink Database Agents atop database-vendor-provided networking,
    rather than connecting to an OpenLink Database Agent using OpenLink Database-independent networking. (Thus, no OpenLink
    server components would need to be installed on your Application Server.)</para>
                <para>If you were connecting to a remote Oracle 8i database
    somewhere on your network from an application server called &quot;pluto&quot;, you would construct the following JDBC URL (assuming an existing TNS alias / Net*8 server alias, called &quot;ora_pluto&quot;):</para>
                <programlisting>jdbc:openlink://pluto/SVT=Oracle 8.1.x/UID=test/PWD=test/OPTIONS=ora_pluto</programlisting>
                <note>
                    <title>Notes:</title>
                    <para>
                        <orderedlist>
                            <listitem>
                                <para>The &quot;/OPTIONS&quot; JDBC URL attribute provides the
        entry or bind point for connecting OpenLink Database agents to a Database vendor's networking
        products. This applies to all supported OpenLink databases.  See the OpenLink Database Agents configuration guide for
        additional information relating to the database-specific formats of values passed to the
        &quot;/OPTIONS&quot; JDBC URL attribute.</para>
                            </listitem>
                            <listitem>
                                <para>This feature applies to both OpenLink JDBC Agent types:
        JODBC Agent and JUDBC Agent
        </para>
                            </listitem>
                            <listitem>
                                <para>You could also have used the &quot;/DSN&quot;
        attribute to point to an ODBC or UDBC DSN which has been configured to connect to the
        Database Server machine, this simply reduces the size of your JDBC URL, but imposes the
        use of DSNs upon you (see "Connecting to Remote UDBC DSN"). </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </note>
            </sect3>
        </sect2>
    </sect1>
    <!-- ===== ~~~~~ ===== ~~~~~ ===== ~~~~~ ===== -->
    <sect1 id="JDBCDemos">
        <title>OpenLink Demonstration Programs</title>
        <para>To assist you further during your utilization or evaluation
    of OpenLink&apos;s Drivers for JDBC a number of demonstration JDBC
    compliant Applets and Applications are bundled with your OpenLink Driver for JDBC
    installation, these programs are provided  in both binary and source code format for
    your free use. The sections that follow guide you through the process of using these
    programs</para>
        <sect2 id="JDBCAppletDemos">
            <title>JDBC Compliant Applet Demos</title>
            <para>Three JDBC applet samples are bundled with your OpenLink
    Driver for JDBC installation, each one of these demonstrating practical use of JDBC
    applets and highlighting OpenLink specific functionality. Each of these demos reside in
    the &quot;samples\jdbc\jdk[10 or 11 or 12]&quot; sub-directory below the directory into
    which you installed your OpenLink software. Each applet is accessible from the OpenLink
    Admin Assistant (an OpenLink agent that provides HTTP services like any Web Server does).
    The programs are:</para>
            <orderedlist>
                <listitem>
                    <formalpara>
                        <title>JDBCDemo</title>
                        <para>demonstrates basic JDBC functionality via an Applet</para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>ScrollDemo</title>
                        <para>demonstrates JDBC
        functionality via an Applet. It also demonstrates the additional Resultset navigation
        functionality provided by OpenLink&apos;s Scrollable Resultset &amp; RowSet Extensions for JDBC
        on a Record by Record Basis.</para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>ScrollDemo2</title>
                        <para>demonstrates JDBC
        functionality via an Applet. It also demonstrates the additional Resultset navigation
        functionality provided by JDBC 2.0</para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>RowSetDemo</title>
                        <para>demonstrates JDBC
        functionality via an Applet. It also demonstrates the additional Resultset navigation
        functionality provided by OpenLink&apos;s Scrollable Resultset &amp; RowSet Extensions for JDBC
        on a RowSet by RowSet Basis.</para>
                    </formalpara>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="SimpleJDBCDemo">
            <title>JDBCDemo</title>
            <para>This applet demonstrates basic JDBC functionality via an Applet.</para>
            <para>Utilization Steps:</para>
            <orderedlist>
                <listitem>
                    <para>Start the OpenLink Request Broker
    <!-- (click <ulink url="../nt/servnt.htm#Startup">here</ulink> for instructions on how to do this under Windows
        and <ulink url="../servadm.htm#Startup">here</ulink> on how to do this on Linux or UNIX machines)<br> -->
                    </para>
                </listitem>
                <listitem>
                    <para>Start up your Web Browser
        </para>
                </listitem>
                <listitem>
                    <para>Enter one of the following URLs into your browser depending on the location of your OpenLink Request Broker:</para>
                    <para>Local To you:</para>
                    <programlisting>http://localhost:8000</programlisting>
                    <para>Remote Server:</para>
                    <programlisting>http://&lt;hostname or IP address of remote server&gt;:8000</programlisting>
                    <note>
                        <title>Note:</title>
                        <para>Port &quot;8000&quot; presumes that you provide this value when prompted during your
        OpenLink Sever components installation.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>Follow the Admin Assistant&apos;s Menu tree to the location of
        the &quot;Sample Applications-&gt;JDBC Applet Demos&quot; menu item. The graphic below
        depicts this process.</para>
                    <figure id="fg-001" float="1">
                        <title>JDBC Applet Demos</title>
                        <graphic fileref="clicls0x.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Click on the hyperlink that reads &quot;Applet
        demonstration with OpenLink Software JDBC Driver&quot;
        </para>
                </listitem>
                <listitem>
                    <para>Use the Applet&apos;s File-&gt;Set Connection URL menu item to enter
        a URL to the data source. If uncertain follows the instructions laid out in
        the section covering OpenLink JDBC URL formats which
        shows you how to construct Type 1, 2, and 3 URL formats for your OpenLink Drivers for JDBC. This applet
        will run with non OpenLink Drivers for JDBC but you will need to obtain URL construction
        information from the relevant driver vendor.</para>
                    <para>
        The line below depicts the URL construction dialog presented:</para>
                    <programlisting>jdbc:openlink://localhost/SVT=Oracle 7/DATABASE=ORCL/UID=scott/PWD=tiger</programlisting>
                </listitem>
                <listitem>
                    <para>Enter a valid SQL statement for the backend database that
        you are connecting to via JDBC and then click on the &quot;Query&quot; button. The screen
        shot below depicts this process:</para>
                    <figure id="fg-002" float="1">
                        <title>WebJDBC Applet Demo</title>
                        <graphic fileref="clicls09.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Basic JDBC 1.1 functionality provides Forward-Only as
        opposed to Bi-Directional record Scrolling, this is why the basic JDBC applet on has a
        &quot;Next&quot; button. When you click on the &quot;Next&quot; button you are moved to
        the next record in your JDBC resultset, unfortunately you have to hit the
        &quot;Query&quot; button again and re-start the Forward-Only resultset navigation if you
        need to see the First or Prior resultset records from your current position. The examples
        that follow show how OpenLink and the new release of JDBC (version 2.0) address the
        Bi-Directional Scrolling Limitation demonstrated by this Applet.
        </para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="ScrollDemo">
            <title>ScrollDemo</title>
            <para>This program demonstrates JDBC functionality via an
    Applet. It also demonstrates the additional Resultset navigation functionality provided by
    OpenLink&apos;s Scrollable Resultset &amp; RowSet Extensions for JDBC on a Record by Record
    Basis.</para>
            <para>Utilization Steps:</para>
            <orderedlist>
                <listitem>
                    <para>Start the OpenLink Request Broker.
<!-- (click <ulink url="../nt/servnt.htm#Startup">here</ulink> for instructions on how to do this under Windows
        and <ulink url="../servadm.htm#Startup">here</ulink> on how to do this on Linux or UNIX machines)<br> -->
                    </para>
                </listitem>
                <listitem>
                    <para>Start up your Web Browser</para>
                </listitem>
                <listitem>
                    <para>Enter one of the following URLs into your browser
        depending on the location of your OpenLink Request Broker:</para>
                    <para>Local To you:</para>
                    <para>http://localhost:8000</para>
                    <para>Remote Server:</para>
                    <para>http://&lt;hostname or IP address of remote server&gt;:8000</para>
                    <note>
                        <title>Note:</title>
                        <para>Port &quot;8000&quot; presumes that you provide this value when prompted during your
        OpenLink Sever components installation.
        </para>
                    </note>
                </listitem>
                <listitem>
                    <para>Follow the Admin Assistant&apos;s Menu tree to the location of
        the &quot;JDBC Applet Demos&quot; menu item. The graphic below depicts this process.</para>
                    <figure id="fg-003" float="1">
                        <title>WebJDBC Applet Demo</title>
                        <graphic fileref="clicls0x.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Click on the hyperlink that reads &quot;Applet
        demonstration with OpenLink Software JDBC Scrollable Cursor extensions&quot;
        </para>
                </listitem>
                <listitem>
                    <para>Use the Applet&apos;s File-&gt;Set Connection URL menu item to enter
        a URL to the data source. If uncertain follows the instructions laid out in
        the section covering OpenLink JDBC URL formats which
        shows you how to construct Type 1, 2, and 3 URL formats for your OpenLink Drivers for JDBC.</para>
                    <para>The line below depicts the URL construction dialog presented:</para>
                    <programlisting>jdbc:openlink://localhost/SVT=Oracle 7/DATABASE=ORCL/UID=scott/PWD=tiger</programlisting>
                </listitem>
                <listitem>
                    <para>Enter a valid SQL statement for the backend database that
        you are connecting to via JDBC and then click on the &quot;Query&quot; button. The screen
        shot below depicts this process:</para>
                    <figure id="fg-004" float="1">
                        <title>WebScroll Applet Demo</title>
                        <graphic fileref="clicls12.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>JDBC 1.1 functionality provides Forward-Only as opposed to
        Bi-Directional Resultset Scrolling, OpenLink&apos;s Scrollable Resultset Extensions for JDBC
        enable Bi-Directional Resultset Scrolling. This is why this applet has an additional set
        of Resultset Navigation buttons: &quot;First&quot;,&quot;Next&quot;,
        &quot;Prior&quot;,&quot;Last&quot;, &quot;Lock&quot;, &quot;Unlock&quot;, &quot;Add&quot;,
        &quot;Update&quot;, &quot;Get Bookmark&quot;, &quot;Set Bookmark&quot;, &quot;and Go
        To&quot; .  The existence of Bi-directional Scrollable Resultsets (or Cursors) is
        often presumed by end-users and developers alike, its importance rarely understood prior
        to embarking upon JDBC application development or product selection, the unfortunate
        consequence being complex application re-writes or implementation of sub par JDBC
        solutions. Each of the button in the applet demo is explained below so as to understand
        the magnitude of this issue:</para>
                    <table>
                        <title>Scroll Demo Keys Explained</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>Button</entry>
                                    <entry>Explanation</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>First</entry>
                                    <entry>takes you to first record in the Resultset</entry>
                                </row>
                                <row>
                                    <entry>Next</entry>
                                    <entry>takes you to the next record in the Resultset from your current position</entry>
                                </row>
                                <row>
                                    <entry>Prior</entry>
                                    <entry>takes you to the previous record in the Resultset from your current position</entry>
                                </row>
                                <row>
                                    <entry>Last</entry>
                                    <entry>takes you to the last record in the Resultset</entry>
                                </row>
                                <row>
                                    <entry>Lock</entry>
                                    <entry>locks the current record</entry>
                                </row>
                                <row>
                                    <entry>Unlock</entry>
                                    <entry>unlocks the current record</entry>
                                </row>
                                <row>
                                    <entry>Add</entry>
                                    <entry>add a new record to database</entry>
                                </row>
                                <row>
                                    <entry>Update</entry>
                                    <entry>change current record</entry>
                                </row>
                                <row>
                                    <entry>Delete</entry>
                                    <entry>remove current record from database</entry>
                                </row>
                                <row>
                                    <entry>Get Bookmark</entry>
                                    <entry>mark current record position for future revisit</entry>
                                </row>
                                <row>
                                    <entry>Set Bookmark</entry>
                                    <entry>revisit previous marked position in current ResultSet</entry>
                                </row>
                                <row>
                                    <entry>Go To</entry>
                                    <entry>go directly to a specific record number within the current ResultSet</entry>
                                </row>
                                <row>
                                    <entry>Refresh</entry>
                                    <entry>Reopen current resultset</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="Scroll2Demo">
            <title>ScrollDemo2</title>
            <para>This applet demonstrates JDBC functionality via an
    Applet. It also demonstrates the additional Resultset navigation functionality provided by
    JDBC 2.0</para>
            <para>This Applet require a browser that is Java Virtual Machine version 1.2.x or 2.x compliant.
    If you do not have such a Browser, you can simply run the JDBC Application version of this program.</para>
            <para>Utilization Steps:</para>
            <orderedlist>
                <listitem>
                    <para>Start the OpenLink Request Broker</para>
                </listitem>
                <listitem>
                    <para>Start up your Web Browser</para>
                </listitem>
                <listitem>
                    <para>Enter one of the following URLs into your browser
        depending on the location of your OpenLink Request Broker:</para>
                    <para>Local To you:</para>
                    <para>http://localhost:8000/</para>
                    <para>Remote Server:</para>
                    <para>http://&lt;hostname or IP address of remote server&gt;:8000</para>
                    <note>
                        <title>Note:</title>
                        <para>Port &quot;8000&quot; presumes that you provide this value when prompted during your
        OpenLink Sever components installation.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>Follow the Admin Assistant&apos;s Menu tree to the location of
        the &quot;Sample Applications-&gt;JDBC Applet Demos&quot; menu item. The graphic below
        depicts this process.</para>
                    <figure id="fg-005" float="1">
                        <title>Scroll2 Applet Demo</title>
                        <graphic fileref="clicls0x.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Click on the hyperlink that reads &quot;Applet
        demonstration with OpenLink Software JDBC 2.0 Scrollable Cursors&quot;
        </para>
                </listitem>
                <listitem>
                    <para>Use the Applet&apos;s File-&gt;Set Connection URL menu item set
        register your Driver for JDBC 2.0 and then enter a URL pointing to an ODBC or UDBC DSN. If
        uncertain follow the instructions laid out in the section covering OpenLink JDBC URL formats which shows you how to
        construct Type 1, 2, and 3 URL formats for your OpenLink Drivers for JDBC. This applet will
        run with non OpenLink Drivers for JDBC but you will need to obtain Driver registration and
        JDBC URL construction information from the relevant Driver vendor.</para>
                    <para>
        The screen shot below depicts the URL construction dialog presented:</para>
                    <figure id="fg-006" float="1">
                        <title>Connection dialog</title>
                        <graphic fileref="clicls08.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Enter a valid SQL statement for the backend database that
        you are connecting to via JDBC and then click on the &quot;Query&quot; button.
        </para>
                </listitem>
                <listitem>
                    <para>JDBC 1.1 functionality provides Forward-Only as opposed to
        Bi-Directional Resultset Scrolling, JDBC 2.0 on the other hand supports Bi-Directional
        Resultset Scrolling. As a result this applet has an additional set of Resultset Navigation
        buttons: &quot;First&quot;,&quot;Next&quot;, &quot;Previous&quot;,&quot;Last&quot;,
        &quot;Insert&quot;, &quot;Update&quot;, &quot;Absolute&quot;, &quot;Relative&quot;.
        Unfortunately JDBC 2.0 does not provide Bookmarking or Row Level concurrency control hence
        the exclusion of the &quot;Lock&quot;, &quot;UnLock&quot;, &quot;Go To&quot;, &quot;Set
        Bookmark&quot;, &quot;Get Bookmark&quot; navigation buttons provided in the
        &quot;ScrollDemo&quot; applet. To use this functionality in a JDBC 2.0 environment you
        simply make use of the OpenLink Scrollable ResultSet &amp; RowSet Extensions.</para>
                    <para>
        Each navigation button is described below so as to shed more light on the Scrollable
        ResultSet functionality provided by JDBC 2.0.</para>
                    <table>
                        <title>Scroll Demo Keys Explained</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>Button</entry>
                                    <entry>Explanation</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>First</entry>
                                    <entry>takes you to first record in the Resultset</entry>
                                </row>
                                <row>
                                    <entry>Next</entry>
                                    <entry>takes you to the next record in the Resultset from your current position</entry>
                                </row>
                                <row>
                                    <entry>Previous</entry>
                                    <entry>takes you to the previous record in the Resultset from your current position</entry>
                                </row>
                                <row>
                                    <entry>Last</entry>
                                    <entry>takes you to the last record in the Resultset</entry>
                                </row>
                                <row>
                                    <entry>Add</entry>
                                    <entry>add a new record to database</entry>
                                </row>
                                <row>
                                    <entry>Update</entry>
                                    <entry>change current record</entry>
                                </row>
                                <row>
                                    <entry>Delete</entry>
                                    <entry>remove current record from database</entry>
                                </row>
                                <row>
                                    <entry>Relative</entry>
                                    <entry>moves N number of records forward from the current record
        where N represents a value entered into the field beside the &quot;Relative&quot; button.
        IF the field contains a negative number then it indicates a backwards move.</entry>
                                </row>
                                <row>
                                    <entry>Absolute</entry>
                                    <entry>go directly to  record number N within the current
        ResultSet where N represents a value entered into the field beside the
        &quot;Relative&quot; button, the actual direction of Resultset navigation depends on the
        actual location of the record in question</entry>
                                </row>
                                <row>
                                    <entry>Refresh</entry>
                                    <entry>Reopen current resultset</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="RowSetDemo">
            <title>RowSetDemo</title>
            <para>This applet demonstrates JDBC functionality via an
    Applet. It also demonstrates the additional Resultset navigation functionality provided by
    OpenLink&apos;s Scrollable Resultset &amp; RowSet Extensions for JDBC on a RowSet by RowSet
    Basis.</para>
            <para>Utilization Steps:</para>
            <orderedlist>
                <listitem>
                    <para>Start the OpenLink Request Broker</para>
                </listitem>
                <listitem>
                    <para>Start up your Web Browser</para>
                </listitem>
                <listitem>
                    <para>Enter one of the following URLs into your browser depending on the location of your OpenLink Request Broker:</para>
                    <para>Local To you:</para>
                    <programlisting>http://localhost:8000</programlisting>
                    <para>Remote Server:</para>
                    <programlisting>http://&lt;hostname or IP address of remote server&gt;:8000</programlisting>
                    <note>
                        <title>Note:</title>
                        <para>Port &quot;8000&quot; presumes that you provide this value when prompted during your
        OpenLink Sever components installation.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>Follow the Admin Assistant&apos;s Menu tree to the location of
        the &quot;Sample Applications-&gt;JDBC Applet Demos&quot; menu item. The graphic below
        depicts this process.</para>
                    <figure id="fg-007" float="1">
                        <title>Connection dialog</title>
                        <graphic fileref="clicls0x.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Click on the hyperlink that reads &quot;Applet
        demonstration with OpenLink Software JDBC Scrollable Cursor RowSet Extensions&quot;</para>
                </listitem>
                <listitem>
                    <para>Use the Applet&apos;s File-&gt;Set Connection URL menu item set
        a URL pointing to an ODBC or UDBC DSN. If uncertain follows the instructions laid out in
        the section covering OpenLink JDBC URL formats which shows you how to construct Type 1, 2, and 3 URL
            formats for your OpenLink Drivers for JDBC. This applet
        will run with non OpenLink Drivers for JDBC but you will need to obtain URL construction
        information from the relevant driver vendor.</para>
                    <para>The screen shot below depicts the URL construction dialog presented:</para>
                    <figure id="fg-008" float="1">
                        <title>URL Construction</title>
                        <graphic fileref="clicls08.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>Enter a valid SQL statement for the backend database that
        you are connecting to via JDBC and then click on the &quot;Query&quot; button. The screen
        shot below depicts this process:</para>
                    <figure id="fg-009" float="1">
                        <title>Querying</title>
                        <graphic fileref="clicls15.gif" format="gif"/>
                    </figure>
                </listitem>
                <listitem>
                    <para>JDBC 1.1 functionality provides Forward-Only as opposed to
        Bi-Directional Resultset Scrolling, JDBC 2.0 provides Scrollable Resultsets but does not
        provide Bookmarking or Attached RowSets (transient RowSets located in the same process
        space as the ResultSet). OpenLink&apos;s Scrollable Resultset Extensions for JDBC address these
        issues irrespective of JDBC version. As a result this applet has an additional set of
        Resultset Navigation buttons when compared to the basic JDBC 2.0 Applet
        in the prior section, the buttons are: &quot;First&quot;,&quot;Next&quot;,
        &quot;Prior&quot;,&quot;Last&quot;, &quot;Lock&quot;, &quot;Unlock&quot;, &quot;Add&quot;,
        &quot;Update&quot;, &quot;Get Bookmark&quot;, &quot;Set Bookmark&quot;, &quot;and Go
        To&quot; .  The existence of transient RowSets due to Bi-directional Scrollable
        Resultsets (or Cursors) in JDBC 2.0 is more than likely presumed to exist by end-users and
        developers alike, it is important that you take note of this before embarking upon JDBC
        2.0 application development or product selection. Each of the buttons in the Applet demo
        is explained below so as to assist in the understanding of these matters:</para>
                    <table>
                        <title>Scroll Demo Keys Explained</title>
                        <tgroup align="char" charoff="50" char="." cols="2">
                            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
                            <thead>
                                <row>
                                    <entry>Button</entry>
                                    <entry>Explanation</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>First</entry>
                                    <entry>takes you to first RowSet in the Resultset</entry>
                                </row>
                                <row>
                                    <entry>Next</entry>
                                    <entry>takes you to the next RowSet in the Resultset from your current position</entry>
                                </row>
                                <row>
                                    <entry>Prior</entry>
                                    <entry>takes you to the previous RowSet in the Resultset from your current position</entry>
                                </row>
                                <row>
                                    <entry>Last</entry>
                                    <entry>takes you to the last RowSet in the Resultset</entry>
                                </row>
                                <row>
                                    <entry>Lock</entry>
                                    <entry>locks the current RowSet</entry>
                                </row>
                                <row>
                                    <entry>Unlock</entry>
                                    <entry>unlocks the current RowSet</entry>
                                </row>
                                <row>
                                    <entry>Add</entry>
                                    <entry>add a new record to database</entry>
                                </row>
                                <row>
                                    <entry>Update</entry>
                                    <entry>change current record with the current RowSet of </entry>
                                </row>
                                <row>
                                    <entry>Delete</entry>
                                    <entry>remove current record from within the current RowSet from the database</entry>
                                </row>
                                <row>
                                    <entry>Get Bookmark</entry>
                                    <entry>mark current RowSet within Resultset for future revisit</entry>
                                </row>
                                <row>
                                    <entry>Set Bookmark</entry>
                                    <entry>revisit previous marked RowSet position in current ResultSet</entry>
                                </row>
                                <row>
                                    <entry>Go To</entry>
                                    <entry>go directly to a specific record number within the current ResultSet</entry>
                                </row>
                                <row>
                                    <entry>Refresh</entry>
                                    <entry>Reopen current resultset</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2 id="JDBCDemoApplications">
            <title>JDBC compliant Application Demos</title>
            <para>All the JDBC compliant Applet demos described in the
    previous sections have also been implemented as JDBC compliant Applications Demos, you can
    run these programs in a number of ways depending on operating system hosting your Java
    Virtual Machine.</para>
            <sect3 id="WindowsJDBCAppDemos">
                <title>Windows 95/98/NT/2000</title>
                <orderedlist>
                    <listitem>
                        <para>Click on your Windows Start Menu Button</para>
                    </listitem>
                    <listitem>
                        <para>Select the &quot;OpenLink Data Access Drivers&quot; Start Menu Group
        </para>
                    </listitem>
                    <listitem>
                        <para>Locate the &quot;JDBC Samples&quot; Menu Item
        </para>
                    </listitem>
                    <listitem>
                        <para>Choose from the list of JDBC Applications presented
        </para>
                    </listitem>
                </orderedlist>
            </sect3>
            <sect3 id="LinuxJDBCAppDemos">
                <title>Linux or UNIX</title>
                <orderedlist>
                    <listitem>
                        <para>Move into your OpenLink base installation directory
        </para>
                    </listitem>
                    <listitem>
                        <para>The move to the following directory listing output maps
        out the location of the various JDBC Application demos by Java Virtual Machine version:
        </para>
                        <screen>
JDBC/jdk1.1.x/Applications:
JDBCDemo RowSetDemo ScrollDemo
JDBC/jdk1.1.x/Applications/JDBCDemo:
DialogConnection.class JDBCDemo.class
DialogConnection.java JDBCDemo.java
JDBC/jdk1.1.x/Applications/RowSetDemo:
DataTextField.class DialogConnection.java readme.txt
DataTextField.java RowSetDemo.class
DialogConnection.class RowSetDemo.java
JDBC/jdk1.1.x/Applications/ScrollDemo:
DialogConnection.class ScrollDemo.class readme.txt
DialogConnection.java ScrollDemo.java
JDBC/jdk1.2.x/Applications:
JDBCDemo RowSetDemo ScrollDemo ScrollDemo2
JDBC/jdk1.2.x/Applications/JDBCDemo:
DialogConnection.class JDBCDemo.class
DialogConnection.java JDBCDemo.java
JDBC/jdk1.2.x/Applications/RowSetDemo:
DataTextField.class DialogConnection.java readme.txt
DataTextField.java RowSetDemo.class
DialogConnection.class RowSetDemo.java
JDBC/jdk1.2.x/Applications/ScrollDemo:
DialogConnection.class ScrollDemo.class readme.txt
DialogConnection.java ScrollDemo.java
JDBC/jdk1.2.x/Applications/ScrollDemo2:
DialogConnection.class ScrollDemo2.class
DialogConnection.java ScrollDemo2.java
JDBC/jdk1.3.x/Applications:
JDBCDemo RowSetDemo ScrollDemo ScrollDemo2
JDBC/jdk1.3.x/Applications/JDBCDemo:
DialogConnection.class JDBCDemo.class
DialogConnection.java JDBCDemo.java
JDBC/jdk1.3.x/Applications/RowSetDemo:
DataTextField.class DialogConnection.java readme.txt
DataTextField.java RowSetDemo.class
DialogConnection.class RowSetDemo.java
JDBC/jdk1.3.x/Applications/ScrollDemo:
DialogConnection.class ScrollDemo.class readme.txt
DialogConnection.java ScrollDemo.java
JDBC/jdk1.3.x/Applications/ScrollDemo2:
DialogConnection.class ScrollDemo2.class
DialogConnection.java ScrollDemo2.java
</screen>
                    </listitem>
                    <listitem>
                        <para>Move into the appropriate directory and then execute the
        following command:</para>
                        <programlisting>java &lt;classname&gt;</programlisting>
                        <para>where &quot;&lt;classname&gt;&quot; represents the JDBC class file hosting your JDBC
        application demo. For instance if you wanted to run the &quot;RowSetDemo&quot; JDBC
        application you would type the following:</para>
                        <programlisting>java RowSetDemo</programlisting>
                    </listitem>
                </orderedlist>
            </sect3>
        </sect2>
    </sect1>
    <!-- ######################################## -->
    <sect1 id="ImportantJDBCIssues">
        <title>Important Multi-User JDBC Solution Development &amp; Utilization Issues</title>
        <sect2 id="ChangeSensitivity">
            <title>Sensitivity To Changes In Underlying Database</title>
            <para>It is extremely important to application developers and end-users alike to understand the
    degree to which the Resultsets presented to them by a JDBC solution are actually sensitive
    to underlying changes in the source database. JDBC 1.1 not only fails to provide you with
    Bi-directional Resultset Scrolling, it also presents what is basically a snapshot of the
    data in your database at the time a JDBC query is executed. This has the effect of
    increasing Multi-User JDBC solution development complexity or limiting the functionality
    and usability of JDBC by end-users.</para>
            <para>Sensitive to changes in underlying database takes many
    forms, this includes: Static, KeySet, Dynamic, and Mixed modes of sensitivity.</para>
            <formalpara>
                <title>Static</title>
                <para> - same as basic JDBC, records scrolling occurs over a database
    snapshot and is insensitive to underlying change by other users</para>
            </formalpara>
            <formalpara>
                <title>KeySet</title>
                <para> - JDBC resultset records scroll over a set of record identifiers
    uniquely identifying records in the underlying database, this type of scrolling is
    sensitive to changes is those records with identifiers at the time of query execution.
    This form of scrolling is insensitive to record record additions or deletions.</para>
            </formalpara>
            <formalpara>
                <title>Dynamic</title>
                <para> - JDBC resultset records scroll over a set of record identifiers
    uniquely identifying records in the underlying database, these unique identifiers are
    recreated before each RowSet traversal (collection of resultset records used as scrolling
    marker or sliding window or Cursor), rather than once at query execution time. This type
    of scrolling is sensitive to all changes in the underlying database but may introduce a
    performance penalties depending on the size of RowSets and available network bandwidth.</para>
            </formalpara>
            <formalpara>
                <title>Mixed</title>
                <para> - JDBC resultset records scroll over a set of record identifiers
    uniquely identifying records in the underlying database, these unique identifiers are
    created to a limited size (known as the KeySet Size) at query execution time, only when
    RowSet traversal goes beyond the existing set of unique row identifiers is another
    collection of unique identifiers assembled. This type of scrolling is sensitive to all
    changes in the underlying database, but insensitive to Additions or Deletions affecting
    records in the current RowSet scrolling across a current KeySet, once KeySet boundaries
    are crossed Insertions or Deletions are recognized. This mode of sensitivity provides
    increased performance and the expense of reduced sensitivity.</para>
            </formalpara>
        </sect2>
        <sect2 id="ConcurrencyControl">
            <title>Concurrency Control</title>
            <para>In addition to being sensitive to changes in the underlying database, Multi-User
    applications need to be able to protect users and application processes from the effects
    of one another when the same record or collection of records are being manipulated at the
    same time. The process by which these issue are addressed is known as Concurrency Control.</para>
            <para>
    Concurrency control occurs in one of two ways, Optimistic or Pessimistic control. </para>
            <formalpara>
                <title>Optimistic Concurrency Control</title>
                <para> - presumes that probability and frequency
    of multiple users and processes instigating changes to the same database records is low.
    As result when an end-user or  process attempts to change records it first of all
    determines if the record values at the point of change are still the same as what they
    were at the time of retrieval. If they are unchanged at the point of change then the
    change occurs otherwise the change process is rejected and then re-attempted. Although
    this reduces concurrent user latency, it does have the knock on effect of reducing data
    integrity if changes rejections aren&apos;t managed carefully.</para>
            </formalpara>
            <formalpara>
                <title>Pessimistic Concurrency Control</title>
                <para> - presumes that the probability and
    frequency of multiple user processing and instigating changes to the same records is high.
    As a result an end-user or process attempts to changes records it first of all secures
    Exclusive Locks on the records in question, performs the changes, and then releases the
    locks. Although this increases and preserves data integrity it does introduce concurrent
    use latency , which is perceived as performance degradation by the end-user or application
    developer.</para>
            </formalpara>
            <para>
    OpenLink&apos;s Scrollable ResultSet and RowSet extensions for JDBC all the Multi-User JDBC
    solution issues raised in this section, our bundled and </para>
            <programlisting>http://www.openlinksw.com/demo</programlisting>
            <para>live online demonstrations enable you to evaluate this for yourself and ultimately make a
    knowledgeable JDBC Driver product and vendor selection.</para>
        </sect2>
    </sect1>
</chapter>
