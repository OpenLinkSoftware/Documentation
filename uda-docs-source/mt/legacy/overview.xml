<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- 
  $Id: overview.xml,v 1.1.1.1 2004/09/09 10:45:25 cvs Exp $
  (C)Copyright 1996-2018 OpenLink Software
-->
<chapter id="overview" >
  <title>Overview</title>
  <abstract>
    <para>ODBC, and further developments such as JDBC, OLEDB, define a low-level 
    set of calls which allow client applications 
    and servers applications to exchange instructions and share data without 
    needing to know anything about each other.  It applies to any Client-Server 
    operation, whether or not the client and server applications are resident 
    on the same machine, or on different PC's, or even if the server is on a 
    remote machine running a different operating system.</para>
    <para>This chapter introduces OpenLink's offerings to provide these 
    technologies to you.</para>
  </abstract>
<chapterinfo>
  <keywordset>
    <keyword>ODBC</keyword>
    <keyword>ODBC Driver</keyword>
    <keyword>ODBC Drivers</keyword>
    <keyword>UDA</keyword>
    <keyword>Multi-Tier</keyword>
    <keyword>Single-Tier</keyword>
    <keyword>OLEDB Provider</keyword>
    <keyword>JDBC</keyword>
    <keyword>Proxy</keyword>
  </keywordset>
</chapterinfo>
  <para>OpenLink Universal Data Access (UDA) Multi Tier consists of three main 
  components, of varying types:</para>
  <itemizedlist>
    <listitem><formalpara><title>Generic Client</title>
      <para>One client driver connecting to a variety of data sources.</para>
      </formalpara>
      <itemizedlist>
        <listitem>ODBC</listitem>
        <listitem>UDBC</listitem>
        <listitem>JDBC</listitem>
        <listitem>OLE-DB</listitem>
      </itemizedlist>
    </listitem>
    <listitem><formalpara><title>Request Broker</title>
      <para>Responsible for managing connections 
      between Generic Clients and Server Agents.  The Request Broker is 
      completely configurable and its responses to incoming requests from Clients 
      controlled by the <emphasis>Sessions Rules Book</emphasis> (oplrqb.ini).</para>
      </formalpara>
    </listitem>
    <listitem><formalpara><title>Server Agents</title>
      <para>Task specific applications exclusively launched by the Request Broker 
      for Generic Clients to communicate with, and facilitate their needs.</para>
      </formalpara>
      <itemizedlist>
        <listitem><formalpara><title>Database Agents</title>
          <para>one specific for each database and major version as required: 
          Oracle, Progress, Ingres, Postgres, SQL Server, etc...</para></formalpara></listitem>
        <listitem><formalpara><title>Proxy Agent</title>
          <para>special agent for forwarding requests to another Request Broker, 
          particularly useful on firewalls.</para></formalpara></listitem>
        <listitem><formalpara><title>ODBC Agent</title>
          <para>Special case of Database Agent where another ODBC datasource 
          is the database.</para></formalpara></listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>The Request Broker and Server Agents are typical addressed as the 
  server components.  This is a logical distinction because the client and 
  server can be the same machine.  In testing environments this is often the 
  case.</para>
  <para>The Request Broker is responsible for brokering the services of 
  OpenLink Data Access and Service Providing Agents.  It is also the component 
  responsible for coordinating and controlling your entire OpenLink Data Access 
  session irrespective of Data Access mechanism being used.  This is the heart 
  and soul of the OpenLink Database Independent Communications Layer.  It is 
  the technology that enables the OpenLink Data Access drivers to communicate 
  with your backend database engines alleviating the need to acquire additional 
  database specific networking software from your backend database vendor(s).  
  More than one Broker may exist on a system if each instance is defined 
  separately.</para>
  <para>One or more Database Agents (one for each supported database engine) 
  are database specific components that provide the actual backend database 
  connectivity and data access services to your OpenLink Data Access Clients 
  (ODBC, JDBC, UDBC, OLE-DB etc.).  These components are actually clients from 
  the perspective of each supported backend database, this is because they are 
  built using the Call Level Interfaces (CLIs) or Embedded SQL interfaces of 
  these backend databases.</para>
  <para>Service Provider Agents (ODBC, JDBC, PROXY) are generic agents that 
  provide Distributed Data Access Protocol handling services to OpenLink Data 
  Access Drivers.  The data access protocols supported are as follows:</para>
  <itemizedlist mark="dash">
    <listitem><para><emphasis>ODBC Agent</emphasis> - enabling OpenLink Multi-Tier 
    ODBC Drivers to connect to local or remote non OpenLink ODBC Drivers</para>
    </listitem>
    <listitem><para><emphasis>JDBC Agent</emphasis> - enabling OpenLink JDBC 
    Drivers to connect local or remote OpenLink or non OpenLink ODBC or UDBC 
    Drivers</para></listitem>
    <listitem><para><emphasis>PROXY Agent</emphasis> - enabling all OpenLink 
    Data Access Clients to connect to OpenLink Database Agents that do not 
    reside on the same server machine as the prime OpenLink Request Broker.  
    The prime Broker being the Request Broker that all your OpenLink Clients 
    are configured to request data access services from.  This enables you to 
    configure your OpenLink Database Agents for use in N-Tier distributed 
    computing environments.</para></listitem>
  </itemizedlist>
  <para>An architectural overview of the OpenLink Multi-tier Data Access 
  infrastructure is available at: 
  <ulink url="http://www.openlinksw.com/info/mtproduct.htm">www.openlinksw.com/info/mtproduct.htm</ulink>.
  Note that the OpenLink Request Broker is the core component that makes up the 
  OpenLink Database Independent Communications Layer in this illustration.</para>
  <para>The components listed above are presented to you for download at the 
  end of your interaction with the OpenLink Software 
  <ulink url="http://www.openlinksw.com/main/softdld.htm">Download Wizard.</ulink></para>
</chapter>