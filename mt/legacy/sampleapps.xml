<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- 
  $Id: sampleapps.xml,v 1.1.1.1 2004/09/09 10:45:25 cvs Exp $
  (C)Copyright 1996-2024 OpenLink Software
-->
<chapter id="sampleapps" >
<title>Sample Applications</title>
<abstract><para>
Information on installing and using the supplied samples.
</para></abstract>
<chapterinfo>
  <keywordset>
    <keyword>ODBC</keyword>
    <keyword>ODBC Driver</keyword>
    <keyword>ODBC Drivers</keyword>
    <keyword>Sample</keyword>
    <keyword>Sample Application</keyword>
    <keyword>JDBC</keyword>
    <keyword>ODBCTEST</keyword>
    <keyword>Bench</keyword>
    <keyword>JBench</keyword>
  </keywordset>
</chapterinfo>
<para>A number of sample applications are bundled with
your Universal Data Access Driver Suite installation for the
following purposes:</para>
<itemizedlist mark="dash">
<listitem><para>To simplifying the process of getting the
product up and running</para></listitem>
<listitem><para>To accelerate the support case creation and
resolution process</para>
</listitem>
<listitem><para>To demonstrate the Data Access Driver Suite&apos;s
unique product features highlighting the benefits it brings to your
organization</para></listitem>
<listitem><para>To demonstrate application programming
techniques that can used to aid and assist your ODBC and JDBC
programmers</para></listitem>
</itemizedlist>
<para>The Universal Data Access Driver Suite services
are consumed primarily via ODBC and JDBC applications (OLE-DB
applications connect via ODBC Data Providers for OLE-DB), thus
separate ODBC &amp; JDBC sample applications (including source
code) have been packaged and integrated into the installer. The
current list of sample applications include:</para>
<itemizedlist mark="dash">
<listitem>
<formalpara><title>C++ Demo</title>
<para>an ODBC based Interactive SQL processor written in C++.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>ODBC Bench Test</title>
<para>a 32 Bit C++ program
based on the industry standard TPC-A benchmark (we will be
extending this program to include the TPC-C and TPC-D benchmarks
also). This program helps you compare the performance of Virtuoso
against other backend database engines as well as compare the
performance of various ODBC Drivers connecting to any ODBC
compliant backend database.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>ODBCTEST</title>
<para>ODBC based Interactive SQL
processor written in &apos;C&apos; for Linux &amp; UNIX</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>JDBCDemo</title>
<para>a JDBC sample application that demonstrates an SQL query.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>Rowset Demo</title>
<para>a JDBC application that demonstrates OpenLink's JDBC Driver with the OpenLink
Scrollable Cursor RowSet Extension to the JDBC specification.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>ScrollDemo2</title>
<para>a JDBC 2.0 sample
application that demonstrates OpenLink&apos;s support of Scrollable
Cursors and its ability to perform scrollable cursor operations
across heterogeneous databases.</para>
</formalpara>
</listitem>
<listitem>
<formalpara><title>JBench</title>
<para>a Java and JDBC based
adaptations of the industry standard TPC-A benchmarks.
This program helps you compare the performance of OpenLink&apos;s Virtuoso against
other backend database engines, it also helps you to compare the
performance of various JDBC Drivers connecting to any JDBC
compliant backend database.</para>
</formalpara>
</listitem>
</itemizedlist>
<sect1 id="bindir">
<sect1info>
  <keywordset>
    <keyword>Source files</keyword>
    <keyword>Demo sources</keyword>
    <keyword>Demo Binaries</keyword>
  </keywordset>
</sect1info>
<title>Binary &amp; Source File Locations</title>
<sect2 id="obindir">
<title>ODBC Demonstration Applications</title>
<para>The binary executables of these sample
applications reside under the following directory
structure:</para>
<screen>&lt;OPENLINK_INSTALLATION_DIRECTORY&gt;\samples\odbc</screen>
<para>The source code of some of these sample
applications, when available, reside under the following directory
structure, for example:</para>
<screen>&lt;OPENLINK_INSTALLATION_DIRECTORY&gt;\samples\odbc\cppdemo</screen>
</sect2>
<sect2 id="jbindir">
<title>JDBC Demonstration Applications</title>
<para>The binary executables (Java class files), and
sources for these sample applications reside under the following
directory structure:</para>
<screen>&lt;OPENLINK_INSTALLATION_DIRECTORY&gt;\samples\jdbc\&lt;JDK_Version&gt;\&lt;Demo_name&gt;</screen>
</sect2>
</sect1>
<sect1 id="odbcsam">
<sect1info>
  <keywordset>
    <keyword>Sample Application Windows</keyword>
    <keyword>Windows; 95; 98; NT; 2000; XP</keyword>
    <keyword>Sample Application</keyword>
  </keywordset>
</sect1info>
<title>Windows 95/98/NT/2000 Based ODBC Sample Applications</title>
<sect2 id="cppdemo">
<title>C++ Demo</title>
<orderedlist>
<listitem><para>Go to the OpenLink Data Access Drivers "Start
Menu" item, then click on the "C++ Demo 32 Bit" menu item.</para>
<figure id="image40" float="1">
  <title></title>
  <graphic fileref="image40.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Follow the Environment-&gt;Open Connection menu
path. Selecting the "Open Connection" menu item results in the ODBC
Driver Manager presenting you with a list of ODBC DSNs on your
machine as depicted by the screen capture below:</para>
<figure id="image41" float="1">
  <title></title>
  <graphic fileref="image41.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Select the ODBC DSN that you wish to connect to,
(in this case "Informix 7 on Local" has been chosen. This will
connect you to the Informix 7 database.)</para>
</listitem>
<listitem><para>You are then presented with a Login Dialog by
the OpenLink Driver for ODBC, enter a valid user name and password
into the appropriate fields.</para>
<figure id="image42" float="1">
  <title></title>
  <graphic fileref="image42.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>At this point you will be connected to the
chosen datasource, you can now use the SQL--&gt;Execute SQL
menu path to open up the Interactive SQL input dialog. Enter a valid SQL
statement (see example in screen shot) and then click on the "OK"
button.</para>
<figure id="image43" float="1">
  <title></title>
  <graphic fileref="image43.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>You will be presented with the results of your
query.</para>
<figure id="image44" float="1">
  <title></title>
  <graphic fileref="image44.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>You exit this demo by following the
Environment--&gt;Close Connection menu path.</para>
</listitem>
</orderedlist>
</sect2>
<sect2 id="odbcbench">
<title>ODBC Bench Test 32</title>
<orderedlist>
<listitem><para>Go to the OpenLink Data Access Drivers "Start
Menu" item, then click on the "ODBC Bench Test 32 Bit" menu item.
You will be presented with the "Bench Test" interface.</para>
<figure id="image45" float="1">
  <title></title>
  <graphic fileref="image45.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Follow the File-&gt;Connect menu path which
initializes the ODBC Driver Manager, which in turn presents you
with a list of ODBC DSNs installed on your machine. Select the DSN
that you want to benchmark, remember that by benchmarking a DSN you
are benchmarking the ODBC Driver that serves the DSN in question
and the backend database engine that serves the ODBC Driver. Choose
the name of the datasource you want to benchmark.</para>
<figure id="image41" float="1">
  <title></title>
  <graphic fileref="image41.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>You will then be presented with a Login Dialog
by the OpenLink Generic Driver for ODBC, enter a valid user name
and password into the appropriate fields.</para>
<figure id="image42" float="1">
  <title></title>
  <graphic fileref="image42.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Now follow the Bench--&gt;Load Tables menu path
and you will be presented with a dialog that enables you to
configure key elements of your benchmark. Click the "Execute"
button to commence the process of setting up your database for the
benchmark tests. Please make sure you select the appropriate schema
for the DBMS that you are connecting to so that the benchmark
tables are created properly.</para>
<figure id="image46" float="1">
  <title></title>
  <graphic fileref="image46.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>As the process of loading data occurs, all the
way up to completion, the benchmark program will provide status
information into the benchmark output pane as shown below:</para>
<figure id="image47" float="1">
  <title></title>
  <graphic fileref="image47.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Now that all the benchmark data has been loaded
into your database, follow the Bench--&gt;Run Benchmark menu path
and then configure your actual benchmark session parameters:</para>
<para>These benchmark parameters fall into 3 categories, Timing Options,
SQL Options, and Execution Options.</para>
<figure id="image48" float="1">
  <title></title>
  <graphic fileref="image48.gif" format="gif"></graphic>
</figure>
<sect3 id="timeopt">
<title>Timing Options:</title>
<para>These setting allow you to configure the duration related aspects
of this benchmark program</para>
<formalpara><title>Minutes</title>
<para>this is the duration of each benchmark run</para>
</formalpara>
<formalpara><title>Runs</title>
<para>this controls how many iterations of the benchmarks
you actually run (the default is one benchmark iteration
with a duration of 5 minutes)</para>
</formalpara>
</sect3>
<sect3 id="sqlopt"><title>SQL Options:</title>
<para>These settings allow you to configure how your benchmark&apos;s SQL
instructions are actually handled.</para>
<formalpara><title>ExecDirect with SQL Text</title>
<para>this means that no form of
repetitive SQL execution optimization is being applied (SQL
statements are prepared and executed repetitively)</para>
</formalpara>
<formalpara><title>Prepare/Execute Bound Params</title>
<para>this means that the Parameter
Binding SQL execution optimization is being applied (SQL is
prepared once but executed many times without the overhead of
re-preparing statements prior to execution)</para>
</formalpara>
<formalpara><title>Use Stored Procedures</title>
<para>this means that the Stored Procedure
SQL optimization is being applied (benchmark instructions are
stored within database being benchmarked)</para>
</formalpara>
</sect3>
<sect3 id="exeopt"><title>Execution Options:</title>
<para>These settings allow you to configure the tone of your benchmark,
for instance it could have Transaction scoping and a mix of record
retrieval queries, or it could simply be input and update intensive
with a minimal amount of record retrieval queries (the case when
the 100 row query checkbox is unchecked a typical OLTP
scenario)</para>
<formalpara><title>Asynchronous</title>
<para>execute the benchmark instructions asynchronously</para>
</formalpara>
<formalpara><title>Use Transactions</title>
<para>make the benchmark use transaction control (instructions are scoped to transaction blocks)</para>
</formalpara>
<formalpara><title>Do 100 row Query</title>
<para>perform a simulation of a 100 record retrieval as part of the benchmark activity.</para>
</formalpara>
</sect3>
</listitem>
<listitem><para>Click on the "Run All" button if you would like
all the different benchmark type combinations to be
performed.</para>
</listitem>
<listitem><para>When benchmark run complete benchmark data is
written to the benchmark program&apos;s output pane.</para>
<figure id="image49" float="1">
  <title></title>
  <graphic fileref="image49.gif" format="gif"></graphic>
</figure>
<para>The key pieces of benchmark data that you need to look out for are:</para>
<formalpara><title>Total Transactions</title>
<para>total number of transactions completed
during the benchmark run</para>
</formalpara>
<formalpara><title>Transactions Per Second</title>
<para>number of transaction completed per second for the benchmark run</para>
</formalpara>
<para>Information from this benchmark is automatically written to an
Excel format CSV (the file c:\odbcbnch.csv) which makes it easy for
you to graph and pivot data collated from several benchmark runs. A
later version of this demo will actually write the benchmark data
into an ODBC DSN that you provide thereby offering even more
flexibility and accessibility to benchmark data.</para>
</listitem>
</orderedlist>
</sect2>
</sect1>
<sect1 id="odbcsaml">
<sect1info>
  <keywordset>
    <keyword>Linux; Unix</keyword>
    <keyword>Sample Application Unix; Sample Application Linux</keyword>
  </keywordset>
</sect1info>
<title>Linux &amp; UNIX Based ODBC Sample Applications</title>
<sect2 id="odbctestl">
<title>ODBCTEST</title>
<para>This is a simple &apos;C&apos; based and ODBC compliant
Interactive SQL processor.</para>
<orderedlist>
<listitem><para>Run the script openlink.sh to set up your
environment:</para>
<programlisting>openlink.sh</programlisting>
</listitem>
<listitem><para>Start ODBCTEST by executing the following command:</para>
<programlisting>odbctest</programlisting>
<para>Or pass a DSN connect string, for example:</para>
<programlisting>odbctest DSN=marketing;UID=name;PWD=pwd;</programlisting>
</listitem>
<listitem><para>At the SQL command prompt enter "?" for a list
of ODBC DSNs on your machine or enter a valid ODBC Connect String
e.g.</para>
<para>If you have a DSN named "Marketing" you would enter:
DSN=Marketing</para>
</listitem>
</orderedlist>
</sect2>
<sect2 id="odbcbesaml">
<title>ODBC Benchmark Application</title>
<para>The TPC-A, TPC-C, and TPC-D benchmarks are
currently under development, please monitor our Web site
(http://www.openlinksw.com) for updates on these applications.
</para>
</sect2>
</sect1>
<sect1 id="macosxsamples">
<sect1info>
  <keywordset>
    <keyword>Mac; Mac OS X</keyword>
    <keyword>Mac Sample Application</keyword>
    <keyword>OS X Sample Application</keyword>
  </keywordset>
</sect1info>
<title>Mac OS X</title>
<sect2 id="odbctestmac">
<title>ODBCTEST:</title>
<para>This is a simple &apos;C&apos; based and ODBC compliant Interactive SQL
processor.</para>
<orderedlist>
  <listitem>
    <para>Open a Terminal session, and start ODBCTEST by executing the following command:</para>
    <programlisting>/Library/iodbc/bin/odbctest</programlisting>
  </listitem>
  <listitem>
    <para>At the SQL command prompt enter &quot;?&quot; for a list of ODBC
    DSNs on your machine or enter a valid ODBC Connect String.
    If you have a DSN named &quot;Marketing&quot; you would enter:</para>
    <programlisting>DSN=Marketing;UID=username;PWD=password</programlisting>
    <para>Note: If there is no password, you must include a semicolon at the end:</para>
    <programlisting>DSN=Marketing;UID=sa;PWD=;</programlisting>
  </listitem>
  <listitem>
    <para>Any valid SQL or ODBC command may be executed through this interface. The following example
    shows a connection to Microsoft SQLServer 2000, making a simple query
    against the sample Northwind database:</para>
    <programlisting>
[localhost:~] openlink% /Library/iodbc/bin/odbctest
iODBC Demonstration program
This program shows an interactive SQL processor
Enter ODBC connect string (? shows list, or DSN=...): DSN=user_tthib_sql2k
SQL&gt;select au_lname, au_fname, state from authors where au_id &lt; '333-33-3333'
au_lname                                |au_fname            |state
----------------------------------------+--------------------+-----
White                                   |Johnson             |CA
Green                                   |Marjorie            |CA
Carson                                  |Cheryl              |CA
O'Leary                                 |Michael             |CA
Straight                                |Dean                |CA
 5 row(s) fetched.
SQL>quit
Again (y/n) ? n
Have a nice day.
[localhost:~] openlink%
</programlisting>
  </listitem>
</orderedlist>
</sect2>
</sect1>
<sect1 id="jdbcsaa">
<sect1info>
  <keywordset>
    <keyword>JDBC Sample Application</keyword>
    <keyword>JDBC Sample Applets</keyword>
    <keyword>JDBC; Sample; Application; Applet</keyword>
  </keywordset>
</sect1info>
<title>JDBC Sample Applications &amp;Applets</title>
<sect2 id="JDBCDemo">
<title>JDBCDemo Java Application</title>
<orderedlist>
<listitem>
<para>Go to the OpenLink Data Access Drivers &quot;Start Menu&quot; program group and then follow the JDBC
Samples menu path to the appropriate JDK, and then JDBCDemo. This will execute a DOS batch program that
initialises the Java demo application.</para>
<figure id="jdemo1" float="1">
  <title>JDBC Demo</title>
  <graphic fileref="jdemo1.gif" width="395px" depth="328px"/>
</figure>
</listitem>
<listitem>
<para>Set the JDBC Driver Name and URL settings for the connection to your
database. The &quot;Driver Name&quot; field identifies the jdbc Driver.
The &quot;Connection URL&quot; field requires a valid JDBC URL.</para>
<figure id="jdemo2" float="1">
  <title>JDBC Demo</title>
  <graphic fileref="jdemo2.gif" width="400px" depth="203px"/>
</figure>
</listitem>
<listitem>
<para>Enter a valid SQL statement and then click the &quot;Query&quot; button, the example
below uses a SQL statement requesting all records from the &quot;Customers&quot; table.</para>
<figure id="jdemo3" float="1">
  <title>JDBC Demo</title>
  <graphic fileref="jdemo3.gif" width="395px" depth="339px"/>
</figure>
</listitem>
</orderedlist>
</sect2>
<sect2 id="rowsetdemo">
<title>Rowset Java Application</title>
<orderedlist>
<listitem>
<para>Go to the OpenLink Data Access Drivers &quot;Start Menu&quot; program group and then follow the JDBC
Samples menu path to the appropriate JDK, and then Rowset Demo. This will execute a DOS batch program that
initialises the Java demo application.</para>
<figure id="rowset1" float="1">
  <title>Rowset Demo</title>
  <graphic fileref="rowset1.gif" width="536px" depth="256px"/>
</figure>
</listitem>
<listitem>
<para>Set the JDBC URL settings for the connection to your database.
The &quot;Connection URL&quot; field requires a valid JDBC URL.</para>
<figure id="rowset2" float="1">
  <title>Rowset Demo</title>
  <graphic fileref="rowset2.gif" width="432px" depth="185px"/>
</figure>
</listitem>
<listitem>
<para>Enter a valid SQL statement and then click the &quot;Query&quot; button.
The first rowset of the resultset will be shown.</para>
<figure id="rowset3" float="1">
  <title>Rowset Demo</title>
  <graphic fileref="rowset3.gif" width="646px" depth="453px"/>
</figure>
</listitem>
<listitem>
<para>
Click on the "Next" button to retrieve the next rowset, "Prior" to go back a rowset,
"First" to move directly to the first rowset, and "Last" to move to the last rowset.</para>
<para>
"Delete", "Refresh", "Lock", "Unlock", "Add" and Update" work on the principle of a current row in
the rowset. To indicate the current row to the applet, you must click on any column of a particular
row and then press a key. The status panel will then display "Current Row = 2" or similar,
indicating that the current row is set.</para>
<para>Clicking "Delete" will attempt to delete the row from the database. Clicking on "Refresh"
will now retrieve the latest values from the database to refresh that row. However this may not be
successful dependent on the restrictions place on the resultset by the underlying database.</para>
<para>
"Lock" and "Unlock" will attempt to perform those operations on the current row, which again, may or
may not be successful, dependent on the restrictions of the underlying database.</para>
<para>
"Add" will attempt to add the contents of the current row as a new row to the relevant tables forming
the resultset. "Update" will attempt to update the modified contents of the current row to the database.
Again the success of these two operations depend on the restrictions placed on the underlying database.</para>
<para>
"Get Bookmark" will attempt to retrieve a bookmark for the current rowset position, which
"Set Bookmark" will attempt to return to.</para>
<para>
To move to a particular position in the resultset, enter that position into the edit box next
to the "Goto" button and click the "Goto" button.</para>
</listitem>
</orderedlist>
</sect2>
<sect2 id="ScrollDemo2">
<title>ScrollDemo2 Java Application</title>
<orderedlist>
<listitem><para>Go to the OpenLink Data Access Drivers "Start
Menu" program group and then follow the JDBC
Samples--&gt;ScrollDemo2 (JDK1.2) menu path, this will execute a
DOS batch program that initializes the Java demo application.
</para>
<figure id="image50" float="1">
  <title></title>
  <graphic fileref="image50.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Set the JDBC Driver Name and URL settings for
your connection to a database of your choice. The "Driver Name"
field identifies the OpenLink Driver. If it is left blank, then it
defaults to "openlink.jdbc2.Driver", which is the OpenLink Driver
for JDBC 2.0.  The "Connection URL" field requires a valid
OpenLink JDBC URL.</para>
<figure id="image51" float="1">
  <title></title>
  <graphic fileref="image51.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Enter a valid SQL statement and then click the
"Query" button.</para>
<figure id="image52" float="1">
  <title></title>
  <graphic fileref="image52.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>You can now use the navigational buttons to
Scroll backwards and forwards, each of these navigational buttons
highlights OpenLink's full implementation of the JDBC 2.0
Scrollable Cursors specifications.</para>
</listitem>
</orderedlist>
</sect2>
<sect2 id="scd2aplt">
<title>ScrollDemo2 Java Applet</title>
<orderedlist>
<listitem><para>Start the OpenLink Admin Assistant and then
follow the Sample Applications--&gt;JDBC Applet Demos menu
path.</para>
<figure id="image53" float="1">
  <title></title>
  <graphic fileref="image53.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Click on the "ScrollDemo2" hyperlink which
initializes the ScrollDemo2 applet, if you do not have a Java 1.2
or Java 2.0 compliant browser you will not be able to run this
Applet demo. The other way to experience this demo is to run the
Application version which uses your operating systems Java Virtual
Machine (JVM) instead of a JVM inherently linked to a Web
Browser.</para></listitem>
</orderedlist>
</sect2>
<sect2 id="JBenchApplication">
<title>JBench Application</title>
<orderedlist>
<listitem><para>Go to the OpenLink Data Access Drivers "Start
Menu" program group and then follow the JDBC Samples--&gt;Jbench
(for JDK1.1 1.2 or 1.3) menu path, depending on the JVM you
have installed. This will execute a DOS batch program that
initializes the JBench application.</para>
<figure id="image54" float="1">
  <title></title>
  <graphic fileref="image54.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>The follow the File--&gt;Connect menu path to
make your initial connection. You will need to identify your JDBC
Driver (by providing appropriate Driver Name values in the JDBC
Driver field) and then provide a valid JDBC URL for your specific
JDBC Driver.</para>
<figure id="image55" float="1">
  <title></title>
  <graphic fileref="image55.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Select the open JDBC connection that you wish to test.</para></listitem>
<listitem><para>Follow the TPC-A--&gt;Load Tables menu path to
prepare your database for the TPC-A benchmark, select a database
schema type that matches the database engine that you are
benchmarking. If your database isn&apos;t listed ANSI should suffice (as
long as this is an ANSI SQL compliant database).</para>
<figure id="image56" float="1">
  <title></title>
  <graphic fileref="image56.gif" format="gif"></graphic>
</figure>
</listitem>
<listitem><para>Follow the TPC-A--&gt;Load Procedures menu path
to Load the TPC-A stored procedures.</para></listitem>
<listitem><para>Now that all the benchmark data and stored
procedures have been loaded into your database, follow the
TPC-A--&gt;Run Benchmark menu path and then configure your actual
benchmark session parameters:</para>
<para>The benchmark parameters fall into 4 categories, Bench execution
mode, Run Options, SQL Options, and Execution Options.</para>
<figure id="image57" float="1">
  <title></title>
  <graphic fileref="image57.gif" format="gif"></graphic>
</figure>
<sect3 id="benexemode">
<title>Bench execution mode:</title>
<para>These setting allow you to configure the threads used for the
benchmark.</para>
<para>
Decide on a single or multiple threads test.</para>
<formalpara><title>No. Threads</title>
<para>this is the number of concurrent threads to be used during the benchmark.</para>
</formalpara>
</sect3>
<sect3 id="benrunopt">
<title>Run Options:</title>
<para>These setting allow you to configure the duration related aspects
of this benchmark program.</para>
<formalpara><title>No. runs</title>
<para>this controls how many iterations of the benchmarks you actually run (the default is 100 benchmark
iterations).</para>
</formalpara>
<formalpara><title>Duration (mins.)</title>
<para>this is the duration in minutes of each benchmark run.</para>
</formalpara>
</sect3>
<sect3 id="bensqlopt"><title>SQL Options:</title>
<para>These setting allow you to configure how your benchmark&apos;s SQL
instructions are actually handled.</para>
<formalpara><title>ExecDirect with SQL Text</title>
<para>this means that no form of
repetitive SQL execution optimization is being applied (SQL
statements are prepared and executed repetitively)</para>
</formalpara>
<formalpara><title>Prepare/Execute Bound Params</title>
<para>this means that the Parameter
Binding SQL execution optimization is being applied (SQL is
prepared once but executed many times without the overhead of
re-preparing statements prior to execution)</para>
</formalpara>
<formalpara><title>Use Stored Procedures</title>
<para>this means that the Stored Procedure
SQL optimization is being applied (benchmark instructions are
stored within database being benchmarked)</para>
</formalpara>
<formalpara><title>Execution Options:</title>
<para>These setting allow you to configure the tone of your benchmark,
for instance it could have Transaction scoping and a mix of record
retrieval queries, or it could simply be input and update intensive
with a minimal amount of record retrieval queries (the case when
the 100 row query checkbox is unchecked a typical OLTP
scenario)</para>
</formalpara>
<formalpara><title>Use Transactions</title>
<para>make the benchmark use transaction
control (instructions are scoped to transaction blocks)</para>
</formalpara>
<formalpara><title>Do 100 row Query</title>
<para>perform a simulation of a 100 record
retrieval as part of the benchmark activity.</para>
</formalpara>
</sect3>
</listitem>
<listitem><para>Press Run or Run All to start your TPC-A benchmark.
The Run All will sequence through all SQL and Execution combinations,
so it will take much longer.</para></listitem>
<listitem><para>Follow the TPC-A--&gt;Cleanup menu path to clean
up your database so that you can then run other benchmarks.</para></listitem>
</orderedlist>
</sect2>
</sect1>
</chapter>
