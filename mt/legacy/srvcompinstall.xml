<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- 
  $Id: srvcompinstall.xml,v 1.4.4.1 2006/01/05 14:55:08 cvs Exp $
  (C)Copyright 1996-2024 OpenLink Software
-->
<chapter id="srvcompinstall" >
  <title>Server Components Installation</title>
  <abstract>
    <para>Information on how to install components of the Server.</para>
  </abstract>
<chapterinfo>
  <keywordset>
    <keyword>ODBC</keyword>
    <keyword>ODBC Driver</keyword>
    <keyword>ODBC Drivers</keyword>
    <keyword>Server</keyword>
    <keyword>Server Component Install</keyword>
    <keyword>Installation</keyword>
    <keyword>Register</keyword>
    <keyword>Windows</keyword>
    <keyword>Unix</keyword>
    <keyword>Linux</keyword>
    <keyword>Mac OS</keyword>
    <keyword>Linux</keyword>
  </keywordset>
</chapterinfo>
&oplmgr;
&registering;
<!-- ======================================== -->
<sect1 id="wsrvcompinst">
<sect1info>
  <keywordset>
    <keyword>ODBC Driver Windows</keyword>
    <keyword>Windows; 95; 98; NT; XP; 2000</keyword>
    <keyword>Installation</keyword>
  </keywordset>
</sect1info>
<title>Windows 95/98/NT/XP/2000 Install</title>
<orderedlist>
  <listitem>Ensure you have downloaded all of the relevant OpenLink Server 
  Components from OpenLink Software Download wizard.</listitem>
  <listitem>From the OpenLink email that is delivered at the time of download,
  save the attached license file to a temporary location.</listitem>
  <listitem>Ensure all existing OpenLink server and client applications are 
  shutdown.</listitem>
  <listitem>Close the Services Control Panel Applet to avoid any locking of existing 
  OpenLink services.</listitem>
  <listitem><para>Run setup.exe, please note that the client and server components 
  for Windows are packaged within the same installation archive.  You distinguish 
  the actual components that you want to install as part of your interaction 
  with the installation program.</para>
  <note><title>Caution:</title>
  <para>please do not choose SPX/IPX protocol support during the installation 
  process unless you have verified that this protocol is actually installed 
  and configured on your Windows Server machine.</para></note>
  </listitem>
  <listitem><para>
  Once the installer has completed, the broker will be running and ready
  for use, assuming a valid license was supplied.</para>
  </listitem>
</orderedlist>
  <para>If the OpenLink Broker does not respond to client requests, or there 
  was a Broker creation error during the install, then you can verify its 
  operation as follows:</para>
  <orderedlist><listitem><para>Start your OpenLink Request Broker in debug mode, 
  from within your "services" control panel, or by opening up a DOS command 
  window and then executing the OpenLink Request Broker startup command from 
  within the "bin" sub-directory of the OpenLink server components installation 
  directory:</para>
<programlisting>
oplrqb -dv
</programlisting>
  <para>Note: When doing this from the "services" control panel (Windows NT) 
  you must stop the Broker if it is already running and then change its startup 
  mode from "Automatic" to "Manual", then enter the required startup commands as values 
  in the Startup Parameters field, the screen shot below demonstrates this:</para>
  <figure id="srvcinstf2" float="1"><graphic fileref="3image2.gif" format="gif" /></figure>
  <para>Selecting the service clicking the <emphasis>Startup</emphasis> button 
  will give the following screen:</para>
  <figure id="srvcinstf3" float="1"><graphic fileref="3image3.gif" format="gif" /></figure>
  </listitem>
  <listitem><para>Start your Web Browser and then enter the following URL: 
  http://&lt;network alias of machine on to which you have just installed server 
  components&gt;:&lt;port number you provided when prompted by OpenLink 
  installer&gt;.  For example, if your machine has a network alias of "mainserver"
  and you accept the default port number at installation time, then the required 
  URL would be constructed as follows: <emphasis>http://mainserver:8000/</emphasis> 
  you can also enter the value <emphasis>http://localhost:8000/</emphasis> if 
  the server in use is local rather than remote.</para></listitem>
  <listitem><para>Follow the instructions provided in the "Making Your First 
  OpenLink Connection" guide in order to verify your server components 
  installation.</para></listitem>
  <listitem><para>If the previous step is successful, shutdown the Request 
  Broker by pressing: <emphasis>&lt;CTRL-C&gt;</emphasis> in the debug session 
  window, or by selecting the OpenLink Request Broker entry within the 
  "services" control panel and then clicking on the "stop" button.</para>
  <para>You can also shutdown the Broker by executing the following command 
  from a separate DOS command Window:</para> 
<programlisting>oplshut -f</programlisting>
  </listitem>
  <listitem><para>Revert the OpenLink Request Broker startup mode back to 
  "Automatic" from within the "Services" control panel and then restart by 
  clicking on the "Startup" button. Note the Broker does not have to be in 
  "Automatic" mode for regular use, it is your choice as to the startup mode 
  that best suits your operational needs.</para>
  <para>You can also start the Broker from a DOS Window by executing the command:</para>
<programlisting>oplrqb -v</programlisting>
  </listitem>
</orderedlist>
</sect1>
<sect1 id="macxsrvinst"><title>Mac OS X</title>
<sect1info>
  <keywordset>
    <keyword>ODBC Driver Mac</keyword>
    <keyword>Mac; Mac OS X</keyword>
    <keyword>Installation</keyword>
  </keywordset>
</sect1info>
 <para>OpenLink Software's server components are fully supported on Mac OS X. 
 Users of Mac OS X 10.2.x ("Jaguar") and later may use the fully migrated GUI 
 components; users of Mac OS X 10.1.5 and earlier must use the Darwin-based 
 components (installation covered in the UNIX and Linux section, below). </para>
 <para>As shipped from Apple, Mac OS X did not include any ODBC support until 
 Jaguar.  The ODBC Driver Manager, Data Source Administrator, etc. - all had to 
 be delivered with the Drivers.</para>
 <para>When Apple introduced Darwin, an Open-Source project meant to form the 
 kernel of Mac OS X, OpenLink determined to port its open-source iODBC Driver 
 Manager to the new platform. With the introduction of the Preview Release of 
 Mac OS X, the traditional set of dynamic libraries was broadened to include a 
 system of Frameworks to encourage the development of fully ODBC compliant, 
 native Mac OS X drivers and client applications. </para>
 <para>That set of Frameworks, along with the OpenLink ODBC Administrator 
 (then known as the iODBC Administrator), has been included with all OpenLink 
 installations for Mac OS X since 10.0. The OpenLink ODBC Administrator 
 supports all core features of ODBC, and presents driver-specific DSN configuration 
 panels, as defined by the Driver developer, through the use of Setup Libraries.</para>
 <para>Jaguar's release marked Apple's recognition that Data Access was an 
 important part of an Enterprise Operating System. Already part of the standard 
 distribution of Darwin, the basic iODBC dynamic libraries are now a part of the 
 standard installation of Mac OS X 10.2. Apple also included their own version 
 of an ODBC Administrator, as a proof-of-concept. Apple's Administrator permits 
 Driver Registration, Tracing, and all other core features of ODBC; however, among 
 other hard edges, all DSN configuration must be done by manually entering 
 Keyword-Value pairs. Further, the user must know what Keywords to use, along 
 with their acceptable Values.</para>
 <para>Each OpenLink Generic Multi-Tier Driver for ODBC for Mac OS X 
 is distributed in a single disk image (.dmg) file, which contains a Macintosh 
 Installer mpkg.  You may download an installer for a single back-end DBMS, 
 or a "kitchen-sink" installer containing components for all OpenLink 
 supported DBMS.</para>
<para>The OpenLink ODBC Server Components for Mac OS X comprise the following:</para>
<table>
 <title>OpenLink ODBC Server Components for Mac OS X</title>
 <tgroup>
  <thead><row>
   <entry>Component</entry>
   <entry>Purpose</entry></row>
  </thead>
  <tbody>
   <row>
    <entry>Request Broker</entry>
    <entry>The oplrqb executable Broker manages all Client connections, 
    as instructed by the Rulebook, oplrqb.ini, and as restricted by the 
    active License file(s), *.lic. Without an active Broker, no connection 
    will be initiated.</entry></row>
   <row>
    <entry>Session Rules</entry>
    <entry>Book	The oplrqb.ini file holds all non-license parameters 
    governing behavior of the Request Broker and Database Agents.  
    This file may contain references to other subsidiary parameter files, 
    which are incorporated into the active Rulebook at Broker launch.</entry></row>
   <row>
    <entry>OpenLink Database Agents</entry>
    <entry>Any of a number of executables, named xxxx_sv or xxxx_mv,
    for single- and multi-threaded agents, respectively.  xxxx is replaced by 
    the OpenLink code for a given Database.  For example, virt_mv is the
    OpenLink Virtuoso Database Agent (multi threaded). </entry></row>
   <row>
    <entry>Broker and Database Agent license files</entry>
    <entry>File(s) containing software activation and license key for the 
    Broker and Database agents.  Primary license, for Request Broker, must 
    be named oplrqb.lic; other licenses will all end in .lic, and will typically be 
    named similarly to a specific database agent, e.g., jdbc13_mv.lic.</entry></row>
   <row>
    <entry>OpenLink HTTP and Tcl Engine</entry>
    <entry>The www_sv executable is an HTTP (Web) Server, implemented 
    as an OpenLink Service-Providing Agent. This component provides the 
    core upon which the OpenLink Admin Assistant has been built.</entry></row>
   <row>
    <entry>HTTP and Tcl Engine configuration file</entry>
    <entry>The www_sv.ini file contains most parameters relevant to the Admin 
    Assistant's provision, most importantly including User Authentication 
    information, including encoded passwords, for all authorized Administrators 
    of the OpenLink components.</entry></row>
   <row>
    <entry>HTTP and Tcl Engine configuration program</entry>
    <entry>The setup executable is automatically executed as part of the 
    Installation process. Manual activation is only necessary if you have lost 
    your Admin Assistant's primary Username and Password.</entry></row>
   <row>
    <entry>OpenLink ODBC Client Components	</entry>
    <entry>As specified in the Client configuration chapter.</entry></row>
</tbody></tgroup></table>
<sect2 id="macxsrvinstinstallation"><title>Installation</title>
 <para>Double-click the mpkg to start the installation process. </para>
<figure id="macosxsrvinst01" float="1"><title>OpenLinkUDA-5.0.dmg</title>
  <graphic fileref="mac10/MacOSXs01.png" format="png"></graphic></figure>
 <para>You must have an Administration username and password to install the 
 OpenLink Generic Multi-Tier Driver for ODBC.  The Jaguar Installer will 
 immediately prompt you to enter your Mac OS X Username and Password.</para>
 <figure id="macosxsrvinst02" float="1"><title>Authentication</title>
  <graphic fileref="mac10/MacOSXs02.png" format="png"></graphic></figure>
 <para>The installer will display a "Welcome" message. Click "Continue". </para>
 <figure id="macosxsrvinst03" float="1"><title>Welcome</title>
  <graphic fileref="mac10/MacOSXs03.png" format="png"></graphic></figure>
 <para>The next screen will display the Read-Me file, including any last-minute 
 updates to these documents. Please read carefully, and click "Continue" when 
 finished. </para>
<figure id="macosxsrvinst04" float="1"><title>Read Me</title>
  <graphic fileref="mac10/MacOSXs04.png" format="png"></graphic></figure>
 <para>The next screen will display the License Agreement for the OpenLink 
 Single-Tier Driver for ODBC. Please read, and click "Continue". </para>
 <figure id="macosxsrvinst05" float="1"><title>Software License Agreement</title>
  <graphic fileref="mac10/MacOSXs05.png" format="png" /></figure>
  <para>You will be prompted to "Agree" to continue the installation, or "Disagree" to abort.</para>
 <figure id="macosxsrvinst06" float="1"><title>Agree or Disagree to Licensing</title>
  <graphic fileref="mac10/MacOSXs06.png" format="png" /></figure>
  <para>You will be asked to select a Destination Volume. Generally, this should 
  be your Mac OS X boot volume. Click on the desired disk icon, and then click "Continue". </para>
 <figure id="macosxsrvinst07" float="1"><title>Choose Destination</title>
  <graphic fileref="mac10/MacOSXs07.png" format="png" /></figure>
 <para>You may now choose the Easy Install, or if you are an experienced user, 
 you may Customize which components are installed. OpenLink generally 
 recommends the Easy Install. </para>
 <para>If you have installed OpenLink or iODBC components in the past, click 
 "Upgrade" to continue; otherwise, click "Install". </para>
 <figure id="macosxsrvinst08" float="1"><title>Easy Install</title>
  <graphic fileref="mac10/MacOSXs08.png" format="png" /></figure>
 <para>In a custom installation, you may choose which Client, Documentation, 
 and Server components are installed.  OpenLink recommends that all Servers 
 be equipped with all Client components, and that you install at least the HTML 
 documentation, which will then be available through the Admin Assistant.  
 The iODBC Runtime is necessary for all Client connections, but you may choose 
 not to install it, if you have already installed a later revision.</para>
  <figure id="macosxsrvinst09" float="1"><title>Custom Install</title>
   <graphic fileref="mac10/MacOSXs09.png" format="png" /></figure>
 <para>You will be shown a graphical progress bar as Installation progresses, 
 followed by System Optimization. </para>
  <figure id="macosxsrvinst10" float="1"><title>Installation Progress</title>
   <graphic fileref="mac10/MacOSXs10.png" format="png" /></figure>
 <para>During the installation process,  the Installer will prompt for some 
 parameters.  Only an Administrator may configure the Server components, 
 and this authentication is independent of the Installer itself. </para>
  <figure id="macosxsrvinst11" float="1"><title>Configuration Authentication</title>
   <graphic fileref="mac10/MacOSXs11.png" format="png" /></figure>
 <para>First, the Installer will configure the Request Broker `Listener` port. By 
 default, this is 5000, but you may set it to anything appropriate to your 
 environment. Note that all Client DSNs must target the port specified herein. </para>
 <para>If you check off the box labeled Automatically launch the request broker 
 during system startup, a StartupItem will be installed and enabled, to 
 automatically start the Broker at system boot. If you do not check this box, 
 the Broker must be manually launched to permit data access.</para>
 <figure id="macosxsrvinst12" float="1"><title>Initial configuration, Request Broker tab</title>
  <graphic fileref="mac10/MacOSXs12.png" format="png" /></figure>
 <para>The next pane is to configure the HTTP-based OpenLink Administrator.  
 By default, this service will listen at port 8000, but you may set it to any port 
 appropriate to your environment. This port will be specified in Web browsers, 
 to access the Admin Assistant, as in the URL, &lt;http://localhost:8000/&gt;.</para>
 <figure id="macosxsrvinst13" float="1"><title>Initial configuration, Web Administrator tab</title>
  <graphic fileref="mac10/MacOSXs13.png" format="png" /></figure>
 <para>When the process is complete, you will be told that the software was 
 successfully installed. Click "Close" and wait a few moments, while the Request 
 Broker is launched in the background. </para>
 <figure id="macosxsrvinst14" float="1"><title>Installation Completes</title>
  <graphic fileref="mac10/MacOSXs14.png" format="png" /></figure>
 <para>Installation is complete, and your Broker is available for use, when 
 a new Web browser window is opened, connecting to the newly installed 
 Broker's Admin Assistant.</para>
  <figure id="macosxsrvinst15" float="1"><title>Admin Assistant Browser Window</title>
   <graphic fileref="mac10/MacOSXs15.png" format="png" /></figure>
 <para>A new Finder window will also be opened, containing launch icons for 
 the documentation you've installed (HTML and/or PDF), as well as manual 
 Start and Stop scripts for the Request Broker.</para>
  <figure id="macosxsrvinst16" float="1"><title>Finder Window</title>
   <graphic fileref="mac10/MacOSXs16.png" format="png" /></figure>
 <para>Proceed to the next chapter, to learn how to configure your new software.</para>
 </sect2>
</sect1>
<sect1 id="unixsrvcompinst"><title>UNIX &amp; Linux Install</title>
<sect1info>
  <keywordset>
    <keyword>ODBC Driver Unix; ODBC Driver Linux</keyword>
    <keyword>Unix; Linux</keyword>
    <keyword>Installation</keyword>
  </keywordset>
</sect1info>
<orderedlist>
  <listitem><para>Ensure you have downloaded all of the relevant OpenLink Server Components 
  from the page created by the OpenLink Software Download wizard, this must 
  include the OpenLink Server Components Installation shell script file "install.sh" 
  in addition to the compressed "tar" archives for the OpenLink Request Broker 
  and relevant Database Agent Components.</para></listitem>
  <listitem>From the OpenLink email that is delivered at the time of download,
  save the attached license file to the same location as the install.sh.</listitem>
  <listitem><para>Log on to your Database or Application server machine using 
  the userid and password combination that you normally use when connecting to 
  the database in non ODBC/JDBC/UDBC mode.</para></listitem>
  <listitem><para>Determine your operating system group membership by typing in 
  the command:</para>
<programlisting>
id
</programlisting>
  <para>The "gid" value indicates your current operating system group membership 
  (remember this for use later on during the installation process).</para></listitem>
  <listitem><para>Create an OpenLink installation directory on the server
  (e.g., /usr/openlink) and transfer to it all the server component files
  you downloaded (including compressed TAZ archives and the installation
  shell script "install.sh").</para>
  <note><title>Notes:</title>
  <para>Do not uncompress or unzip the compressed .taz archives after
  download; the installation script will take care of this for you.</para>
  <para>If using FTP, be sure to transfer the compressed .taz archives in
  BINARY mode, and the installation shell script in TEXT mode.</para>
  </note>
  <para>You set your FTP program in TEXT or ASCII transfer mode by typing the 
  following command at your FTP command prompt:</para>
<programlisting>
ftp&gt; ascii
</programlisting>
  <para>You set your FTP program in BINARY transfer mode by typing the following 
  command at your FTP command prompt:</para>
<programlisting>
ftp&gt; bin
</programlisting>
  </listitem>
  <listitem><para>The file "install.sh" is an "sh" shell script.  It must be 
  executed in the appropriate shell to avoid unexpected behaviour.  Run the 
  "install.sh" script on the server by typing the command:</para>
<programlisting>
sh ./install.sh
</programlisting>
  </listitem>
  <listitem><para>The install script will extract the files from the ".taz" 
  files and then create all of the relevant OpenLink server component 
  sub-directories.  The install script will also place the OpenLink server 
  components into their appropriate sub-directories</para></listitem>
  <listitem><para>Once the files have been extracted and placed in the relevant 
  sub-directories, the install script will proceed to install and configure 
  the OpenLink Admin Assistant.  This program enables remote configuration for 
  all OpenLink Server Components (Rule Book, Service and Database Agents) from 
  any Web Browser.</para>
  <para>The dialogue below illustrates the interactions encountered during
  the server components installation process, accepting all the script
  defaults:</para>
<programlisting>
bash$ sh install.sh
$ sh install.sh
*
* Temporarily saving your original Session Rules Book
* (the file oplrqb.ini) to oplrqb.ini.save
*
* Temporarily saving your original ODBC DSN settings
* (the file odbc.ini) to odbc.ini.save
*
* Temporarily saving your original ODBC Installation settings
* (the file odbcinst.ini) to odbcinst.ini.save
*
* Temporarily saving your original UDBC DSN settings
* (the file udbc.ini) to udbc.ini.save
*
Extracting (dqadp91b.taz) ...
Extracting (dqbrzzzz.taz) ...
* Restoring your original Session Rules Book
* (the file oplrqb.ini) and creating a new oplrqb.ini.sample
*
* Restoring your original ODBC DSN settings
* (the file odbc.ini) and creating a new odbc.ini.sample
*
* Restoring your original ODBC Installation settings
* (the file odbcinst.ini) and creating a new odbcinst.ini.sample
*
* Restoring your original UDBC DSN settings
* (the file udbc.ini) and creating a new udbc.ini.sample
*
Setting up CLASSPATH for Java connectivity.
You can choose between the following Java JDK versions:
 1)     JDK 1.1.x
 2)     JDK 1.2.x
 3)     JDK 1.3.x
Please enter your choice [ENTER=2] :
Creating scripts ...
Entering default values in oplrqb.ini ...
Using Informix 7.3 Multi Threaded Agent (inf73_mv) ...
Using Ingres II Multi Threaded Agent (ingii_mv) ...
Using ODBC Multi Threaded Agent (odbc_mv) ...
Using Oracle 8.1.x Multi Threaded Agent (ora81_mv) ...
Using Virtuoso Multi Threaded Agent (virt_mv) ...
Modifying bin/odbc.ini ...
Modifying bin/odbcinst.ini ...
Creating link for ODBC ...
Enter the port number the broker will listen on for
client connections [ENTER=Default]  :
Welcome to the OpenLink Admin Assistant Setup.
This program will install the HTTP based OpenLink Admin Assistant, thereby
enabling remote configuration for all OpenLink Server Components (Rule Book,
Service and Database Agents) from any Web Browser.
TCP/IP Port to use? [ENTER=8000] :
Log File? [ENTER=www_sv.log] :
Log all requests (y/n)? [ENTER=n] :
Administrator account? [ENTER=admin] :
Administrator's password? [ENTER=admin] :
The OpenLink Admin Assistant is now ready for use.
Please (re)start the OpenLink Request Broker (using the command 'oplrqb -v')
and then point your Web Browser to the URL below:
http://digitalunix5.mydomain.com:8000
Enter the name of the user that will own the
programs [ENTER=Use Current User Settings]  :
Enter the name of the group that will own the
programs [ENTER=Use Current Group Settings] :
Changing ownership ...
End of installation
</programlisting>
  </listitem>
  <listitem><para>Run the OpenLink environment shell script as follows:</para>
<programlisting>. openlink.sh</programlisting>
<para>Users in tcsh or csh must use the command:</para>
<programlisting>source openlink.csh</programlisting>
  <para>This will set all the required environment variables (e.g., $ODBCINI,
  $ODBCINSTINI, $PATH) which enable alternate directory executable launching,
  and proper use of the HTTP-based Admin Assistant.</para>
<para>You may wish to place the startup command in your shell startup script (.profile,
.login, .bashrc etc) in order for it to take effect on login.</para>
  </listitem>
  <listitem><para>Start your OpenLink Request Broker in debug mode by
  executing the OpenLink Request Broker startup command:</para>
<programlisting>oplrqb -dv</programlisting>
  <para>Should you receive an "oplrqb: unable to create listener (Address
  already in use)" error, this most likely indicates that the Broker is
  already started. It can be shut down by running the command:</para>
<programlisting>oplshut -f</programlisting>
<para>or</para>
<programlisting>oplshut +port &lt;alternate port number&gt;</programlisting>
<para>Where &lt;alternate port number&gt;> is a different port number you specified
as the Broker's TCP listen port at install-time. (If you used the default
port, then use the former command.)</para>
<para>If you continue to receive the error above, the port (either 5000, or
the one you specified as the Listen port) is already occupied by another TCP
process. Contact your systems administrator for assistance, or reinstall the
OpenLink Request Broker, specifying a different TCP Listen port.</para>
  </listitem>
  <listitem><para>Start your Web Browser and then enter the following URL:</para>
<programlisting>http://host:port</programlisting>
<para>Where <emphasis>host</emphasis> is the network alias or IP address of machine
where Server Components are installed. The <emphasis>port</emphasis> is the number
you provided when prompted by OpenLink installer.</para>
<para>For example, if your machine has a network alias of "opllinux", and you
accept the default port number at installation time, then the required URL
would be constructed as follows:</para>
<programlisting>http://opllinux:8000</programlisting>
  </listitem>
  <listitem><para>Follow the instructions provided in the "Client Components
  Installation" section of this guide, in order to verify connectivity to your
  server using the OpenLink Multi-Tier Data Access Drivers.</para>
  </listitem>
  <listitem><para>If the previous step is successful, shut down the Request Broker 
  using the command:</para>
  <programlisting>oplshut -f</programlisting>
  <para>or</para>
  <programlisting>oplshut -fy</programlisting>
  <para>This will kill off any remaining connections to the database, if they
  have been established. Next restart in normal mode using the command:</para>
  <programlisting>oplrqb -v</programlisting>
  <para>Running your Request Broker in debug mode will log a significant amount
  of information to the bin/oplrqb.log file, so normal mode is recommended unless
  you are experiencing problems which you need to report to Technical Support.</para>
  <para>For more information about other available options when starting and
  stopping the Request Broker, see the "Request Broker Startup &amp; Shutdown"
  topic in the <link linkend="startandstop">
  Server Components Administration section</link> of this guide.</para>
  </listitem>
</orderedlist>
</sect1>
<sect1 id="servcompinstcont">
<sect1info>
  <keywordset>
    <keyword>Installed Files</keyword>
    <keyword>File Locations</keyword>
    <keyword>ODBC Driver</keyword>
  </keywordset>
</sect1info>
<title>Installed Files &amp; Locations</title>
<para>The core components required by the Request
Broker and Database Agents are situated within the &quot;bin&quot; and &quot;bin/w3config&quot;
sub-directories under your OpenLink server components base installation
directory.  Each of these components is described below and grouped by directory
location.</para>
<para>On Windows, the default base installation directory is 
 <computeroutput>C:\Progam Files\OpenLink\</computeroutput>.  On Mac OS X, 
 the non-configurable base installation directory is 
 <computeroutput>//Library/Application Support/openlink/</computeroutput>.</para>
<sect2 id="binsubdir">
<title>The &quot;bin&quot; sub-directory:</title>
<para>Below is a list of the important files in
the bin directory:</para>
	<table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
		<title>Important Files in the bin directory</title>
		<tgroup align="char" charoff="50" char="." cols="2">
					<colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
					<thead>
						<row><entry>File</entry><entry>Description</entry></row>
					</thead>
					<tbody>
						<row><entry>oplrqb</entry><entry>The OpenLink Request Broker.</entry></row>
						<row><entry>oplrqb.ini</entry><entry>The OpenLink &quot;Session Rules&quot; Book.</entry></row>
						<row><entry>oplrqb.log</entry><entry>File that holds critical Broker &amp;
  Startup and Shutdown audit information. All critical events that affect the
  Broker are written to this file irrespective of Broker startup options.</entry></row>
						<row><entry>oplshut</entry><entry>Utility for showing Agent status and
  shutting down the Broker.</entry></row>
						<row><entry>xxx_sv</entry><entry>OpenLink Agent (single thread). xxx will be an abbreviation for the data access or protocol
  handling service provided by the OpenLink Agent.</entry></row>
						<row><entry>xxx_mv</entry><entry>OpenLink Agent (mutli thread). xxx will be an abbreviation for the data access or protocol
  handling service provided by the OpenLink Agent.</entry></row>
						<row><entry>release.txt</entry><entry>Text file with the latest information
  regarding the Request Broker.</entry></row>
						<row><entry>oplrqb.lic</entry><entry>File containing software activation and
  license key for the Broker and Database agents.</entry></row>
					</tbody>
				</tgroup>
			</table>
</sect2>
<!-- ######################## -->
<sect2 id="w3configdir">
<title>The &quot;bin/w3config&quot; sub-directory:</title>
	<table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
		<title>Important Files in the bin/w3config directory</title>
		<tgroup align="char" charoff="50" char="." cols="2">
					<colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
					<thead>
						<row><entry>File</entry><entry>Description</entry></row>
					</thead>
					<tbody>
						<row><entry>www_sv</entry><entry>The OpenLink Web Service Agent, this is
  basically a HTTP/Web Server implemented as an OpenLink Service Providing
  Agent. It is this component that forms the core engine around which the
  OpenLink Admin Assistant has been built.</entry></row>
						<row><entry>www_sv.log</entry><entry>File that holds critical Web Service
  Agent &amp; Startup and Shutdown audit information. All critical events that
  affect the Web Service Agent are written to this file irrespective of Web
  Service Agent startup options.</entry></row>
						<row><entry>www_sv.ini</entry><entry>Web Service Agent configuration file.</entry></row>
						<row><entry>setup</entry><entry>Web Service Agent installation and
  configuration program (you only need to run this directly if you only want to
  re-install the Web Service Agent component as opposed to the entire pool of
  OpenLink Server Components.</entry></row>
					</tbody>
				</tgroup>
			</table>
</sect2>
<!-- ##################################### -->
</sect1>
<sect1 id="versionnos">
<sect1info>
  <keywordset>
    <keyword>OpenLink Component Details</keyword>
    <keyword>Details</keyword>
  </keywordset>
</sect1info>
<title>Obtaining Component Details From The Command Line</title>
<para>This approach provides you with information
about the actual executable file, it includes:</para>
<para>Version Number - this is a component identifier that
indicates the version number specific of a specific OpenLink Component</para>
<para>Release Number - this is an identifier for a collection of
OpenLink Components, numerous components with different version numbers make up
an OpenLink Data Access Drivers commercial release.</para>
<para>Compilation Date - indicates the date component was compiled.</para>
<para>CVSID - this is a source code archive identifier that relates to the
actual source code archive from which a particular component has been
assembled.</para>
<para>Binary Platform - indicates what platform the component
has been built to run on.</para>
<para>To obtain the information referred to above
for any OpenLink Component simply type in the program name at your command
prompt with the --help switch.</para>
<para>Examples of the output produced by the
OpenLink Request Broker and the OpenLink Web Service Agent are depicted below:</para>
<sect2 id="oplrqb">
<title>OpenLink Request Broker:</title>
<programlisting>
[person@linuxbox bin]$ ./oplrqb --help
OpenLink Request Broker
Version 2.22 (Release 4.2) as of Mon Apr 08 2002 (cvsid 00060).
Compiled for Linux 2.4.18-xfs (i686-pc-linux-gnu)
Copyright (C) OpenLink Software.
Usage:
  oplrqb [-flLdcv] [+foreground] [+loglevel num] [+logfile arg] [+debug]
         [+configfile arg] [+version]
  +foreground   run in the foreground
  +loglevel     log level
  +logfile      log file
  +debug        debug mode
  +configfile   use alternate configuration file
  +version      show version number
</programlisting>
</sect2>
<sect2 id="webage"><title>Web Service Agent:</title>
<programlisting>
[person@linuxbox w3config]$ www_sv --help
OpenLink Web Service Agent
Version 1.5 (Release 4.2) as of Mon Apr 08 2002 (cvsid 00060).
Compiled for Linux 2.4.18-xfs (i686-pc-linux-gnu)
Copyright (C) OpenLink Software.
Usage:
  www_sv [-clLd] [+config arg] [+loglevel num] [+logfile arg] [+debug]
  +config     config file
  +loglevel   log level
  +logfile    log file
  +debug      debug mode
Copyright (c) 1987-1994 The Regents of the University of California.
Copyright (c) 1994-1996 Sun Microsystems, Inc.
Copyright (c) 1995 The Apache Group.  All rights reserved.
 This product includes software developed by the Apache Group
 for use in the Apache HTTP server project (http://www.apache.org/).
</programlisting>
</sect2>
<tip><title>See Also:</title>
<para>Using the Admin Assistant section for obtaining 
<link linkend="adinfoadmasist">General Information</link> using the web 
interface.</para></tip>
</sect1>
<sect1 id="mtfirewalling">
<sect1info>
  <keywordset>
    <keyword>OpenLink Component Details</keyword>
    <keyword>Details</keyword>
  </keywordset>
</sect1info>
<title>Configuring a Firewall for use with UDA Multi-Tier</title>
<para>
A multi-tier installation requires the following firewall considerations:
</para>
<para>On the server on which the Request Broker runs, you must allow
your clients to connect to port 5000/tcp (or the value of the "Listen"
directive in oplrqb.ini).
</para>
<para>On the server, you must allow clients to connect to ports
5001/tcp et seq (the values between the "PortLow" and "PortHigh"
directives in oplrqb.ini).
</para>
<para>On the client, you must be able to make new outgoing connections
to the server to contact the request broker (the same 5000/tcp or the
value of the "Listen" directive), and to agents listening on
successively higher-numbered ports (in the range between "PortLow" and
"PortHigh").
</para>
<para>If the agent makes a network connection to the database server,
the respective port should also be opened on the database server
(e.g. 5432/tcp for postgres, 1433 and 1434 udp and tcp for SQL Server,
etc).
</para>
<para>If you have a stateful firewall, the return packets from
request-broker and database agents to the clients should be taken care
of automatically. If not, you will have to cater for your OS'
selection of ephemeral client-side ports as well.
</para> 
</sect1>
</chapter>
