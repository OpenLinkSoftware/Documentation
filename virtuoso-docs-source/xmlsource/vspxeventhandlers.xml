<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="vspxeventhandlers">
        <title>Registering a VSPX Event Callbacks</title>
        <para>
	The event handlers mechanism can be extended with callbacks.
	This means registering a page method(s) which will be invoked after
	event scrips are processed. The page methods used in this case can
	be either defined using 'method' declaration inside VSPX page or
	using page subclass defined in code-behind script(s) (see 'code-file' below).
	To register a callback vc_add_handler (name, method_name) method must be invoked
	in any script preceding the handler stage.
	Parameters to the vc_add_handler are: name - name of event where callback to be executed
	(before-data-bind, after-data-bind, on-post, before-render),
	method_name - name of a page class method to be registered to the event.
     </para>
        <programlisting>
	 &lt;html&gt;
	     &lt;body&gt;
		 &lt;v:page name="handler_demo" xmlns:v="http://example.com/vspx/"&gt;
		     &lt;v:form name="sf" type="simple" action="form.vspx" method="POST"&gt;
			 &lt;v:text name="txt" /&gt;
			 &lt;v:button name="submit2" action="simple" value="OK" /&gt;
			 &lt;v:on-init&gt;
			     control.vc_add_handler ('on-post', 'user_post');
			 &lt;/v:on-init&gt;
		     &lt;/v:form&gt;
		     &lt;v:method name="user_post" arglist="inout control vspx_control"&gt;
			 dbg_printf ('Invoked: user post method');
		     &lt;/v:method&gt;
		 &lt;/v:page&gt;
	     &lt;/body&gt;
	 &lt;/html&gt;
	 </programlisting>
      </section>
