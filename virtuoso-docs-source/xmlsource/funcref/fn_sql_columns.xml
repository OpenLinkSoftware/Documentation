<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_sql_columns">
      <refmeta>
        <refentrytitle>sql_columns
</refentrytitle>
        <refmiscinfo>rmt
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>sql_columns
</refname>
        <refpurpose>get column information from table on a remote DSN
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_sql_columns">
          <funcprototype xml:id="fproto_sql_columns">
            <funcdef>vector 
<function>sql_columns
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>dsn
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>qualifier
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>owner
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>table_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>column
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_columns">
        <title>Description
</title>
        <para>This function corresponds to the ODBC catalog call of similar name.
    It and related functions are used by the virtual database to query
    remote data dictionaries.</para>
        <para>The dsn argument must refer to a dsn previously defined by
    <function>vd_remote_data_source</function>

   or ATTACH TABLE.</para>
        <para>For instance, the qualifier argument corresponds to the
    szTableQualifier and cbTableQualifier arguments of an ODBC catalog
    function.  The SQL NULL value corresponds to the C NULL value.
    The arguments can contain % signs, which are interpreted as in LIKE.
</para>
      </refsect1>
      <refsect1 xml:id="params_sql_columns">
        <title>Parameters
</title>
        <para>As defined in ODBC API for the corresponding catalog call.
</para>
      </refsect1>
      <refsect1 xml:id="ret_sql_columns">
        <title>Return Types
</title>
        <para>As defined in ODBC API for the corresponding catalog call.
</para>
        <para>This function returns an array, with one element for each row of
    the result set.  Each row is represented as an array with one element for
    each column.
</para>
      </refsect1>
      <refsect1 xml:id="examples_sql_columns">
        <title>Examples
</title>
        <example xml:id="ex_sql_columns">
          <title>Simple example
</title>
          <screen>
dbg_obj_print (sql_columns ('Local Virtuoso', 'Demo', NULL, 'Orders', NULL));
-&gt;
(
("Demo" "demo" "Orders" "OrderID" 4 "INTEGER" 10 10 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 4 &lt;DB NULL&gt; 10 1 1 )
("Demo" "demo" "Orders" "CustomerID" 12 "VARCHAR" 5 5 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 12 &lt;DB NULL&gt; 5 2 2 )
("Demo" "demo" "Orders" "EmployeeID" 4 "INTEGER" 10 10 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 4 &lt;DB NULL&gt; 10 3 3 )
("Demo" "demo" "Orders" "OrderDate" 11 "DATETIME" 19 19 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 11 3 19 4 4 )
("Demo" "demo" "Orders" "RequiredDate" 9 "DATE" 10 10 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 9 1 10 5 5 )
("Demo" "demo" "Orders" "ShippedDate" 11 "DATETIME" 19 19 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 11 3 19 6 6 )
("Demo" "demo" "Orders" "ShipVia" 4 "INTEGER" 10 10 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 4 &lt;DB NULL&gt; 10 7 7 )
("Demo" "demo" "Orders" "Freight" 8 "DOUBLE PRECISION" 16 16 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 8 &lt;DB NULL&gt; 16 8 8 )
("Demo" "demo" "Orders" "ShipName" 12 "VARCHAR" 40 40 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 12 &lt;DB NULL&gt; 40 9 9 )
("Demo" "demo" "Orders" "ShipAddress" 12 "VARCHAR" 60 60 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 12 &lt;DB NULL&gt; 60 10 10 )
("Demo" "demo" "Orders" "ShipCity" 12 "VARCHAR" 15 15 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 12 &lt;DB NULL&gt; 15 11 11 )
("Demo" "demo" "Orders" "ShipRegion" 12 "VARCHAR" 15 15 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 12 &lt;DB NULL&gt; 15 12 12 )
("Demo" "demo" "Orders" "ShipPostalCode" 12 "VARCHAR" 10 10 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 12 &lt;DB NULL&gt; 10 13 13 )
("Demo" "demo" "Orders" "ShipCountry" 12 "VARCHAR" 15 15 &lt;DB NULL&gt; 2 1 &lt;DB NULL&gt; &lt;DB NULL&gt; 12 &lt;DB NULL&gt; 15 14 14 )
)
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_sql_columns">
        <title>See Also
</title>
        <para><link linkend="fn_sql_data_sources"><function>sql_data_sources
</function></link>

  ,

<link linkend="fn_sql_columns"><function>sql_columns
</function></link>

  <link linkend="fn_sql_primary_keys"><function>sql_primary_keys
</function></link>

  ,
    <link linkend="fn_sql_gettypeinfo"><function>sql_gettypeinfo</function></link>

  ,
    <link linkend="fn_sql_statistics"><function>sql_statistics</function></link>

  ,
    <link linkend="fn_sql_tables"><function>sql_tables</function></link>

  .</para>
      </refsect1>
    </refentry>
