<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_http_listen_host">
      <refmeta>
        <refentrytitle>http_listen_host
</refentrytitle>
        <refmiscinfo>ws
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>http_listen_host
</refname>
        <refpurpose>Starts, stops and retrieves the state of a user-defined HTTP listener
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_http_listen_host">
          <funcprototype xml:id="fproto_http_listen_host">
            <funcdef>integer 
<function>http_listen_host
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>interface_address
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>action
</parameter>

   integer
</paramdef>
            <paramdef choice="opt">in 
<parameter>options
</parameter>

   vector
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_http_listen_host">
        <title>Description
</title>
        <para>This function requires dba privileges.
</para>
        <para>This function is used to start, stop or lookup the state of user-defined HTTP and HTTPS listeners.
  The return value is 0 or 1 and indicates state of the listener, 1 for started and 0 for stopped.

</para>
      </refsect1>
      <refsect1 xml:id="params_http_listen_host">
        <title>Parameters
</title>
        <refsect2>
          <title>interface_address
</title>
          <para>IP address of interface to be
    started, stopped or queried for its current state.
</para>
        </refsect2>
        <refsect2>
          <title>action
</title>
          <para>Can only take one of the following integer values:
</para>
          <simplelist type="vert">
            <member>0 - start
</member>
            <member>1 - stop
</member>
            <member>2 - query state
</member>
          </simplelist>
        </refsect2>
        <refsect2>
          <title>options
</title>
          <para>An array of name-value pairs for
    setting up a HTTPS listeners.  This parameter only used for starting HTTPS
    listeners, and nothing more.  The available options are:
</para>
          <simplelist type="vert">
            <member>https_cv - certificate authority file for verification.
</member>
            <member>https_cert - server certificate.
</member>
            <member>https_key server private key.
</member>
            <member>https_cv_depth - depth of chain for CA verification.
</member>
          </simplelist>
          <para>The certificate and key are mandatory for HTTPS listeners, but the
    others are optional.  They are similar to the SSLCertificate, SSLPrivateKey,
    X509ClientVerifyCAFile, X509ClientVerifyDepth Virtuoso INI file settings.

</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_http_listen_host">
        <title>Return Types
</title>
        <para>The return type is integer, and will be either 0 or 1 to indicate the
  state of the listener, 1 for started and 0 for stopped.
</para>
      </refsect1>
      <refsect1 xml:id="examples_http_listen_host">
        <title>Examples
</title>
        <example xml:id="ex_http_listen_host">
          <title>Starting/stopping and state retrieval of a listener
</title>
          <screen>

  SQL&gt; http_listen_host ('127.0.0.1:7780', 0);
  SQL&gt; select http_listen_host ('127.0.0.1:7780', 2);
  callret
  VARCHAR
  _______________________________________________________________________________

  1

  1 Rows. -- 1 msec.

  SQL&gt; http_listen_host ('127.0.0.1:7780', 1);
  SQL&gt; select http_listen_host ('127.0.0.1:7780', 2);
  callret
  VARCHAR
  _______________________________________________________________________________

  0

  1 Rows. -- 1 msec.

</screen>
        </example>
      </refsect1>
    </refentry>
