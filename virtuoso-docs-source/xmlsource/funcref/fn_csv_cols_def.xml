<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_csv_cols_def">
      <refmeta>
        <refentrytitle>csv_cols_def
</refentrytitle>
        <refmiscinfo>file
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>csv_cols_def
</refname>
        <refpurpose>Guess columns and column types from CSV file.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_csv_cols_def">
          <funcprototype xml:id="fproto_csv_cols_def">
            <funcdef>
              <function>csv_cols_def
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>file_name
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_csv_cols_def">
        <title>Description
</title>
        <para>This function will try to guess the columns by given CSV file. It would
work if CSV file begins with a header row.
</para>
      </refsect1>
      <refsect1 xml:id="params_csv_cols_def">
        <title>Parameters
</title>
        <refsect2>
          <title>file_name
</title>
          <para>The name of the CSV file.
</para>
        </refsect2>
      </refsect1>
      <!--
<refsect1
xml:id="ret_csv_cols_def">
<title>Return Types
</title>
    <para>Returns a vector with field values.</para>
  </refsect1>
  <refsect1
xml:id="errors_csv_cols_def">
    <title>Errors</title>
    <para>If table is not suitable in respect of number of columns or
type of columns error will be signaled.</para>
  </refsect1>-->

      <refsect1 xml:id="examples_csv_cols_def">
        <title>Examples
</title>
        <example xml:id="ex_csv_cols_def">
          <title>Simple Use
</title>
          <programlisting>
SQL&gt;create procedure my_csv_get_columns (in file_name varchar)
{
   dbg_obj_print(csv_cols_def(file_name));
}
;

Done. -- 10 msec.

SQL&gt;select my_csv_get_columns('tmp/MyContacts.csv');
callret
VARCHAR
______________________

0

1 Rows. -- 10 msec.
-- and on the Virtuoso Server console will be shown:

(('First_Name_Last_Name_Middle_Name_Name_Nickname_E_mail_Address_Home_Street_Home_City_Home_Postal_Code_Home_State_Home_Country_Region_Home_Phone_Home
_Fax_Mobile_Phone_Personal_Web_Page_Business_Street_Business_City_Business_Postal_Code_Business_State_Business_Country_Region_Business_Web_Page_Busine
ss_Phone_Business_Fax_Pager_Company_Job_Title_Department_Office_Location_Notes' 'VARCHAR' ) )

</programlisting>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_csv_cols_def">
        <title>See Also
</title>
        <para>
          <link linkend="fn_get_csv_row">
            <function>get_csv_row
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_csv_load_file">
            <function>csv_load_file
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_csv_load">
            <function>csv_load
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_csv_parse">
            <function>csv_parse
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_csv_table_def">
            <function>csv_table_def
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
