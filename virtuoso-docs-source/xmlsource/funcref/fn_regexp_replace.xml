<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_regexp_replace">
      <refmeta>
        <refentrytitle>regexp_replace
</refentrytitle>
        <refmiscinfo>string
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>regexp_replace
</refname>
        <refpurpose>Replaces occurrence(s) of the matching pattern in the source_string with a specified replace_string.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_regexp_replace">
          <funcprototype xml:id="fproto_regexp_replace">
            <funcdef>varchar 
<function>regexp_replace
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>source_string
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>pattern
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>replace_string
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>position
</parameter>

   integer
</paramdef>
            <paramdef choice="opt">in 
<parameter>occurrence
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>match_parameter
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_10">
        <title>Description
</title>
        <para>This function replaces occurrence(s) of the matching
<parameter>pattern</parameter>

   in the <parameter>source_string</parameter>

   with
a specified <parameter>replace_string</parameter>

  , allowing complex
search-and-replace operations.  The traditional REPLACE SQL function substitutes
one string with another.  Assume your data has extraneous spaces in the text and
you would like to replace them with a single space. With the REPLACE function,
you would need to list exactly how many spaces you want to replace. However,
the number of extra spaces may not be the same everywhere in the text. 
</para>
      </refsect1>
      <refsect1 xml:id="params_regexp_replace">
        <title>Parameters
</title>
        <refsect2>
          <title>source_string
</title>
          <para>Source string.
</para>
        </refsect2>
        <refsect2>
          <title>pattern
</title>
          <para>The regular expression to match.
</para>
        </refsect2>
        <refsect2>
          <title>replace_string
</title>
          <para>By default an empty string, ''.
</para>
        </refsect2>
        <refsect2>
          <title>position
</title>
          <para>By default this is set to 1.
</para>
        </refsect2>
        <refsect2>
          <title>occurrence
</title>
          <para>By default this is set to 0. If you specify occurrence as DB NULL value it will replace all
      	the occurrences of the pattern in the string.
</para>
        </refsect2>
        <refsect2>
          <title>match_parameter
</title>
          <para>By default this is set to null.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_regexp_replace">
        <title>Returns
</title>
        <para>This function returns the a substring matching the regular expression.
</para>
      </refsect1>
      <refsect1 xml:id="examples_regexp_replace">
        <title>Examples
</title>
        <example xml:id="ex_regexp_replace">
          <title> 
  </title>
          <para>This example has three spaces between Joe and Smith. The REPLACE function's
parameter specifies that two spaces should be replaced with one space. In
this case, the result leaves an extra space where there were three spaces
in the original string between Joe and Smith. </para>
          <programlisting>
SELECT
  REPLACE('Joe  Smith', '  ', ' ') AS REPLACE_NORMAL,
  REGEXP_REPLACE('Joe        Smith', '( ){2,}', ' ') AS REGEXP_REPLACE;

REPLACE_NORMAL              REPLACE_REGEXP
VARCHAR                     VARCHAR
______________________________________________

Joe Smith                   Joe Smith
</programlisting>
        </example>
        <note><title>Compatibility:</title>
        <para>The regular expressions supported here follow version 7.9 of the Perl
        Compatible Regular Expression (PCRE) syntax.
        </para>
        <orderedlist>
          <listitem><para><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions">Wikipedia</link></para></listitem>
          <listitem><para><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://pcre.org/">PCRE.org</link></para></listitem>
        </orderedlist>
        </note>
      </refsect1>
      <refsect1 xml:id="seealso_regexp_replace">
        <title>See Also
</title>
        <para>
          <link linkend="fn_regexp_match">
            <function>regexp_match()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regexp_like">
            <function>regexp_like()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regexp_instr">
            <function>regexp_instr()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regexp_parse">
            <function>regexp_parse()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regexp_substr">
            <function>regexp_substr()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
