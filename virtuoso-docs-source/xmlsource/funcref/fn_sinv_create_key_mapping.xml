<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_sinv_create_key_mapping">
      <refmeta>
        <refentrytitle>sinv_create_key_mapping
</refentrytitle>
        <refmiscinfo>sql
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>sinv_create_key_mapping
</refname>
        <refpurpose>Creates a key mapping function &amp; table.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_sinv_create_key_mapping">
          <funcprototype xml:id="fproto_sinv_create_key_mapping">
            <funcdef>
              <function>sinv_create_key_mapping
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>map_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>part_defs
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>do_drops
</parameter>

   integer := 1
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_sinv_create_key_mapping">
        <title>Description
</title>
        <para>Creates a key mapping function &amp; table (as described in the doc section

<link linkend="sqlinverse">SQL Inverse Functions
</link>

  )
</para>
      </refsect1>
      <refsect1 xml:id="params_sinv_create_key_mapping">
        <title>Parameters
</title>
        <refsect2>
          <title>map_name
</title>
          <para>(string) the name of the mapping. This becomes the name of the
      forward function (from parts to single int value) and participates in the name
      of the lookup table  (like MAP_
&lt;map_name&gt;)</para>
        </refsect2>
        <refsect2>
          <title>part_defs
</title>
          <para>contains an array of name/type pairs describing the parts of the
      mapping. The types are used in the MAP table as column types and the type names
      are used in naming the referenced functions (one for each part) like :

&lt;map_name&gt;_
&lt;part_name&gt;</para>
        </refsect2>
        <refsect2>
          <title>do_drops
</title>
          <para>integer (0, 1, 2 : default value 1)
</para>
          <para>this controls how the function will go about dropping the already existing
      objects:
</para>
          <simplelist type="vert">
            <member>0 - don't issue any DROP TABLE/PROCEDURE/INVERSE calls, just the CREATE statements
</member>
            <member>1 - do the DROPs before issuing the actual CREATE statements
</member>
            <member>2 - do *only* the DROPs without the CREATEs.
</member>
          </simplelist>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="seealso_sinv_create_key_mapping">
        <title>See Also
</title>
        <para><link linkend="fn_sinv_create_inverse"><function>sinv_create_inverse
</function></link>

  ,

<link linkend="fn_sinv_drop_inverse"><function>sinv_drop_inverse
</function></link>

  </para>
      </refsect1>
    </refentry>
