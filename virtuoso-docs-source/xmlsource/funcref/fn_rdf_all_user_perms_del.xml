<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_rdf_all_user_perms_del">
      <refmeta>
        <refentrytitle>DB.DBA.RDF_ALL_USER_PERMS_DEL
</refentrytitle>
        <refmiscinfo>rdf
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>DB.DBA.RDF_ALL_USER_PERMS_DEL
</refname>
        <refpurpose>Removes all the setting of permissions of an user, both default permissions 
    	and permissions on specific graphs.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_rdf_all_user_perms_del">
          <funcprototype xml:id="fproto_rdf_all_user_perms_del">
            <funcdef>
              <function>DB.DBA.RDF_ALL_USER_PERMS_DEL
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>uname
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>uid
</parameter>

   integer := null
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_rdf_all_user_perms_del">
        <title>Description
</title>
        <para>This function removes all the setting of permissions of user named uname, both default 
    	permissions and permissions on specific graphs. The only exception is that it does not remove 
    	default permissions if the specified user is "nobody" or "dba", but all graph-specific permissions 
    	are always removed.
    </para>
        <para>
    	The procedure can deal with disabled users. Moreover it can be used with entirely deleted users as 
    	soon as user id is known. It is possible to pass NULL instead of user name and an integer user ID 
    	as a second argument.

</para>
      </refsect1>
      <refsect1 xml:id="params_rdf_all_user_perms_del">
        <title>Parameters
</title>
        <refsect2>
          <title>uname
</title>
          <para>User name
</para>
        </refsect2>
        <refsect2>
          <title>uid
</title>
          <para>The user U_ID in the system table DB.DBA.SYS_USERS.
</para>
        </refsect2>
      </refsect1>
      <!--refsect1
xml:id="ret_rdf_all_user_perms_del">
<title>Return Types
</title>
    <para>The return value is not specified and may be changed in future versions.</para>
  </refsect1-->

      <refsect1 xml:id="examples_rdf_all_user_perms_del">
        <title>Examples
</title>
        <example xml:id="ex_rdf_all_user_perms_del">
          <title>Example
</title>
          <para>See 
<link linkend="rdfgraphsecurityintex">Example for Blogs and Resource Sharing
</link>

</para>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_rdf_all_user_perms_del">
        <title>See Also
</title>
        <para>
          <function>DB.DBA.RDF_AUDIT_METADATA
</function>
        </para>
        <para>
          <link linkend="fn_rdf_graph_security_audit">
            <function>DB.DBA.RDF_GRAPH_SECURITY_AUDIT
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_default_user_perms_set">
            <function>DB.DBA.RDF_DEFAULT_USER_PERMS_SET
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_default_user_perms_del">
            <function>DB.DBA.RDF_DEFAULT_USER_PERMS_DEL
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_graph_user_perms_set">
            <function>DB.DBA.RDF_GRAPH_USER_PERMS_SET
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_graph_user_perms_del">
            <function>DB.DBA.RDF_GRAPH_USER_PERMS_DEL
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_graph_group_create">
            <function>DB.DBA.RDF_GRAPH_GROUP_CREATE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_graph_group_ins">
            <function>DB.DBA.RDF_GRAPH_GROUP_INS
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
