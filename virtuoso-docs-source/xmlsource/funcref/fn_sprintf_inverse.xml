<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_sprintf_inverse">
      <refmeta>
        <refentrytitle>sprintf_inverse
</refentrytitle>
        <refmiscinfo>string
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>sprintf_inverse
</refname>
        <refpurpose>returns vector on a specified pattern.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_sprintf_inverse">
          <funcprototype xml:id="fproto_sprintf_inverse">
            <funcdef>
              <function>sprintf_inverse
</function>
            </funcdef>
            <paramdef choice="opt"><parameter>strg
</parameter>

   string
</paramdef>
            <paramdef choice="opt"><parameter>format
</parameter>

   string
</paramdef>
            <paramdef choice="opt"><parameter>err
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_25">
        <title>Description
</title>
        <para>sprintf_inverse gets a string to parse, a format string and an integer (0,1 or 2)
that indicates error recovery method. If the first argument matches the format string then it
returns vector of the pattern values.

</para>
      </refsect1>
      <refsect1 xml:id="params_sprintf_inverse">
        <title>Parameters
</title>
        <refsect2>
          <title>strg
</title>
          <para>a string to parse
</para>
        </refsect2>
        <refsect2>
          <title>format
</title>
          <para>a format string
</para>
        </refsect2>
        <refsect2>
          <title>err
</title>
          <para>indicates the error recovery method in case the string does not match to the format:
0 - to return NULL,
1 - to return shorter vector that consists of all values extracted before the mismatch has been detected,
2 - to return vector of expected length with NULLs instead of values that were not found due to mismatch

</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="examples_sprintf_inverse">
        <title>Examples
</title>
        <example xml:id="ex_sprintf_inverse">
          <title>Example 1
</title>
          <screen>
SQL&gt; select sprintf_inverse ('qwe123asd456zxcABRACADABRA', 'qwe%dasd%dzxc%s', 2);
callret
VARCHAR
_______________________________________________________________________________

vector(123,456,0x00adfae8)

1 Rows. -- 0 msec.
SQL&gt;
</screen>
        </example>
        <example xml:id="ex_sprintf_inverse_01">
          <title>Example 2</title>
          <screen>
SQL&gt; select sprintf_inverse ('---123', '%-R', 2);
callret
VARCHAR
_______________________________________________________________________________

vector(0x00b070e8)

1 Rows. -- 0 msec.
SQL&gt;
</screen>
        </example>
      </refsect1>
    </refentry>
