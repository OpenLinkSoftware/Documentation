<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_sql_gettypeinfo">
      <refmeta>
        <refentrytitle>sql_gettypeinfo
</refentrytitle>
        <refmiscinfo>rmt
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>sql_gettypeinfo
</refname>
        <refpurpose>return type information from a remote DSN
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_sql_gettypeinfo">
          <funcprototype xml:id="fproto_sql_gettypeinfo">
            <funcdef>vector 
<function>sql_gettypeinfo
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>dsn
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>type
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_29">
        <title>Description
</title>
        <para>You can use the functions described here to find out information about the
remote datasources that you are using. These could be especially useful in Virtuoso PL
later on if you are not able to know everything about the remote tables ahead of time for
the ATTACH TABLE statement.
statement</para>
        <para>
These SQL functions correspond to the ODBC catalog calls of similar name.
</para>
        <para>
The dsn argument must refer to a dsn previously defined by
vd_remote_data_source or ATTACH TABLE.
</para>
        <para>
By default information for all the data types supported by the remote is returned.
The optional type argument (defaults to SQL_ALL_TYPES) limits the information
returned to cover only the ODBC type number supplied.
</para>
        <para>
These functions return an array, with one element for each row of the result set.
Each row is represented as an array with one element for each column.
</para>
        <screen>
dbg_obj_print (sql_gettypeinfo ('Local Virtuoso'));
-&gt;
(
 ("character" 1 2000 "'" "'" "length" 1 1 3 0 0 0 "varchar" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("numeric" 2 40 "" "" "precision,scale" 1 1 2 0 0 0 "numeric" 0 15 )
 ("decimal" 3 40 "" "" "precision,scale" 1 1 2 0 0 0 "decimal" 0 15 )
 ("integer" 4 10 "" "" &lt;DB NULL&gt; 1 1 2 0 0 0 "integer" 0 10 )
 ("smallint" 5 3 "" "" &lt;DB NULL&gt; 1 1 2 0 0 0 "smallint" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("smallint" -7 3 "" "" &lt;DB NULL&gt; 1 1 2 0 0 0 "smallint" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("float" 6 16 "" "e0" &lt;DB NULL&gt; 1 1 2 0 0 0 "double precision" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("real" 7 16 "" "e0" &lt;DB NULL&gt; 1 1 2 0 0 0 "real" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("double precision" 8 16 "" "e0" &lt;DB NULL&gt; 1 1 2 0 0 0 "double precision" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("varchar" 12 2000 "'" "'" "length" 1 1 3 0 0 0 "varchar" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("long varchar" -1 2147483647 "'" "'" &lt;DB NULL&gt; 1 1 0 0 0 0 "long varchar" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("long varbinary" -4 2147483647 "'" "'" &lt;DB NULL&gt; 1 1 0 0 0 0 "long varbinary" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("datetime" 11 19 "{ts" "}" &lt;DB NULL&gt; 1 1 3 0 0 0 "datetime" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("timestamp" -2 10 "0x" &lt;DB NULL&gt; &lt;DB NULL&gt; 0 0 2 0 0 0 "timestamp" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("time" 10 8 "{t" "}" &lt;DB NULL&gt; 1 1 2 0 0 0 "time" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("date" 9 10 "{d" "}" &lt;DB NULL&gt; 1 1 2 0 0 0 "date" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("binary" -2 2000 "0x" "" "length" 1 1 2 0 0 0 "varbinary" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("varbinary" -3 2000 "0x" "" "length" 1 1 2 0 0 0 "varbinary" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("nchar" -8 1000 "N'" "'" "length" 1 1 3 0 0 0 "nvarchar" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("nvarchar" -9 1000 "N'" "'" "length" 1 1 3 0 0 0 "nvarchar" &lt;DB NULL&gt; &lt;DB NULL&gt; )
 ("long nvarchar" -10 1073741823 "N'" "'" &lt;DB NULL&gt; 1 1 0 0 0 0 "long nvarchar" &lt;DB NULL&gt; &lt;DB NULL&gt; )
)
</screen>
      </refsect1>
      <refsect1 xml:id="seealso_sql_gettypeinfo">
        <title>See Also
</title>
        <para><link linkend="fn_sql_data_sources"><function>sql_data_sources
</function></link>

  ,

<link linkend="fn_sql_columns"><function>sql_columns
</function></link>

  <link linkend="fn_sql_primary_keys"><function>sql_primary_keys
</function></link>

  ,
    <link linkend="fn_sql_statistics"><function>sql_statistics</function></link>

  ,
    <link linkend="fn_sql_tables"><function>sql_tables</function></link>

  .</para>
      </refsect1>
    </refentry>
