<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_equ">
      <refmeta>
        <refentrytitle>equ
</refentrytitle>
        <refmiscinfo>number
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>lt
</refname>
        <refname>lte
</refname>
        <refname>gt
</refname>
        <refname>gte
</refname>
        <refname>equ
</refname>
        <refname>neq
</refname>
        <refpurpose>comparison functions
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_lt">
          <funcprototype xml:id="fproto_lt">
            <funcdef>
              <function>lt
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>arg1
</parameter>

  any
</paramdef>
            <paramdef choice="opt">in 
<parameter>arg2
</parameter>

  any
</paramdef>
          </funcprototype>
        </funcsynopsis>
        <funcsynopsis xml:id="fsyn_lte">
          <funcprototype xml:id="fproto_lte">
            <funcdef>
              <function>lte
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>arg1
</parameter>

  any
</paramdef>
            <paramdef choice="opt">in 
<parameter>arg2
</parameter>

  any
</paramdef>
          </funcprototype>
        </funcsynopsis>
        <funcsynopsis xml:id="fsyn_gt">
          <funcprototype xml:id="fproto_gt">
            <funcdef>
              <function>gt
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>arg1
</parameter>

  any
</paramdef>
            <paramdef choice="opt">in 
<parameter>arg2
</parameter>

  any
</paramdef>
          </funcprototype>
        </funcsynopsis>
        <funcsynopsis xml:id="fsyn_gte">
          <funcprototype xml:id="fproto_gte">
            <funcdef>
              <function>gte
</function>
            </funcdef>
            <paramdef choice="opt">in
<parameter>arg1
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in
<parameter>arg2
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
        <funcsynopsis xml:id="fsyn_equ">
          <funcprototype xml:id="fproto_equ">
            <funcdef>
              <function>equ
</function>
            </funcdef>
            <paramdef choice="opt"><parameter>arg1
</parameter>

   any
</paramdef>
            <paramdef choice="opt"><parameter>arg2
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
        <funcsynopsis xml:id="fsyn_neq">
          <funcprototype xml:id="fproto_neq">
            <funcdef>
              <function>neq
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>arg1
</parameter>

  any
</paramdef>
            <paramdef choice="opt">in 
<parameter>arg2
</parameter>

  any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_equ">
        <title>Description
</title>
        <para>These functions return 1 if their first argument is less than (lt),
    less than or equivalent (lte), greater than (gt), greater than or
    equivalent (gte), equivalent (equ), or not equivalent (neq) to the
    second argument, respectively. If the arguments are not of the same type,
    then an appropriate type coercion is done for them before
    comparison. </para>
        <para>These functions correspond to SQL query operators &lt;, &lt;=, &gt;,
    &gt;=, = and &lt;&gt; and are needed because the SQL syntax does not
    allow these operators to be used on the left side of
    <function>FROM</function>

   keyword in a <function>SELECT</function>

    statement.
</para>
      </refsect1>
      <refsect1 xml:id="params_equ">
        <title>Parameters
</title>
        <refsect2>
          <title><parameter>arg1
</parameter>

  , 
<parameter>arg2
</parameter>

  </title>
          <para><type>integer
</type>

  , 
<type>float
</type>

  , 
<type>double
      precision
</type>

  , 
<type>varchar
</type>

   or 
<type>NULL
</type>

  .
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_equ">
        <title>Return Values
</title>
        <para>An 
<type>integer
</type>

   value of 1 or 0 is returned.
</para>
      </refsect1>
      <refsect1 xml:id="examples_equ">
        <title>Examples
</title>
        <example xml:id="ex_equ">
          <title>Simple Example
</title>
          <screen>
lt('pata','pato')  -&gt; 1 (Yes, 'pata' is less than 'pato')
gt('barbar','bar')  -&gt; 1 (Yes, 'barbar' is greater than 'bar')
equ(17,17)    -&gt; 1 (seventeen is seventeen)
equ(17,17.0)    -&gt; 1 (regardless of number format)
equ(atof('17.0'),17.0))  -&gt; 1 (as it seems be)
equ(atof('17.1'),17.1))  -&gt; 0 (But not always! Beware!)
gte(1234,NULL)    -&gt; 0 (No, 1234 is not "greater"
        than or equal to NULL)
lt(1234,NULL)    -&gt; 1 (Instead, it is "less" than NULL)
</screen>
        </example>
      </refsect1>
    </refentry>
