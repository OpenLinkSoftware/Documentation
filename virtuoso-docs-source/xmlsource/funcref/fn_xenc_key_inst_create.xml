<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xenc_key_inst_create">
      <refmeta>
        <refentrytitle>xenc_key_inst_create
</refentrytitle>
        <refmiscinfo>hash
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>xenc_key_inst_create
</refname>
        <refpurpose>Key instance generation
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xenc_key_inst_create">
          <funcprototype xml:id="fproto_xenc_key_inst_create">
            <funcdef>any 
<function>xenc_key_inst_create
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>super
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xenc_key_inst_create">
        <title>Description
</title>
        <para>
	The function is used to make a key reference used in
	encryption functions.

</para>
      </refsect1>
      <refsect1 xml:id="params_xenc_key_inst_create">
        <title>Parameters
</title>
        <refsect2>
          <title>name
</title>
          <para>Name of the key to be instantiated.
</para>
        </refsect2>
        <refsect2>
          <title>super
</title>
          <para>Optional parameter, is specified must contains a
	    key reference to the super key. In other words
	    the key used to encrypt key specified by 
<parameter>name
</parameter>

  .
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_xenc_key_inst_create">
        <title>Return Types
</title>
        <para>
	  On success the function returns a non-null value
	  containing key reference data.

</para>
      </refsect1>
      <refsect1 xml:id="examples_xenc_key_inst_create">
        <title>Examples
</title>
        <example xml:id="ex_xenc_key_inst_create">
          <title>Key instance creation
</title>
          <para>The example specifies to use an AES key to be used
	    as a session key, also AES will be encrypted with a RSA one.
	</para>
          <screen>
...
keyi := xenc_key_inst_create ('myAES', xenc_key_inst_create ('rsa-test'))
...
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xenc_key_inst_create">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xenc_key_exists">
            <function>xenc_key_exists()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
