<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_user_drop">
      <refmeta>
        <refentrytitle>USER_DROP
</refentrytitle>
        <refmiscinfo>admin
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>USER_DROP
</refname>
        <refpurpose>This deletes a user ccount, optionally including schema objects, DAV resources and other possible resources  owned by the user.

</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_user_drop">
          <funcprototype xml:id="fproto_user_drop">
            <funcdef>
              <function>USER_DROP
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>cascade
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_user_drop">
        <title>Description
</title>
        <para>This is used to remove an existing user account from local security schema.
</para>
      </refsect1>
      <refsect1 xml:id="params_user_drop">
        <title>Parameters
</title>
        <refsect2>
          <title>name
</title>
          <para>A string containing the name of the user account to be deleted.
</para>
        </refsect2>
        <refsect2>
          <title>cascade
</title>
          <para>This flag (0/1) specifies whether  to delete the stored procedures/functions, PL modules,
tables and user defined types owned by  the user. It cannot drop  assembly definitions (created with
CREATE ASSEMBLY), because CREATE ASSEMBLY is a database wide operation (done by the DBA group) so the
assembly has no owner (since you can not drop DBA). The default value is zero. Sometimes it is not
possible to drop the resources, for example if a table owned by the user is referenced by foreign key
in a table that would not be dropped. The drop user will detect that and will print the appropriate
error message (giving up the operation).

</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_user_drop">
        <title>Return Types
</title>
        <para>None
</para>
      </refsect1>
      <!--
  <refsect1
xml:id="errors_user_drop">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
  <refsect1
xml:id="examples_user_drop">
    <title>Examples</title>
    <example
xml:id="ex_user_drop"><title></title>
      <para></para>
      <screen><![CDATA[
]]>
</screen>
    </example>
  </refsect1>
-->

      <refsect1 xml:id="seealso_user_drop">
        <title>See Also
</title>
        <para>
          <link linkend="vumuseroptions">User Options Section
</link>
        </para>
        <para>
          <link linkend="fn_user_create">
            <function>USER_CREATE()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_user_role_create">
            <function>USER_ROLE_CREATE()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_user_role_drop">
            <function>USER_ROLE_DROP()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_user_change_password">
            <function>USER_CHANGE_PASSWORD()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_user_set_qualifier">
            <function>USER_SET_QUALIFIER()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_user_grant_role">
            <function>USER_GRANT_ROLE()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_user_revoke_role">
            <function>USER_REVOKE_ROLE()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_user_set_option">
            <function>USER_SET_OPTIONS()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_user_get_option">
            <function>USER_GET_OPTIONS()
</function>
          </link>
        </para>
        <para>
          <link linkend="yacc"><function>DROP USER [CASCADE]()
</function>

   statement
</link>
        </para>
      </refsect1>
    </refentry>
