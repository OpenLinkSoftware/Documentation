<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_subseq">
      <refmeta>
        <refentrytitle>subseq
</refentrytitle>
        <refmiscinfo>string
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>subseq
</refname>
        <refpurpose>returns substring of a string or sub-vector of a vector
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_subseq">
          <funcprototype xml:id="fproto_subseq">
            <funcdef>
              <function>subseq
</function>
            </funcdef>
            <paramdef choice="opt"><parameter>str
</parameter>

   string or vector 
</paramdef>
            <paramdef choice="opt"><parameter>from
</parameter>

   integer
</paramdef>
            <paramdef choice="opt"><parameter>to
</parameter>

   integer or NULL
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_38">
        <title>Description
</title>
        <para>subseq returns a copy of subsequence of string or vector str using zero-based
    indices from (inclusive) and to (exclusive) to delimit the substring or the vector
    extracted.
</para>
        <para>
    If to is omitted or is NULL, then it equals by default to the length of
    str, i.e. everything from from to the end of str is returned.
</para>
        <para>
    If to and from are equal, an empty string ''(empty vector) is returned.
</para>
        <para>
    If from is greater than to or length of str an error is signalled.
</para>
        <para>
    If str is NULL then NULL is returned.
</para>
        <screen>
subseq('AbracadabrA',0,4) -&gt; 'Abra'
subseq('AbracadabrA',4,8) -&gt; 'cada'
subseq('AbracadabrA',7)    -&gt; 'abrA'
subseq(string,0,strchr(string,'/'))
subseq(vector (1, 2, 3), 2) -&gt; vector (3)
subseq(vector (1, 2, 3), 0, 2) -&gt; vector (1, 2)
</screen>
        <para>
The last one with string argument returns a copy of the string cut from the first slash,
leaving it and everything following out, and in the case where there
are no slashes present, returns a copy of the whole string.
</para>
      </refsect1>
    </refentry>
