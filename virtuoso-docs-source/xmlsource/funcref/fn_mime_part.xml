<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_mime_part">
      <refmeta>
        <refentrytitle>mime_part
</refentrytitle>
        <refmiscinfo>mail
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>mime_part
</refname>
        <refpurpose>used to compose a MIME message body part.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_mime_part">
          <funcprototype xml:id="fproto_mime_part">
            <funcdef>any 
<function>mime_part
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>content_type
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>content_disposition
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>transfer_encoding
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>data
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_mime_part">
        <title>Description
</title>
        <para>This function is used to make a MIME part that can be used with the 

<function>mime_body()
</function>

   function.
</para>
      </refsect1>
      <refsect1 xml:id="params_mime_part">
        <title>Parameters
</title>
        <refsect2>
          <title>content_type
</title>
          <para>This parameter is used to specify the media type and subtype of data 
      in the body of a message and to fully specify the native representation of 
      such data.  This header embodies much of the power of MIME.  The IETF can 
      add new official content types. Additionally, private content-type values can 
      be defined by anyone. Such private content types have values of 
      "x-something" or "X-something", where "something" can take on 
      any value.
</para>
        </refsect2>
        <refsect2>
          <title>content_disposition
</title>
          <para>This parameter provides information about how to present a 
      body part.  When a body part is to be treated as an attached file, the 
      Content-Disposition header should include a file name parameter.
</para>
        </refsect2>
        <refsect2>
          <title>transfer_encoding
</title>
          <para>The encoding method to use, such as base64.
</para>
        </refsect2>
        <refsect2>
          <title>data
</title>
          <para>The content of the message.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_mime_part">
        <title>Return Types
</title>
        <para>The function returns a MIME part for use with the 
<function>mime_body()
</function>

   function.
</para>
      </refsect1>
      <!--
  <refsect1
xml:id="errors_mime_part">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
-->

      <refsect1 xml:id="examples_mime_part">
        <title>Examples
</title>
        <example xml:id="ex_mime_part">
          <title>Creating a MIME message body
</title>
          <para>This example will show the output in ISQL of producing a two part MIME message
      using the mime_body() and mime_part() functions.</para>
          <screen>
SQL&gt; select MIME_BODY (vector (MIME_PART (null,null,null,'this is a first'),
MIME_PART (null,null,'base64','this is a second')));
callret
VARCHAR
_______________________________________________________________________________

Date: Tue, 25 Jun 2002 11:13:05 GMT
Content-Type: multipart/mixed; boundary="----43c7f8b88e14a87dc3f2d840db93c731"
Mime-Version: 1.0
X-Mailer: Virtuoso

This is a multi-part message in MIME format.

------43c7f8b88e14a87dc3f2d840db93c731
Content-Type: text/plain
Content-Transfer-Encoding: 8bit

this is a first
------43c7f8b88e14a87dc3f2d840db93c731
Content-Type: text/plain
Content-Transfer-Encoding: base64

dGhpcyBpcyBhIHNlY29uZA==
------43c7f8b88e14a87dc3f2d840db93c731--

1 Rows. -- 21 msec.

</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_mime_part">
        <title>See Also
</title>
        <para>
          <link linkend="fn_mime_part">
            <function>mime_part()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_mime_body">
            <function>mime_body()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
