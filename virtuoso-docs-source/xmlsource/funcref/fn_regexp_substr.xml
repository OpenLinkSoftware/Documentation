<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_regexp_substr">
      <refmeta>
        <refentrytitle>regexp_substr
</refentrytitle>
        <refmiscinfo>string
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>regexp_substr
</refname>
        <refpurpose>returns a single captured substring from matched substring
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_regexp_substr">
          <funcprototype xml:id="fproto_regexp_substr">
            <funcdef>(varchar|nvarchar) 
<function>regexp_substr
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>pattern
</parameter>

   (varchar|nvarchar)
</paramdef>
            <paramdef choice="opt">in 
<parameter>str
</parameter>

   (varchar|nvarchar)
</paramdef>
            <paramdef choice="opt">in 
<parameter>offset
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="params_regexp_substr">
        <title>Parameters
</title>
        <refsect2>
          <title>pattern
</title>
          <para>the regexp pattern string
</para>
        </refsect2>
        <refsect2>
          <title>str
</title>
          <para>the data into which 1 (the first) or 0 matching substrings will be searched for
</para>
        </refsect2>
        <refsect2>
          <title>offset
</title>
          <para>the number of regexp subexpression who's match to return : 0 for the whole matching substring,
      1 for the substring matching the first regexp subexpression and so on
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="desc_09">
        <title>Description
</title>
        <para>This function will return the whole string value of the first substring in "str"
    that matches the regexp in "pattern" or a sub part of the first match.
    The regexp syntax allows subexpressions to be marked in the regular expression
    (using the braces syntax). An example of such type of expression will be: '(2[34]).*(2[35])' which means a regular
    expression having two subexpressions: '2[34]' and '2[35]'.
</para>
      </refsect1>
      <refsect1 xml:id="examples_regexp_substr">
        <title>Examples
</title>
        <example xml:id="ex_regexp_substr_1">
          <title>Simple example
</title>
          <para>Let's apply the above regexp to the following source string: 22232225222323
</para>
          <screen>
SQL&gt; select regexp_substr('(2[34]).*(2[35])','22242226222527', 0);
callret
VARCHAR
_______________________________________________________________________________

2422262225

1 Rows. -- 0 msec.
      </screen>
          <para>This returns the whole matched string from the expression.</para>
          <screen>
SQL&gt; select regexp_substr('(2[34]).*(2[35])','22242226222527', 1);
callret
VARCHAR
_______________________________________________________________________________

24

1 Rows. -- 0 msec.
      </screen>
          <para>This returns what has been matched for the first ('2[34]') regexp subexpression
out of the whole matched substring (see above) : basically denoted as \1 in perl</para>
          <screen>
SQL&gt; select regexp_substr('(2[34]).*(2[35])','22242226222527', 2);
callret
VARCHAR
_______________________________________________________________________________

25

1 Rows. -- 10 msec.
      </screen>
          <para>This returns what has been matched for the second ('2[35]') regexp subexpression
out of the whole matched substring. This is \2 in perl.
Note that the text '22' (that corresponds to '.*' part of the regexp) is not
returned by the above call because it is not contained in the second pair of braces.
</para>
        </example>

        <note><title>Compatibility:</title>
        <para>The regular expressions supported here follow version 7.9 of the Perl
        Compatible Regular Expression (PCRE) syntax.
        </para>
        <orderedlist>
          <listitem><para><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions">Wikipedia</link></para></listitem>
          <listitem><para><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://pcre.org/">PCRE.org</link></para></listitem>
        </orderedlist>
        </note>
        
      </refsect1>
      <refsect1 xml:id="seealso_regexp_substr">
        <title>See Also
</title>
        <para>
          <link linkend="fn_regexp_match">
            <function>regexp_match()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regexp_like">
            <function>regexp_like()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regexp_parse">
            <function>regexp_parse()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regexp_replace">
            <function>regexp_replace()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regexp_instr">
            <function>regexp_instr()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
