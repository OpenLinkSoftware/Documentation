<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_sequence_remove">
      <refmeta>
        <refentrytitle>sequence_remove
</refentrytitle>
        <refmiscinfo>sql
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>sequence_remove
</refname>
        <refpurpose>Removes a sequence object
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_sequence_remove">
          <funcprototype xml:id="fproto_sequence_remove">
            <funcdef>
              <function>sequence_remove
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>name
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_sequence_remove">
        <title>Description
</title>
        <para>The function removes a sequence object created before by 
<function>sequence_set
</function>

   or 
<function>sequence_next
</function>

  .
</para>
      </refsect1>
      <refsect1 xml:id="params_sequence_remove">
        <title>Parameters
</title>
        <refsect2>
          <title>name
</title>
          <para>The name of the sequence object to be deleted.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_sequence_remove">
        <title>Return Types
</title>
        <para>The function returns integer one if the sequence object is removed, zero if there was no object with the specified name.
</para>
      </refsect1>
      <refsect1 xml:id="examples_sequence_remove">
        <title>Examples
</title>
        <example xml:id="ex_sequence_remove">
          <title>Creation and Removal of a Sequence Object
</title>
          <para>This sequence of operations demonstrates how 
<function>sequence_remove
</function>

   reverts the effect of 
<function>sequence_next
</function>

  .
</para>
          <screen>
&gt; select sequence_next ('my_sequence');
0

&gt; select sequence_next ('my_sequence');
1

&gt; select sequence_next ('my_sequence');
2

&gt; select sequence_remove ('my_sequence');
1

&gt; select sequence_next ('my_sequence');
0
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_sequence_remove">
        <title>See Also
</title>
        <para>
          <link linkend="sequenceobjects">Sequence Objects
</link>
        </para>
        <para>
          <function>sequence_get
</function>
        </para>
        <para>
          <link linkend="fn_sequence_get_all">
            <function>sequence_get_all
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_sequence_next">
            <function>sequence_next
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_registry_get">
            <function>registry_get
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_registry_get_all">
            <function>registry_get_all
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_registry_set">
            <function>registry_set
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_registry_name_is_protected">
            <function>registry_name_is_protected
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_registry_remove">
            <function>registry_remove
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
