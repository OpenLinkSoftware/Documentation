<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_decrypt">
      <refmeta>
        <refentrytitle>decrypt
</refentrytitle>
        <refmiscinfo>hash
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>decrypt
</refname>
        <refpurpose>Encrypt content in base64 encoding
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_decrypt">
          <funcprototype xml:id="fproto_decrypt">
            <funcdef>varchar 
<function>decrypt
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>base64_string_session
</parameter>

    any
</paramdef>
            <paramdef choice="opt">in 
<parameter>key_name
</parameter>

    varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_decrypt">
        <title>Description
</title>
        <para>Returns decrypted content as a string_session. The algorithm to encrypt depends of the key, so if the
    key is AES the AES will be used, if it is 3DES it is 3DES etc. The AES key can be created with
    xenc_key_AES_rand_create (key_name, 256). Alternatively 3DES key can be generated with
    xenc_key_3DES_rand_create ().
</para>
      </refsect1>
      <refsect1 xml:id="params_decrypt">
        <title>Parameters
</title>
        <refsect2>
          <title>base64_string_session
</title>
          <para>A base64 string content to be decrypted.
</para>
        </refsect2>
        <refsect2>
          <title>key_name
</title>
          <para>The key name keeping secret.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_decrypt">
        <title>Return Types
</title>
        <para>On success the function will return decrypted content as a string_session.
</para>
      </refsect1>
      <refsect1 xml:id="examples_decrypt">
        <title>Examples
</title>
        <example xml:id="ex_decrypt">
          <title>Simple Use
</title>
          <screen>
-- The 'ses' is a function which print the string into a string session:
xenc_key_AES_rand_create ('kaes', 256).
decrypt (encrypt (ses ('data to encrypt'), 'kaes'), 'kaes');
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_decrypt">
        <title>See Also
</title>
        <para>
          <link linkend="fn_encrypt">
            <function>encrypt()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xenc_encrypt">
            <function>xenc_encrypt()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dsig_template_ext">
            <function>dsig_template_ext()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xenc_key_inst_create">
            <function>xenc_key_inst_create()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
