<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_concat">
      <refmeta>
        <refentrytitle>concat
</refentrytitle>
        <refmiscinfo>array
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>concat
</refname>
        <refpurpose>Concatenate strings
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_concat">
          <funcprototype xml:id="fproto_concat">
            <funcdef>
              <function>concat
</function>
            </funcdef>
            <paramdef choice="opt"><parameter>str1
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt"><parameter>str2
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">
              <parameter>...
</parameter>
            </paramdef>
            <paramdef choice="opt"><parameter>strn
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_concat">
        <title>Description
</title>
        <para><function>concat
</function>

   returns a new 
<type>string
</type>

  ,
    concatenated from a variable number of strings given as
    arguments. NULL arguments are handled as empty strings.</para>
        <para><programlisting>concat (str)</programlisting> returns a copy of
    <parameter>str</parameter>

  . </para>
        <para><programlisting>concat ()</programlisting> returns an empty

<type>string
</type>

  .
</para>
      </refsect1>
      <refsect1 xml:id="params_concat">
        <title>Parameters
</title>
        <para>Concat takes a variable number of 
<type>string
</type>

    arguments.
</para>
      </refsect1>
      <refsect1 xml:id="ret_concat">
        <title>Return types
</title>
        <para>The 
<function>concat
</function>

   returns a single
    <type>string</type>

  . If there are <type>wide strings</type>

   amongst
    the arguments, the string returned will also be

<type>wide
</type>

  .
</para>
      </refsect1>
      <refsect1 xml:id="err_concat">
        <title>Errors
</title>
        <table>
          <title>Errors signalled by concat()
</title>
          <tgroup cols="3">
            <tbody>
              <row>
                <entry>sqlstate
</entry>
                <entry>error code
</entry>
                <entry>error text
</entry>
              </row>
              <row>
                <entry>
                  <errorcode>22023
</errorcode>
                </entry>
                <entry>
                  <errorcode>SR007
</errorcode>
                </entry>
                <entry>
                  <errortext>Function concat needs a string or NULL as argument
	    &lt;argument number&gt;, not an arg of
	    type &lt;offending type&gt;
</errortext>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </refsect1>
      <refsect1 xml:id="examples_concat">
        <title>Examples
</title>
        <example xml:id="ex_concat_1">
          <title>Simple Example
</title>
          <para>Cross a mule with an ass.
</para>
          <screen>SQL&gt; select concat ('Muuli', 'aasi');
callret
VARCHAR
_______________________________________________________________________________

Muuliaasi

1 Rows. -- 4 msec.
</screen>
        </example>
      </refsect1>
      <!--
  <refsect1
xml:id="seealso_01"><title>See Also</title>
    <para><link linkend="fn_"></link></para>
  </refsect1>
-->

    </refentry>
