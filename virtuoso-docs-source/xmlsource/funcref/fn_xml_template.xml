<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xml_template">
      <refmeta>
        <refentrytitle>xml_template
</refentrytitle>
        <refmiscinfo>xml
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>xml_template
</refname>
        <refpurpose>Execute XML template from Virtuoso PL
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xml_template">
          <funcprototype xml:id="fproto_xml_template">
            <funcdef>
              <function>xml_template
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>xml_document_entity
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>parameters
</parameter>

   vector
</paramdef>
            <paramdef choice="opt">inout 
<parameter>session
</parameter>

   string_session
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xml_template">
        <title>Description
</title>
        <para>The 
<function>xml_template()
</function>

   function was introduced to
    enable PL programming to make use of XML templates.
    This function expects an XML entity for the first argument, that will be
    the XML template file contents. Usually this entity is composed making
    use of the <function>xtree_doc()</function>

   function from the XML
    template file.</para>
        <para>The second argument should be a vector of name-value pairs of the
    parameters for XML template.</para>
        <para>The last argument is an output string stream for the result. If the
    output stream is not specified the HTTP internal stream will be used
    if it is available, otherwise an error will be signalled.
</para>
      </refsect1>
      <refsect1 xml:id="params_xml_template">
        <title>Parameters
</title>
        <refsect2>
          <title>xml_document_entity
</title>
          <para>XML entity such as that returned by 
<function>xtree_doc()
</function>

</para>
        </refsect2>
        <refsect2>
          <title>parameters
</title>
          <para>Vector or name-value pairs: vector('name1', 'value1', 'name2', 'value2', ...).
</para>
        </refsect2>
        <refsect2>
          <title>session
</title>
          <para>Output stream for handling the results of XML template. If this
      parameter is unspecified then the HTTP internal stream will be assumed,
      which if not applicable will signal an error.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_xml_template">
        <title>Return Types
</title>
        <para>A URL of the XSLT stylesheet for further transformation will be
    returned. If xsl attribute was not specified in the XML template then the
    return value will be NULL.</para>
      </refsect1>
      <!--
<refsect1
xml:id="errors__01">
    <title>Errors</title>
    <table>
      <title>Errors signalled by</title>
      <tgroup cols="4">
       <thead>
         <row>
           <entry>SQLState</entry>
           <entry>Error Code</entry>
           <entry>Error Text</entry>
           <entry>Description</entry></row></thead>
	<tbody>
	  <row>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorcode></errorcode></entry>
	    <entry><errortext></errortext></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1
xml:id="examples_xml_template">
    <title>Examples</title>
    <example
xml:id="ex__36"><title></title>
      <para></para>
      <screen><![CDATA[
]]>
</screen>
    </example>
  </refsect1>
  <refsect1
xml:id="seealso_xml_template">
    <title>See Also</title>
    <para><link linkend="fn"><function></function></link></para>
  </refsect1> -->

    </refentry>
