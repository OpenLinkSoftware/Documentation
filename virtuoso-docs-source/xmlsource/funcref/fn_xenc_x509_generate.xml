<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xenc_x509_generate">
      <refmeta>
        <refentrytitle>xenc_x509_generate
</refentrytitle>
        <refmiscinfo>hash
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>xenc_x509_generate
</refname>
        <refpurpose>Generates a X.509v3 certificate using client's public key
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xenc_x509_generate">
          <funcprototype xml:id="fproto_xenc_x509_generate">
            <funcdef>
              <function>xenc_x509_generate
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>ca_key_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>public_key_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>serial
</parameter>

   integer
</paramdef>
            <paramdef choice="opt">in 
<parameter>validity
</parameter>

   integer
</paramdef>
            <paramdef choice="opt">in 
<parameter>subject
</parameter>

   vector
</paramdef>
            <paramdef choice="opt">in 
<parameter>extensions
</parameter>

   vector
</paramdef>
            <paramdef choice="opt">in 
<parameter>hours
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xenc_x509_generate">
        <title>Description
</title>
        <para>This function creates a X.509v3 certificate from a public key and sign the certificate with CA private key
</para>
      </refsect1>
      <refsect1 xml:id="params_xenc_x509_generate">
        <title>Parameters
</title>
        <refsect2>
          <title>ca_key_name
</title>
          <para>The name of CA key, the key must have corresponding certificate.
</para>
        </refsect2>
        <refsect2>
          <title>public_key_name
</title>
          <para>The name of the public key used to create certificate, it is given by certificate owner to CA. Note that public key must be imported already in CA'a key space.
</para>
        </refsect2>
        <refsect2>
          <title>serial
</title>
          <para>The serial number
</para>
        </refsect2>
        <refsect2>
          <title>validity
</title>
          <para>Certificate's validity in days
</para>
        </refsect2>
        <refsect2>
          <title>subject
</title>
          <para>An array of name/value pairs representing the subject aka name enties 
</para>
        </refsect2>
        <refsect2>
          <title>extensions
</title>
          <para>An array of name/value pairs to add as X.509v3 extensions to certificate
</para>
        </refsect2>
        <refsect2>
          <title>hours
</title>
          <para>If specified it is added to the days which allows a more fine-grained control over
		the expiration date.

</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="examples_xenc_x509_generate">
        <title>Examples
</title>
        <example xml:id="ex_xenc_x509_generate">
          <title>Issuing a certificate
</title>
          <para>The example below decodes a public key sent from client and
      	then issue a certificate and sign it with CA's key 'id_rsa'.
      	The client's key is create as temp key.</para>
          <screen>
declare kname, cvalue varchar;
kname := xenc_SPKI_read (null, replace (get_keyword ('key', params), '\r\n', ''));
xenc_x509_generate ('id_rsa', kname, sequence_next ('ca_id_rsa'), 365,
		vector (
			'CN', get_keyword ('name', params, name),
			'C',  get_keyword ('c', params, name),
			'O',  get_keyword ('o', params, name),
			'OU', get_keyword ('ou', params, name),
			'emailAddress', get_keyword ('email', params)
			),
		vector (
		  'subjectAltName',
		  'URI:'||webid,
		  'nsComment',
		  'Virtuoso Generated Certificate',
			'authorityKeyIdentifier',
			'keyid,issuer:always'));
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xenc_x509_generate">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xenc_spki_read">
            <function>xenc_SPKI_read()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xenc_x509_ss_generate">
            <function>xenc_x509_ss_generate()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
