<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_amazon_import_key_pair">
      <refmeta>
        <refentrytitle>DB.DBA.AMAZON_IMPORT_KEY_PAIR
</refentrytitle>
        <refmiscinfo>ami
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>DB.DBA.AMAZON_IMPORT_KEY_PAIR
</refname>
        <refpurpose>Uploads public key to Amazon.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_amazon_import_key_pair">
          <funcprototype xml:id="fproto_amazon_import_key_pair">
            <funcdef>
              <function>DB.DBA.AMAZON_IMPORT_KEY_PAIR
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>aws_access_key
</parameter>

   varchar 
</paramdef>
            <paramdef choice="opt">in 
<parameter>key_name
</parameter>

   varchar 
</paramdef>
            <paramdef choice="opt">in 
<parameter>public_key_material
</parameter>

   varchar 
</paramdef>
            <paramdef choice="opt">in 
<parameter>secret_key
</parameter>

   varchar 
</paramdef>
            <paramdef choice="opt">in 
<parameter>http_proxy
</parameter>

   varchar (default null)
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_amazon_import_key_pair">
        <title>Description
</title>
        <para>Uploads public key to Amazon
</para>
      </refsect1>
      <refsect1 xml:id="params_amazon_import_key_pair">
        <title>Parameters
</title>
        <refsect2>
          <title>aws_access_key
</title>
          <para>Amazon Access Key ID.
</para>
        </refsect2>
        <refsect2>
          <title>key_name
</title>
          <para>New name of key, which will be used on Amazon lists.
</para>
        </refsect2>
        <refsect2>
          <title>public_key_material
</title>
          <para>base64 encoded public key.
</para>
        </refsect2>
        <refsect2>
          <title>secret_key
</title>
          <para>AWS Security Token.
</para>
        </refsect2>
        <refsect2>
          <title>http_proxy
</title>
          <para>Proxy server, can be null or empty.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="examples_amazon_import_key_pair">
        <title>Examples
</title>
        <example xml:id="ex_amazon_import_key_pair">
          <title>Simple Use
</title>
          <programlisting>
create procedure simple_test()
{
  declare access_key, sec_token, key_name varchar;
  declare pub_key, fingers, fingerPrint any ;

  access_key  := 'AKIAJI7ZL427TI5EDF5A'; -- amazon manager site access key
  ec_token    := 'CGI/UMaXf2LRUctaj/HGJ57UNy/t7fNCshh8wpJg'; -- amazon manager site secret token
  key_name    := 'my_key';
  pub_key     := encode_base64 (cast (xenc_pubkey_DER_export (key_name) as varchar));
  pub_key     := encode_base64(pub_key);
  fingers     := xtree_doc(DB.DBA.AMAZON_IMPORT_KEY_PAIR (access_key, key_name,   pub_key, sec_token));
  fingerPrint := xpath_eval('/ImportKeyPairResponse/keyFingerprint', fingers, 0);

  if (fingerPrint is not null)
    return 1;
  else
    return 0;
}
;

</programlisting>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_amazon_import_key_pair">
        <title>See Also
</title>
        <para>
          <link linkend="fn_amazon_start_instance">
            <function>DB.DBA.AMAZON_START_INSTANCE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_run_instance">
            <function>DB.DBA.AMAZON_RUN_INSTANCE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_stop_instance">
            <function>DB.DBA.AMAZON_STOP_INSTANCE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_terminate_instance">
            <function>DB.DBA.AMAZON_TERMINATE_INSTANCE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_deregister_image">
            <function>DB.DBA.AMAZON_DEREGISTER_IMAGE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_create_image">
            <function>DB.DBA.AMAZON_CREATE_IMAGE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_create_volume">
            <function>DB.DBA.AMAZON_CREATE_VOLUME
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_create_snapshot">
            <function>DB.DBA.AMAZON_CREATE_SNAPSHOT
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_delete_snapshot">
            <function>DB.DBA.AMAZON_DELETE_SNAPSHOT
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_delete_volume">
            <function>DB.DBA.AMAZON_DELETE_VOLUME
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_describe_images">
            <function>DB.DBA.AMAZON_DESCRIBE_IMAGES
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_amazon_describe_instances">
            <function>DB.DBA.AMAZON_DESCRIBE_INSTANCES
</function>
          </link>
        </para>
        <para>
          <link xlink:href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportKeyPair.html">ApiReference--ImportKeyPair
</link>
        </para>
      </refsect1>
    </refentry>
