<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xenc_x509_from_csr">
      <refmeta>
        <refentrytitle>xenc_x509_from_csr
</refentrytitle>
        <refmiscinfo>hash
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>xenc_x509_from_csr
</refname>
        <refpurpose>Generate x509 certificate from CSR.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xenc_x509_from_csr">
          <funcprototype xml:id="fproto_xenc_x509_from_csr">
            <funcdef>varchar 
<function>xenc_x509_from_csr
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>ca_key_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>cli_key_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>csr_str
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>serial_no
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>days_validity
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>hours_validity
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xenc_x509_from_csr">
        <title>Description
</title>
        <para>This function generates Certificate Signing Request (CSR). The function return 1 upon success,
      	sql error on failure. The new certificate can be exported in PEM format with

<link linkend="fn_xenc_pem_export"><function>xenc_pem_export(cli_key_name)
</function></link>

  .
</para>
      </refsect1>
      <refsect1 xml:id="params_xenc_x509_from_csr">
        <title>Parameters
</title>
        <refsect2>
          <title>ca_key_name
</title>
          <para>The name of CA private key which will be used to sign certificate.
</para>
        </refsect2>
        <refsect2>
          <title>cli_key_name
</title>
          <para>The name of a key which will be created and will contains the client certificate.
</para>
        </refsect2>
        <refsect2>
          <title>csr_str
</title>
          <para>pem encoded CSR.
</para>
        </refsect2>
        <refsect2>
          <title>serial_no
</title>
          <para>Serial number.
</para>
        </refsect2>
        <refsect2>
          <title>days_validity
</title>
          <para>How many days will be valid the certificate.
</para>
        </refsect2>
        <refsect2>
          <title>hours_validity
</title>
          <para>How many hours will be valid the certificate.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_xenc_x509_from_csr">
        <title>Return Types
</title>
        <para>the function returns 1 upon success, sql error on failure.
</para>
      </refsect1>
      <refsect1 xml:id="errors_xenc_x509_from_csr">
        <title>Errors
</title>
        <table>
          <title>Errors signalled by 
<function>xenc_x509_from_csr
</function>

</title>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>SQLState
</entry>
                <entry>Error Code
</entry>
                <entry>Error Text
</entry>
                <entry>Description
</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <errorcode>22023
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>The key [name of the key] already exists
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>22023
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Missing or invalid signer certificate
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>22023
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Invalid certificate request
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>22023
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Invalid certificate request public key
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>22023
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Signature did not match the certificate request
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>22023
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Invalid certificate request subject name
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>42000
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Can not create x.509 structure
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>42000
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Can not sign certificate
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>42000
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>The type of public key is not supported mus tbe RSA or DSA
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>42000
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Can not create a key
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode>42000
</errorcode>
                </entry>
                <entry>
                  <errorcode>XECXX
</errorcode>
                </entry>
                <entry>
                  <errortext>Can not sign certificate : [the sign error text]
</errortext>
                </entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </table>
      </refsect1>
      <refsect1 xml:id="examples_xenc_x509_from_csr">
        <title>Example
</title>
        <example xml:id="ex_xenc_x509_from_csr">
          <title>Generating a Certificate Signing Request (CSR)
</title>
          <para>The following example demonstrates how to generate Certificate Signing Request (CSR).
</para>
          <itemizedlist mark="bullet">
            <listitem>
              <para>
                <link linkend="vfoafsslcacondt">Using Conductor, for user dba import a certificate with primary key and with name id_rsa.
</link>
              </para>
            </listitem>
            <listitem>
              <para>Execute:
</para>
            </listitem>
          </itemizedlist>
          <programlisting>
SQL&gt;create procedure csr_demo()
{
declare kname, cvalue varchar;
declare _key any;
declare _output int;

       xenc_key_RSA_create ('RSAKey1', 1024);

    _key := xenc_x509_csr_generate ('RSAKey1',
		vector (
			'CN', 'Demo user',
			'C',  'US',
			'O',  'OpenLink',
			'OU', 'Accounts',
			'emailAddress', 'demo@openlinksw.com'),
		vector ('subjectAltName', 'URI: http://www.openlinksw.com/dataspace/person/demo#this', 'nsComment', 'Virtuoso Generated Certificate',
			'authorityKeyIdentifier', 'keyid,issuer:always'));

   xenc_x509_from_csr ('id_rsa', 'MyKey1', _key , sequence_next ('ca_id_rsa'), 365, 100);
   return xenc_pem_export ('MyKey1');

}
;

Done. -- 0 msec.

SQL&gt; select csr_demo();
temp2
VARCHAR
_______________________________________________________________________________

-----BEGIN CERTIFICATE-----
MIIDSjCCAjKgAwIBAgIBEzANBgkqhkiG9w0BAQQFADBVMQswCQYDVQQIEwJvbDEL
MAkGA1UEChMCb2wxCzAJBgNVBAsTAm9sMQ0wCwYDVQQDEwRqb2huMR0wGwYJKoZI
hvcNAQkBFg5qb2huQGdtYWlsLmNvbTAeFw0xMTA2MDcxNTAxNDhaFw0xMjA2MTAx
OTAxNDhaMGsxEjAQBgNVBAMTCURlbW8gdXNlcjELMAkGA1UEBhMCVVMxETAPBgNV
BAoTCE9wZW5MaW5rMREwDwYDVQQLEwhBY2NvdW50czEiMCAGCSqGSIb3DQEJARYT
ZGVtb0BvcGVubGlua3N3LmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
3Ma/MlMrGruwpDsW2D3iYA6sqFqldPsgx837dNJel8ZQu5/0Nyr5DCtAQNq6nWZo
0bezK9UIfAXEQXWt4S7IMPfTF6oCT85YDsQEEE/o1spsZ9Q7kXhKu3R3LNNiTxYr
TR4FSl361pUqyYngSMTxVWJxKnPW30p94i5QuQjLF1sCAwEAAaOBkjCBjzAdBgNV
HQ4EFgQUF5wTSXH98IqiaaxfVTNcui8p8SowPwYDVR0RBDgwNoY0aHR0cDovL3d3
dy5vcGVubGlua3N3LmNvbS9kYXRhc3BhY2UvcGVyc29uL2RlbW8jdGhpczAtBglg
hkgBhvhCAQ0EIBYeVmlydHVvc28gR2VuZXJhdGVkIENlcnRpZmljYXRlMA0GCSqG
SIb3DQEBBAUAA4IBAQCwSN3y6yeCNe+/izo5GwM+16cjmZkyMUYmAO62I6T62jmI
p0nYaVhJ9WV0ntVnx1H8/LKwrgyLlhXacVw4jyXwFMSo+YuONj+kKpobNH2cl+u1
+c0kJGbY/eS99S2D3JhL6n+QukvQIqhYniZ21wT1ugwpN2A7NtY+g925+vQBO0UH
0wQm3eQk8NADEjcqrmGmJcrK22jfaBNov+O2wvcZQM7WIKm98f/7So7kBN0BoRX8
7LRf3zIhp4f9fk1QDwlm9NgwgxARqNOfRuJU2YU1ICz88LbwM4XDeb+Mdr0YMNdU
6eYkCB4vKsVH+s1E8m67QZ8TGxpNZLYXLZZBdt86
-----END CERTIFICATE-----

1 Rows. -- 172 msec.

</programlisting>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xenc_x509_from_csr">
        <title>See Also
</title>
        <para>
          <link linkend="fn_get_certificate_info">get_certificate_info()
</link>
        </para>
        <para>
          <link linkend="fn_xenc_x509_csr_generate">xenc_x509_csr_generate()
</link>
        </para>
        <para>
          <link linkend="fn_xenc_x509_generate">xenc_x509_generate()
</link>
        </para>
      </refsect1>
    </refentry>
