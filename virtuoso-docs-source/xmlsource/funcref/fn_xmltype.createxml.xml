<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xmltype.createxml">
      <refmeta>
        <refentrytitle>XMLType.createXML
</refentrytitle>
        <refmiscinfo>xml
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>XMLType.createXML
</refname>
        <refpurpose>Creates an XML Type instance.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xmltype.createxml">
          <funcprototype xml:id="fproto_xmltype.createxml">
            <funcdef>static method
<function>XMLType.createXML
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>src
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>schema_uri
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>validated
</parameter>

   integer
</paramdef>
            <paramdef choice="opt">in 
<parameter>wellformed
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xmltype.createxml">
        <title>Description
</title>
        <para>The static method creates an XMLType instance from the 
<parameter>src
</parameter>

   XML entity.
If the parameter <parameter>src</parameter>

   is not an XML entity then it is converted to it
via an internal call of <function>xtree_doc()</function>

   or <function>xml_tree_doc()</function>

  .
A schema may be associated with an XML entity by passing its URI 
as <parameter>schema_uri</parameter>

  ; this schema can be used later to validate 
the structure of the document.
</para>
      </refsect1>
      <refsect1 xml:id="params_xmltype.createxml">
        <title>Parameters
</title>
        <refsect2>
          <title>src
</title>
          <para>An XML entity or a value that can be converted to an XML entity.
</para>
        </refsect2>
        <refsect2>
          <title>schema_uri
</title>
          <para>A URI of the schema of the document. The default is NULL to make result non-schema based.
</para>
        </refsect2>
        <refsect2>
          <title>validated
</title>
          <para>An integer flag that indicates if the document is already validated against the
schema of the document (this is to avoid redundant validations). The default is 0.
</para>
        </refsect2>
        <refsect2>
          <title>wellformed
</title>
          <para>This parameter is unused and is listed solely for compatibility.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_xmltype.createxml">
        <title>Return Types
</title>
        <para>The method returns a new instance of XMLType.
</para>
      </refsect1>
      <refsect1 xml:id="examples_xmltype.createxml">
        <title>Examples
</title>
        <example xml:id="ex_xmltype.createxml">
          <title>Creating instances of XMLType
</title>
          <para>The procedure creates two instances (a schema-based and a non schema-based)
and demonstrates that these instances are filled with proper data.</para>
          <screen>
create procedure createxml_test ()
{
  declare test1 XMLType;
  declare test2 XMLType;
  declare PROBE varchar;
  result_names (PROBE);
  test1 := createXML ('&lt;test attr="value1"/&gt;');
  test2 := createXML ('&lt;test attr="value2"/&gt;', 'http://www.example.com/test.xsd');
  result (concat (
    '"test1" is created as non schema-based, URI=',
    cast (test1.getSchemaURL() as varchar) ) );
  result (concat (
    'Sample data from "test1": value of test/@attr is ',
    test1.extract ('test/@attr') ) );
  result (concat (
    '"test2" is created as schema-based, URI=',
    test2.getSchemaURL() ) );
  result (concat (
    'Sample data from "test2": value of test/@attr is ',
    test2.extract ('test/@attr') ) );
}

createxml_test ()
PROBE
VARCHAR
_______________________________________________________________________________

"test1" is created as non schema-based, URI=
Sample data from "test1": value of test/@attr is value1
"test2" is created as schema-based, URI=http://www.example.com/test.xsd
Sample data from "test2": value of test/@attr is value2

4 Rows. -- 00000 msec.
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xmltype.createxml">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xtree_doc">
            <function>xtree_doc()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xper_doc">
            <function>xper_doc()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
