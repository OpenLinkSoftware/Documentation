<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_rdf_graph_user_perms_set">
      <refmeta>
        <refentrytitle>DB.DBA.RDF_GRAPH_USER_PERMS_SET
</refentrytitle>
        <refmiscinfo>rdf
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>DB.DBA.RDF_GRAPH_USER_PERMS_SET
</refname>
        <refpurpose>Sets permissions of an the user on a graph.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_rdf_graph_user_perms_set">
          <funcprototype xml:id="fproto_rdf_graph_user_perms_set">
            <funcdef>
              <function>DB.DBA.RDF_GRAPH_USER_PERMS_SET
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>graph_iri
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>uname
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>perms 
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_rdf_graph_user_perms_set">
        <title>Description
</title>
        <para>sets permissions of the user named uname on graph specified by graph_iri to the value
    	specified by perms.
</para>
      </refsect1>
      <refsect1 xml:id="params_rdf_graph_user_perms_set">
        <title>Parameters
</title>
        <refsect2>
          <title>graph_iri
</title>
          <para>Graph IRI.
</para>
        </refsect2>
        <refsect2>
          <title>uname
</title>
          <para>User name.
</para>
        </refsect2>
        <refsect2>
          <title>perms
</title>
          <para>If perms is null then the function acts as

<link linkend="fn_rdf_graph_user_perms_del"><function>DB.DBA.RDF_GRAPH_USER_PERMS_DEL (graph_iri, uname);
</function></link>

</para>
          <para>If perms is not null (hence an integer) then the specified user should be an active SQL user
        	or "nobody".</para>
          <para>Four sorts of access are specified by four bits of an integer "permission bit-mask", plain old
      	UNIX style:

</para>
          <itemizedlist mark="bullet">
            <listitem>
              <para>Bit 1 permits read access.
</para>
            </listitem>
            <listitem>
              <para>Bit 2 permits write access via SPARUL and it's basically useless without bit 1 set.
</para>
            </listitem>
            <listitem>
              <para>Bit 4 permits write access via "RDF sponge" methods and it's basically useless
        	without bits 1 and 2 set.
        </para>
            </listitem>
            <listitem>
              <para>Bit 8 allows to obtain list of members of graph group; an IRI can be used as graph
        	IRI and as graph group IRI at the same time so bit 8 can be freely combined with any of bits
        	1, 2 or 4.
        </para>
            </listitem>
          </itemizedlist>
          <para>For more details see our documentation section
      	<link linkend="rdfgraphsecurityunddefperm">"Understanding Default Permissions"</link>

      </para>
        </refsect2>
      </refsect1>
      <!--refsect1
xml:id="ret_rdf_graph_user_perms_set"><title>Return Types</title>
    <para>The return value is not specified and may be changed in future versions.</para>
  </refsect1-->

      <refsect1 xml:id="examples_rdf_graph_user_perms_set">
        <title>Examples
</title>
        <example xml:id="ex_rdf_graph_user_perms_set">
          <title>Example
</title>
          <para>See 
<link linkend="rdfgraphsecurityintex">Example for Blogs and Resource Sharing
</link>

</para>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_rdf_graph_user_perms_set">
        <title>See Also
</title>
        <para>
          <function>DB.DBA.RDF_AUDIT_METADATA
</function>
        </para>
        <para>
          <link linkend="fn_rdf_graph_user_perms_get">
            <function>DB.DBA.RDF_GRAPH_USER_PERMS_GET
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_graph_security_audit">
            <function>DB.DBA.RDF_GRAPH_SECURITY_AUDIT
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_default_user_perms_set">
            <function>DB.DBA.RDF_DEFAULT_USER_PERMS_SET
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_default_user_perms_del">
            <function>DB.DBA.RDF_DEFAULT_USER_PERMS_DEL
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_graph_user_perms_del">
            <function>DB.DBA.RDF_GRAPH_USER_PERMS_DEL
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_all_user_perms_del">
            <function>DB.DBA.RDF_ALL_USER_PERMS_DEL
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_graph_group_create">
            <function>DB.DBA.RDF_GRAPH_GROUP_CREATE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_graph_group_ins">
            <function>DB.DBA.RDF_GRAPH_GROUP_INS
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
