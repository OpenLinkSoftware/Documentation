<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xenc_pem_export">
      <refmeta>
        <refentrytitle>xenc_pem_export
</refentrytitle>
        <refmiscinfo>hash
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>xenc_pem_export
</refname>
        <refpurpose>Export of a certificate and optionally private key in PEM format
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xenc_pem_export">
          <funcprototype xml:id="fproto_xenc_pem_export">
            <funcdef>
              <function>xenc_pem_export
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>key_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>pk_flag
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xenc_pem_export">
        <title>Description
</title>
        <para>The function is used to export certificate in PEM format, optionally it can export also private key (if present)
</para>
      </refsect1>
      <refsect1 xml:id="params_xenc_pem_export">
        <title>Parameters
</title>
        <refsect2>
          <title>key_name
</title>
          <para>The key name which keeps the certificate
</para>
        </refsect2>
        <refsect2>
          <title>pk_flag
</title>
          <para>A flag : 1 or 0, by default 0. It denotes to export or to skip exporting private key.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="examples_xenc_pem_export">
        <title>Examples
</title>
        <example xml:id="ex_xenc_pem_export_1">
          <title>Creating a certificate and exporting it in PEM format
</title>
          <para>The example below imports a client public key, then it creates a certificate and sign it with CA's private key and finally it exports the generated certificate in PEM format.
</para>
          <screen>
kname := xenc_SPKI_read (null, replace (get_keyword ('key', params), '\r\n', ''));
xenc_x509_generate (
    'id_rsa',
    kname,
    sequence_next ('ca_id_rsa'),
    365,
		vector (
			'CN', get_keyword ('name', params, name),
			'C',  get_keyword ('c', params, name),
			'O',  get_keyword ('o', params, name),
			'OU', get_keyword ('ou', params, name),
			'emailAddress', get_keyword ('email', params)
			),
		vector (
		  'subjectAltName',
		  'URI:'||webid,
		  'nsComment',
		  'Virtuoso Generated Certificate',
			'authorityKeyIdentifier',
			'keyid,issuer:always'));
cvalue := xenc_pem_export (kname);
</screen>
        </example>
        <example xml:id="ex_xenc_pem_export_2">
          <title>Export Web Server certificate for Virtuoso HTTPS endpoints
</title>
          <para>This example exports Web Server certificate generated for Virtuoso HTTPS Endpoint:
</para>
          <orderedlist>
            <listitem>
              <para>
                <link xlink:href="http://ods.openlinksw.com/wiki/ODS/ODSSetupSSL#Configure%20an%20HTTPS%20Listener%20for%20handling%20HTTPS%20requests%20from%20HTTP%20user%20agents%20%28clients%29">Configure an HTTPS Listener for handling HTTPS requests from HTTP user agents (clients).
</link>
              </para>
            </listitem>
            <listitem>
              <para>Suppose the generate certificate from the previous step has name "https_key_localhost"
</para>
            </listitem>
            <listitem>
              <para>To export the certificate, execute from iSQL:
</para>
              <programlisting>
SQL&gt; SELECT xenc_pem_export ('https_key_localhost');
</programlisting>
              <figure xml:id="srv" floatstyle="1">
                <title>iSQL Export Web Server Sertificate Output</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/export_srv_cert.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
          </orderedlist>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xenc_pem_export">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xenc_spki_read">
            <function>xenc_SPKI_read
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xenc_x509_generate">
            <function>xenc_xenc_x509_generate
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
