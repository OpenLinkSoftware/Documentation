<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_make_string">
      <refmeta>
        <refentrytitle>make_string
</refentrytitle>
        <refmiscinfo>string
</refmiscinfo>
        <refmiscinfo>type
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>make_string
</refname>
        <refpurpose>make a string
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_make_string">
          <funcprototype xml:id="fproto_make_string">
            <funcdef>
              <function>make_string
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>count
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_03">
        <title>Description
</title>
        <para>make_string returns a new string of length count, filled with
    binary zeros.
</para>
        <para>If count is zero, an empty string '' is returned.
</para>
      </refsect1>
      <refsect1 xml:id="params_02">
        <title>Parameters
</title>
        <refsect2>
          <title>count
</title>
          <para>Length of the string to be generated.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_01_01">
        <title>Return Values
</title>
        <para>A string with defined length is returned.
</para>
      </refsect1>
      <refsect1 xml:id="examples_02">
        <title>Examples
</title>
        <example xml:id="ex_make_string">
          <title>Using 
<function>make_string
</function>

   and
      <function>aref</function>

  </title>
          <para>Make a string and fill it with character sequence
      containing the alphabet upper case characters from A to Z.</para>
          <screen>
SQL&gt; create procedure
alphabet_string ()
{
  declare _inx integer;
  declare _str varchar;
  _str := make_string (26);

  while (_inx &lt; 26)
    {
      aset (_str, _inx, _inx + 65);
      _inx := _inx + 1;
    }
  return (_str);
}
;

Done. -- 6 msec.
SQL&gt; select alphabet_string ();
callret
VARCHAR NOT NULL
_______________________________________________________________________________

ABCDEFGHIJKLMNOPQRSTUVWXYZ

1 Rows. -- 4 msec.

</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_05">
        <title>See Also
</title>
        <para><link linkend="fn_vector"><function>vector()
</function></link>

  ,
    <link linkend="fn_aref"><function>aref</function></link>

  ,
    <link linkend="fn_aset"><function>aset</function></link>

  </para>
      </refsect1>
    </refentry>
