<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_dict_iter_rewind">
      <refmeta>
        <refentrytitle>dict_iter_rewind
</refentrytitle>
        <refmiscinfo>dict
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>dict_iter_rewind
</refname>
        <refpurpose>Resets the iterator before fetching keys and values by dict_iter_next()
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_dict_iter_rewind">
          <funcprototype xml:id="fproto_dict_iter_rewind">
            <funcdef>
              <function>dict_iter_rewind
</function>
            </funcdef>
            <paramdef choice="opt">inout 
<parameter>dict
</parameter>

   dictionary
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_dict_iter_rewind">
        <title>Description
</title>
        <para>The dictionary is always passed by reference, due to its (potentialy big) size.
The reference variable contains not only pointer to the whole dictionary but also a forward-only iterator (a "cursor") that can be used to retrieve items of the dictionary one after the other.
The function sets the iterator to the very first item of the dictionary.
</para>
      </refsect1>
      <refsect1 xml:id="params_dict_iter_rewind">
        <title>Parameters
</title>
        <refsect2>
          <title>dict
</title>
          <para>The reference to a dictionary to use as an iterator
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_dict_iter_rewind">
        <title>Return Types
</title>
        <para>The function returns an integer that is the expected number of items in the dictionary; the value may not match to the number of items retrieved later by dict_iter_next() if a dictionary is edited by some thread.
</para>
      </refsect1>
      <!--  
<refsect1
xml:id="errors_dict_iter_rewind">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1> -->

      <refsect1 xml:id="examples_dict_iter_rewind">
        <title>Example
</title>
        <example xml:id="ex_dict_iter_rewind">
          <title>Simplest read throughout the dictionary.
</title>
          <para>The procedure creates a dictionary, puts couple of items into it and then print them to the server's console
</para>
          <screen>
create function dict_iterator_test ()
{
  declare dict, dkey, dvalue any;
  dict := dict_new (10);
  dict_put (dict, 'a', 1); dict_put (dict, 'b', 2);
  dict_iter_rewind (dict);
  while (dict_iter_next (dict, dkey, dvalue))
    dbg_obj_princ (' key is ' dkey, ', corresponding value is ', dvalue);
}
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_dict_iter_rewind">
        <title>See Also
</title>
        <para>
          <link linkend="fn_dict_new">
            <function>dict_new
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_zap">
            <function>dict_zap
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_put">
            <function>dict_put
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_get">
            <function>dict_get
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_remove">
            <function>dict_remove
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_inc_or_put">
            <function>dict_inc_or_put
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_dec_or_remove">
            <function>dict_dec_or_remove
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_size">
            <function>dict_size
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_duplicate">
            <function>dict_duplicate
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_to_vector">
            <function>dict_to_vector
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_list_keys">
            <function>dict_list_keys
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_destructive_list_rnd_keys">
            <function>dict_destructive_list_rnd_keys
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_dict_iter_next">
            <function>dict_iter_next
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
