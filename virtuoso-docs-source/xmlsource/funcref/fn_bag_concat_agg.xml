<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_bag_concat_agg">
      <refmeta>
        <refentrytitle>DB.DBA.BAG_CONCAT_AGG
</refentrytitle>
        <refmiscinfo>aggr
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>DB.DBA.BAG_CONCAT_AGG
</refname>
        <refpurpose>Expects SQL vectors as arguments and the result is a concatenation
of all passed vectors.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_bag_concat_agg">
          <funcprototype xml:id="fproto_bag_concat_agg">
            <funcdef>vector 
<function>DB.DBA.BAG_CONCAT_AGG
</function>

</funcdef>
            <paramdef choice="opt"><parameter>_items
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_bag_concat_agg">
        <title>Description
</title>
        <para><function>DB.DBA.BAG_CONCAT_AGG
</function>

   expects SQL vectors as arguments and the result is a concatenation
of all passed vectors.

</para>
      </refsect1>
      <refsect1 xml:id="params_bag_concat_agg">
        <title>Parameters
</title>
        <refsect2>
          <title>_items
</title>
          <para>SQL vectors.
    </para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_bag_concat_agg">
        <title>Return Types</title>
        <para>Any

</para>
      </refsect1>
      <refsect1 xml:id="examples_bag_concat_agg">
        <title>Examples
</title>
        <example xml:id="ex_bag_concat_agg_1">
          <title>Simple Use
</title>
          <para>The most typical usage is the composing of get-keyword style vector, for ex:
    </para>
          <programlisting>
  SELECT DB.DBA.BAG_CONCAT_AGG (vector (U_NAME, U_ID))
    FROM DB.DBA.SYS_USERS
ORDER BY U_NAME;
</programlisting>
          <para>which returns a vector of passed values. The order of items in the vector repeats the order of passing
    argument vectors to the aggregate.
    </para>
          <programlisting>
 (dba, 0, dav, 2, administrators, 3, nobody, 5, nogroup, 6, __rdf_repl, 7, SPARQL_SELECT, 100, SPARQL_SPONGE, 101, ... )
No. of rows in result: 1
</programlisting>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_bag_concat_agg">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xq_sequence_agg">DB.DBA.XQ_SEQUENCE_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_vector_agg">DB.DBA.VECTOR_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_vector_of_nonnulls_agg">DB.DBA.VECTOR_OF_NONNULLS_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_vector_or_null_agg">DB.DBA.VECTOR_OR_NULL_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_vector_of_nonnulls_or_null_agg">DB.DBA.VECTOR_OF_NONNULLS_OR_NULL_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_vector_concat_agg">DB.DBA.VECTOR_CONCAT_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_bag_agg">DB.DBA.BAG_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_bag_of_nonnulls_agg">DB.DBA.BAG_OF_NONNULLS_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_bag_or_null_agg">DB.DBA.BAG_OR_NULL_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_bag_of_nonnulls_or_null_agg">DB.DBA.BAG_OF_NONNULLS_OR_NULL_AGG()
</link>
        </para>
        <para>
          <link linkend="fn_group_concat">DB.DBA.GROUP_CONCAT()
</link>
        </para>
        <para>
          <link linkend="fn_group_concat_distinct">DB.DBA.GROUP_CONCAT_DISTINCT()
</link>
        </para>
        <para>
          <link linkend="fn_group_digest">DB.DBA.GROUP_DIGEST()
</link>
        </para>
        <para>
          <link linkend="fn_sample">DB.DBA.SAMPLE()
</link>
        </para>
      </refsect1>
    </refentry>
