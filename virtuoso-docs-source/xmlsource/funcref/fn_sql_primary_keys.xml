<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_sql_primary_keys">
      <refmeta>
        <refentrytitle>sql_primary_keys
</refentrytitle>
        <refmiscinfo>rmt
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>sql_primary_keys
</refname>
        <refpurpose>get primary key information about a table on a remote DSN
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_sql_primary_keys">
          <funcprototype xml:id="fproto_sql_primary_keys">
            <funcdef>vector 
<function>sql_primary_keys
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>dsn
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>qualifier
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>owner
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>table_name
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_sql_primary_keys">
        <title>Description
</title>
        <para>You can use the functions described here to find out information about the
    remote datasources that you are using. These could be especially useful in Virtuoso PL
    later on if you are not able to know everything about the remote tables ahead of time for
    the ATTACH TABLE statement.
    statement</para>
        <para>These SQL functions correspond to the ODBC catalog calls of similar name.
    These are used to access the data dictionary of remote data sources inside the
    ATTACH TABLE process.</para>
        <para>The dsn argument must refer to a dsn previously defined by
    vd_remote_data_source or ATTACH TABLE.</para>
        <para>For instance, the qualifier argument corresponds to the szTableQualifier and
    cbTableQualifier arguments of an ODBC catalog function. A SQL NULL value
    corresponds to the C NULL value. The arguments can contain % signs, which
    are interpreted as in LIKE.</para>
        <para>These functions return an array, with one element for each row of the result set.
    Each row is represented as an array with one element for each column.
</para>
      </refsect1>
      <refsect1 xml:id="params_sql_primary_keys">
        <title>Parameters
</title>
        <refsect2>
          <title>dsn
</title>
          <para>The data source name 
<type>string
</type>

</para>
        </refsect2>
        <refsect2>
          <title>qualifier
</title>
          <para>Qualifier 
<type>string
</type>

  . May contain wildcards as in 'De%'.
</para>
        </refsect2>
        <refsect2>
          <title>owner
</title>
          <para>Table owner 
<type>string
</type>

  . May contain wildcard characters in 'Dem%'.
</para>
        </refsect2>
        <refsect2>
          <title>table_name
</title>
          <para>Table name 
<type>string
</type>

  . May contain wildcard characters in 'Cust%'.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_sql_primary_keys">
        <title>Return Types
</title>
        <para>As defined in ODBC API for the corresponding catalog call.
</para>
        <para>An array, with one element for each row of the result set.
    Each row is represented as an array with one element for each column.
</para>
      </refsect1>
      <refsect1 xml:id="examples_sql_primary_keys">
        <title>Examples
</title>
        <example xml:id="ex_sql_primary_keys">
          <title>Simple Example
</title>
          <screen>
dbg_obj_print (sql_primary_keys ('Local Virtuoso', 'Demo', NULL, 'Orders'));
-&gt;
(
 ("Demo" "demo" "Orders" "OrderID" 1 "Orders" "Demo" "demo" "Orders" )
)
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_sql_primary_keys">
        <title>See Also
</title>
        <para><link linkend="fn_sql_data_sources"><function>sql_data_sources
</function></link>

  ,

<link linkend="fn_sql_columns"><function>sql_columns
</function></link>

  <link linkend="fn_sql_gettypeinfo"><function>sql_gettypeinfo
</function></link>

  ,
    <link linkend="fn_sql_statistics"><function>sql_statistics</function></link>

  ,
    <link linkend="fn_sql_tables"><function>sql_tables</function></link>

  .</para>
      </refsect1>
    </refentry>
