<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_rdf_restore_metadata">
      <refmeta>
        <refentrytitle>DB.DBA.RDF_RESTORE_METADATA
</refentrytitle>
        <refmiscinfo>rdf
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>DB.DBA.RDF_RESTORE_METADATA
</refname>
        <refpurpose>Restores RDF metadata (descriptions of Linked Data Views and the like) from previously saved backup.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_rdf_restore_metadata">
          <funcprototype xml:id="fproto_rdf_restore_metadata">
            <funcdef>
              <function>DB.DBA.RDF_RESTORE_METADATA
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>read_from_file
</parameter>

   integer
</paramdef>
            <paramdef choice="opt">in 
<parameter>backup_name
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_rdf_restore_metadata">
        <title>Description
</title>
        <para>This restores RDF metadata from specified file or graph in RDF storage.
The file or graph should be previously created by
<link linkend="fn_rdf_backup_metadata"><function>DB.DBA.RDF_BACKUP_METADATA</function>

  ()</link>

  .
It is usually safe to restore metadata from backup made by some previous version of Virtuoso server but
it is good idea to call <link linkend="fn_rdf_audit_metadata"><function>DB.DBA.RDF_AUDIT_METADATA</function>

  ()</link>

   after such restore.
</para>
        <para>When the procedure is executed on the server that continues to serve user requests during the maintenance then SPARQL query compiler may interrupt query compilations or create queries that will return incomplete result sets.
These queries may be cached till the end of metadata update procedure but the cache is flushed when the update is complete, so possible errors will be transient.
If even transient errors are not appropriate then do RDF metadata update with all precautions usual for changing database schema of an application.

</para>
      </refsect1>
      <refsect1 xml:id="params_rdf_restore_metadata">
        <title>Parameters
</title>
        <refsect2>
          <title>read_from_file
</title>
          <para>This flag specifies the type of the origin: it should be nonzero for file, zero for graph.
</para>
        </refsect2>
        <refsect2>
          <title>backup_name
</title>
          <para>Name of backup file or graph as it is returned by the call of

<link linkend="fn_rdf_backup_metadata"><function>DB.DBA.RDF_BACKUP_METADATA
</function>

  ()
</link>

   that created the backup.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_rdf_restore_metadata">
        <title>Return Types
</title>
        <para>The return value is not specified and may be changed in future versions.
</para>
      </refsect1>
      <!--  
<refsect1
xml:id="errors_rdf_restore_metadata">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
  <refsect1
xml:id="examples_rdf_restore_metadata">
    <title>Examples</title>
    <example
xml:id="ex_rdf_restore_metadata"><title></title>
      <para></para>
      <screen><![CDATA[
]]>
</screen>
    </example>
  </refsect1>-->

      <refsect1 xml:id="seealso_rdf_restore_metadata">
        <title>See Also
</title>
        <para>
          <link linkend="fn_rdf_audit_metadata">
            <function>DB.DBA.RDF_AUDIT_METADATA()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_rdf_backup_metadata">
            <function>DB.DBA.RDF_BACKUP_METADATA()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
