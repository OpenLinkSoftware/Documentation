<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_sprintf_iri">
      <refmeta>
        <refentrytitle>sprintf_iri
</refentrytitle>
        <refmiscinfo>string
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>sprintf_iri
</refname>
        <refpurpose>returns a formatted string that is marked as an IRI string.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_sprintf_iri">
          <funcprototype xml:id="fproto_sprintf_iri">
            <funcdef>
              <function>sprintf_iri
</function>
            </funcdef>
            <paramdef choice="opt"><parameter>format
</parameter>

   string
</paramdef>
            <paramdef choice="opt"><parameter>arg_1
</parameter>

   any
</paramdef>
            <paramdef choice="opt">
              <parameter>...
</parameter>
            </paramdef>
            <paramdef choice="opt"><parameter>arg_x
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_26">
        <title>Description
</title>
        <para>sprintf_iri is similar to sprintf and returns a new string formed by "printing" a variable number
    of arguments arg_1 - arg_x according to the format string format. The difference is that the returned string is marked as being IRI string so some applications and clients may distinguish between RDF reference string and RDF literal.

</para>
        <note>
          <para>No matter what is the default server charset or default encoding of host OS, IRI strings are supposed to be in UTF-8 encoding so string arguments to print as well as the format itself are supposed to be UTF-8. Application may use calls of 
<link linkend="fn_charset_recode"><function>charset_recode
</function></link>

   as arguments.
</para>
        </note>
      </refsect1>
      <refsect1 xml:id="examples_sprintf_iri">
        <title>Examples
</title>
        <example xml:id="ex_sprintf_iri">
          <title>Simple Use
</title>
          <screen>
create function job_history(
  in EMPLOYEE_ID integer,
  in START_DATE date) returns varchar
{
return sprintf_iri
('http://demo.openlinksw.com:8890/hr/job_history#%d_%s',
EMPLOYEE_ID, cast (START_DATE as varchar) );
};
</screen>
        </example>
      </refsect1>
    </refentry>
