<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_json_parse">
      <refmeta>
        <refentrytitle>json_parse
</refentrytitle>
        <refmiscinfo>ws
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>json_parse
</refname>
        <refpurpose>Takes json string and returns parse tree.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_json_parse">
          <funcprototype xml:id="fproto_json_parse">
            <funcdef>integer 
<function>json_parse
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>txt
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_json_parse">
        <title>Description
</title>
        <para>This function takes json string and returns parse tree.
</para>
      </refsect1>
      <refsect1 xml:id="params_json_parse">
        <title>Parameters
</title>
        <refsect2>
          <title>txt
</title>
          <para>a json string
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_json_parse">
        <title>Return Types
</title>
        <para>The function returns tree.
</para>
      </refsect1>
      <refsect1 xml:id="examples_atoi_01">
        <title>Examples
</title>
        <example xml:id="ex_atoi_01">
          <title>Simple example
</title>
          <programlisting>
SQL&gt;create procedure json_tree_example ()
{
  declare qr, url, cnt, tree, xt, hdr any;
  cnt := '
{ "head": { "link": [], "vars": ["s", "p", "o"] },
  "results": { "distinct": false, "ordered": true, "bindings": [
    { "s": { "type": "uri", "value": "http://example.org/node" }	, "p": { "type": "uri", "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" }	, "o": { "type": "uri", "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" }},
    { "s": { "type": "uri", "value": "http://example.org/node" }	, "p": { "type": "uri", "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" }	, "o": { "type": "uri", "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" }} ] } }';
  tree := json_parse (cnt);
  tree := get_keyword ('results', tree);
  tree := get_keyword ('bindings', tree);
  return tree[0][1];
}
;

Done. 
SQL&gt; SELECT json_tree_example();
json_tree_example
VARCHAR
 structure
No. of rows in result: 1 
</programlisting>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_json_parse">
        <title>See Also
</title>
        <para><link linkend="fn_http"><function>http
</function></link>

  ,
      <link linkend="fn_http_value"><function>http_value</function></link>

  ,
      <link linkend="fn_http_url"><function>http_url</function></link>

  ,
      <link linkend="fn_string_output"><function>string_output</function></link>

  ,
      <link linkend="fn_http_rewrite"><function>http_rewrite</function></link>

  ,
    </para>
      </refsect1>
    </refentry>
