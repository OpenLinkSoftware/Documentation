<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xmlinsertafter">
      <refmeta>
        <refentrytitle>XMLInsertAfter
</refentrytitle>
        <refmiscinfo>xml
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>XMLInsertAfter
</refname>
        <refpurpose>Modify an XML document by inserting new children after the node specified by given entity.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xmlinsertafter">
          <funcprototype xml:id="fproto_xmlinsertafter">
            <funcdef>
              <function>XMLInsertAfter
</function>
            </funcdef>
            <paramdef choice="opt">inout 
<parameter>source
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>insertion1
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>insertion2
</parameter>

   any
</paramdef>
            <paramdef choice="opt">
              <parameter>...
</parameter>
            </paramdef>
            <paramdef choice="opt">in 
<parameter>insertionN
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xmlinsertafter">
        <title>Description
</title>
        <para>The function modifies the XML document of the given 
<parameter>source
</parameter>

   XML tree entity by adding new siblings to
the node specified by the entity. Siblings will be added right after the node.
The <parameter>source</parameter>

   entity should be XML tree entity, not "persistent XML" entity.
The value of <parameter>source</parameter>

   should be a node entity;
<parameter>source</parameter>

   can not be an attribute entity or a root entity.
</para>
        <para>
The values passed in parameters <parameter>insertion1</parameter>

  ... <parameter>insertionN</parameter>

   will be converted into
XML nodes according to rules described in section <link linkend="xmldomtypecasting">Composing Document Fragments From DOM Function Arguments.</link>

</para>
        <para>
After calling the function, parameter <parameter>source</parameter>

   is still a valid XML entity that points to the same node.
The value passed as <parameter>source</parameter>

   can be used in the rest of caller procedure.

</para>
      </refsect1>
      <refsect1 xml:id="params_xmlinsertafter">
        <title>Parameters
</title>
        <refsect2>
          <title>source
</title>
          <para>The XML tree entity whose document should be modified.
This document should not be locked (see <link linkend="xmldom">Changing XML Entities in DOM Style</link>

   for details).

</para>
        </refsect2>
        <refsect2>
          <title>parameterI
</title>
          <para>The value to be added as as child node of 
<parameter>source
</parameter>

  .
      </para>
        </refsect2>
      </refsect1>
      <!--  
  <refsect1
xml:id="errors_xmlinsertafter">
    <title>Errors</title>

< ! - - In case of non-function-specific errors, i.e. only common
     parameter errors are signalled, comment out the table below 
     otherwise add the unique error values as individual errorcodes - - >

    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
-->

      <refsect1 xml:id="examples_xmlinsertafter">
        <title>Examples
</title>
        <example xml:id="ex_xmlinsertafter">
          <title>XMLInsertBefore in a Virtuoso/PL procedure
</title>
          <para>The sample procedure contains two calls of 
<function>XMLInsertAfter
</function>

  .
First call insert two new element nodes just after the given node; second call demonstrates how text nodes can be merged.</para>
          <screen>
create procedure XMLInsertAfter_demo()
{
  declare DESCRIPTION varchar (40);
  declare ENTITY, ent any;
  result_names (DESCRIPTION, ENTITY);
  result ('EXAMPLE1', 'Plain inserting of some children');
  ent := xpath_eval ('//child0', xtree_doc ('&lt;a&gt;&lt;child0&gt;&lt;/child0&gt;&lt;/a&gt;'));
  result ('The document to modify', xpath_eval ('/', ent));
  result ('The place of insertion', ent);
  XMLInsertAfter (ent, xtree_doc ('&lt;child1/&gt;'), xtree_doc ('&lt;child2/&gt;'));
  result ('The changed document', xpath_eval ('/', ent));
  result ('The original node is updated', ent);
  result ('EXAMPLE2', 'Appending that cause concatenation of text nodes');
  ent := xpath_eval ('//b/text()', xtree_doc ('&lt;a&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;/a&gt;'));
  result ('The document to modify', xpath_eval ('/', ent));
  result ('The place of insertion', ent);
  XMLInsertAfter (ent, ', world!');
  result ('The changed document', xpath_eval ('/', ent));
  result ('The original node is updated', ent);
}

Done. -- 00000 msec.

XMLInsertAfter_demo()
DESCRIPTION                               ENTITY
VARCHAR                                   VARCHAR
_______________________________________________________________________________

EXAMPLE1                                  Plain inserting of some children
The document to modify                    &lt;a&gt;&lt;child0 /&gt;&lt;/a&gt;
The place of insertion                    &lt;child0 /&gt;
The changed document                      &lt;a&gt;&lt;child0 /&gt;&lt;child1 /&gt;&lt;child2 /&gt;&lt;/a&gt;
The original node is updated              &lt;child0 /&gt;
EXAMPLE2                                  Appending that cause concatenation of text nodes
The document to modify                    &lt;a&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;/a&gt;
The place of insertion                    Hello
The changed document                      &lt;a&gt;&lt;b&gt;Hello, world!&lt;/b&gt;&lt;/a&gt;
The original node is updated              Hello, world!

10 Rows. -- 00000 msec.
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xmlinsertafter">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xmlreplace">
            <function>XMLReplace
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xmladdattribute">
            <function>XMLAddAttribute
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xmlappendchildren">
            <function>XMLAppendChildren
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xmlinsertbefore">
            <function>XMLInsertBefore
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
