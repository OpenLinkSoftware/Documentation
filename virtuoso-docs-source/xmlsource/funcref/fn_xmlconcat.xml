<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xmlconcat">
      <refmeta>
        <refentrytitle>XMLCONCAT
</refentrytitle>
        <refmiscinfo>xml
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>XMLCONCAT
</refname>
        <refpurpose>Creates a forest of elements by concatenating a list of XML values
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xmlconcat">
          <funcprototype xml:id="fproto_xmlconcat">
            <funcdef>
              <function>XMLCONCAT
</function>
            </funcdef>
            <paramdef choice="opt"><parameter>value_expr1
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt"><parameter>value_expr2
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">
              <parameter>...
</parameter>
            </paramdef>
            <paramdef choice="opt"><parameter>value_exprN
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xmlconcat">
        <title>Description
</title>
        <para><function>XMLCONCAT
</function>

   accepts a list of XML value expressions as its arguments, and produces a forest of elements by
   concatenating the XML values that are returned from the same row to make one value.
   <function>XMLCONCAT</function>

   works like <function>XMLFOREST</function>

  ,
   except that <function>XMLCONCAT</function>

   parameters is a list of XML elements.
    Null expressions are dropped from the result. If all the value expressions are null, then the function returns NULL.

</para>
      </refsect1>
      <refsect1 xml:id="xmlconcat">
        <title>Parameters
</title>
        <refsect2>
          <title>value_expr1
</title>
          <para>a vector returned by 
<function>XMLELEMENT
</function>

  , 
<function>XMLFOREST
</function>

  ,
           or <function>XMLCONCAT</function>

   functions, or an entity object returned by
      corresponding functions (e.g. <function>xtree_doc</function>

  , <function>xquery_eval</function>

   or <function>path_eval</function>

  ).
     In the latter case the entity object must not be an attribute.

</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="errors_xmlconcat">
        <title>Errors
</title>
        <table>
          <title>Errors signalled by 
<function>XMLCONCAT
</function>

</title>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>SQLState
</entry>
                <entry>Error Code
</entry>
                <entry>Error Text
</entry>
                <entry>Description
</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <errorcode>22003
</errorcode>
                </entry>
                <entry>
                  <errorcode>SR355
</errorcode>
                </entry>
                <entry>
                  <errortext>Too few arguments for XMLCONCAT
</errortext>
                </entry>
                <entry>There must be at least one argument
</entry>
              </row>
              <row>
                <entry>
                  <errorcode>22003
</errorcode>
                </entry>
                <entry>
                  <errorcode>SR359
</errorcode>
                </entry>
                <entry>Invalid argument type NVARCHAR (225) for arg N to XMLCONCAT
</entry>
                <entry>The entity object returned by 
<function>xpath_eval
</function>

   must not be an attribute
</entry>
              </row>
              <row>
                <entry>
                  <errorcode>22003
</errorcode>
                </entry>
                <entry>
                  <errorcode>SR360
</errorcode>
                </entry>
                <entry>XMLCONCAT doesn't concatenate attributes
</entry>
                <entry>The entity object returned by 
<function>xquery_eval
</function>

   must not be an attribute
</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </refsect1>
      <refsect1 xml:id="xmlconcat_01">
        <title>Examples
</title>
        <example xml:id="ex_xmlconcat">
          <title>XMLCONCAT() with two parameters
</title>
          <para>
The following example produces an XML elements for the 'FName', 'LName', 'country' and
'nationality', concatenates the result, and creates a one-column result set:
</para>
          <screen>
select XMLCONCAT (
        XMLELEMENT ('FName', "FirstName"),
        XMLELEMENT ('LName', "LastName"),
        xquery_eval('//country', xtree_doc('&lt;a&gt;&lt;country&gt;USA&lt;/country&gt;&lt;/a&gt;')),
        xpath_eval('//nationality', xtree_doc('&lt;a&gt;&lt;nationality&gt;RUSSIAN&lt;/nationality&gt;&lt;/a&gt;')))
from "Demo"."demo"."Employees";

callret
VARCHAR
_______________________________________________________________________________
&lt;FName&gt;Nancy&lt;/FName&gt;&lt;LName&gt;Davolio&lt;/LName&gt;&lt;country&gt;USA&lt;/country&gt;&lt;nationality&gt;RUSSIAN&lt;/nationality&gt;
&lt;FName&gt;Andrew&lt;/FName&gt;&lt;LName&gt;Fuller&lt;/LName&gt;&lt;country&gt;USA&lt;/country&gt;&lt;nationality&gt;RUSSIAN&lt;/nationality&gt;

. . .

&lt;FName&gt;Anne&lt;/FName&gt;&lt;LName&gt;Dodsworth&lt;/LName&gt;&lt;country&gt;USA&lt;/country&gt;&lt;nationality&gt;RUSSIAN&lt;/nationality&gt;
9 Rows.

</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xmlconcat">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xmlagg">XMLAGG()
</link>
        </para>
        <para>
          <link linkend="fn_xmlattributes">XMLATTRIBUTES()
</link>
        </para>
        <para>
          <link linkend="fn_xmlelement">XMLELEMENT()
</link>
        </para>
        <para>
          <link linkend="fn_xmlforest">XMLFOREST()
</link>
        </para>
      </refsect1>
    </refentry>
