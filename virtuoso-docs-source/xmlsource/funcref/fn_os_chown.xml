<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_os_chown">
      <refmeta>
        <refentrytitle>os_chown
</refentrytitle>
        <refmiscinfo>file
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>os_chown
</refname>
        <refpurpose>changes the owning group/user of a file
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_os_chown">
          <funcprototype xml:id="fproto_os_chown">
            <funcdef>
              <function>os_chown
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>path
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>username
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>groupname
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_os_chown">
        <title>Description
</title>
        <para>This function requires dba privileges.
</para>
        <para><function>os_chown
</function>

   set the owning user/group of an OS file
	    by calling the system function chown() with the arguments supplied.</para>
        <para>Not all the host OSes support the concept of owner users and groups.
	    That's why the function will not throw an SQL error if it fails.</para>
        <para>It will return DB NULL value when the function was executed successfully
	    and the error message as a string if it failed.</para>
        <para>The function first looks up the user and group name supplied into the
	    OS database to get the user and group IDs. it then calls the system function
	    chown().</para>
        <para>The DirsAllowed and DirsDenied lists in Parameters section of the
	    virtuoso configuration file (virtuoso.ini by default) are used to control
	    disk access. 
</para>
      </refsect1>
      <refsect1 xml:id="params_04">
        <title>Parameters
</title>
        <refsect2>
          <title>path
</title>
          <para><type>varchar
</type>

   relative path.
</para>
        </refsect2>
        <refsect2>
          <title>username
</title>
          <para><type>varchar
</type>

   the name of the OS user to own the file.
</para>
        </refsect2>
        <refsect2>
          <title>groupname
</title>
          <para><type>varchar
</type>

   the name of the OS group to own the file.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="examples_04">
        <title>Examples
</title>
        <example xml:id="ex_os_chown">
          <title>Simple example
</title>
          <para>Sets the ownership of the virtuoso INI file to virtuoso user and group
</para>
          <screen>
SQL&gt;select os_chown (virtuoso_ini_path(), 'virtuoso', 'virtuoso');
callret
VARCHAR
_______________________________________________________________________________

NULL

</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_08">
        <title>See Also
</title>
        <para>
          <link linkend="fn_file_delete">
            <function>file_delete
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_file_stat">
            <function>file_stat
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_os_chown">
            <function>os_chown
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_virtuoso_ini_path">
            <function>virtuoso_ini_path
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
