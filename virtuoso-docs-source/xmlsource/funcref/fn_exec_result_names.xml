<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_exec_result_names">
      <refmeta>
        <refentrytitle>exec_result_names
</refentrytitle>
        <refmiscinfo>sql
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>exec_result_names
</refname>
        <refpurpose>Supplies column details for procedure result set output.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_exec_result_names">
          <funcprototype xml:id="fproto_exec_result_names">
            <funcdef>
              <function>exec_result_names
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>res_names_array
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_exec_result_names">
        <title>Description
</title>
        <para>This function allows you to define the column details for result sets returned by procedures, in particular for use with the 
<function>exec()
</function>

   function.  This function 
is similar to 
<function>result_names()
</function>

  .
</para>
      </refsect1>
      <refsect1 xml:id="params_exec_result_names">
        <title>Parameters
</title>
        <refsect2>
          <title>res_names_array
</title>
          <para>This parameter can be one of two things:
</para>
          <simplelist type="vert">
            <member>a vector of strings (like vector('cola', 'colbb')).  
When used that way it makes columns named 'cola' and 'colb' with type ANY and 
precision 256</member>
            <member>an array with the same format as the 0th element of the metadata 
returned by <function>exec()</function>

   and <function>rexec()</function>

  , 
which contains all the type information and can be used directly.
</member>
          </simplelist>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_exec_result_names">
        <title>Return Types
</title>
        <para>None.
</para>
      </refsect1>
      <!--
  <refsect1
xml:id="errors_exec_result_names">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
-->

      <refsect1 xml:id="examples_exec_result_names">
        <title>Examples
</title>
        <example xml:id="ex_exec_result_names_01">
          <title>Result set column names
</title>
          <para>The procedure below uses the metadata from exec() to generate result set column names.
</para>
          <screen>
create procedure XX1 ()
{
  declare meta, _dt any;
  declare inx integer;
  exec ('select U_ID, U_NAME from SYS_USERS', null, null, null, 0, meta, _dt);
  inx := 0;

  exec_result_names (meta[0]);
  while (inx &lt; length (_dt))
    {
      exec_result (_dt[inx]);
      inx := inx + 1;
    }
};
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_exec_result_names">
        <title>See Also
</title>
        <para>
          <link linkend="fn_exec">
            <function>exec()
</function>
          </link>
        </para>
        <para>
          <function>rexec()
</function>
        </para>
        <para>
          <link linkend="fn_exec_result">
            <function>exec_result()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
