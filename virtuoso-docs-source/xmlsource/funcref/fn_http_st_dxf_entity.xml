<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_http_st_dxf_entity">
      <refmeta>
        <refentrytitle>http_st_dxf_entity
</refentrytitle>
        <refmiscinfo>geo
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>http_st_dxf_entity
</refname>
        <refpurpose>writes a DXF (Data Exchange Format) representation of shape into the given output session.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_http_st_dxf_entity">
          <funcprototype xml:id="fproto_http_st_dxf_entity">
            <funcdef>
              <function>http_st_dxf_entity
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>shape
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>attrs
</parameter>

   vector
</paramdef>
            <paramdef choice="opt">in 
<parameter>sess
</parameter>

    any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_http_st_dxf_entity">
        <title>Description
</title>
        <para>This function writes a DXF (Data Exchange Format) representation of shape into the given output session.
</para>
      </refsect1>
      <refsect1 xml:id="params_http_st_dxf_entity">
        <title>Parameters
</title>
        <refsect2>
          <title>shape
</title>
          <para>If shape is null, the function returns without writing anything to the shape. 
</para>
        </refsect2>
        <refsect2>
          <title>attrs
</title>
          <para>vector of arbitrary DXF properties in form (tag1, value1, tag2, value2...)
    where tags are integer codes according to DXF specification; related values are not validated and are printed
    to the session as-is. Current version does not support ARCSTRINGs, CURVEs, nor CURVEPOLYGONs.
</para>
        </refsect2>
        <refsect2>
          <title>sess
</title>
          <para>Output session.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="examples_http_st_dxf_entity">
        <title>Examples
</title>
        <example xml:id="ex_http_st_dxf_entity">
          <title>Simple example
</title>
          <screen>
create procedure Example_http_st_dxf_entity ()
{
  declare ses, ctx any;
  ses := string_output ();

  for (select a1, deserialize (Example_GEOM) as geom from Demo.Demo."Example_Countries") do
    http_st_dxf_entity (geom, vector (62, 0)), ses);
  string_to_file ('examples/Example_http_st_dxf_entity.dxf', ses, -2);
}
;
</screen>
        </example>
      </refsect1>
      <!--refsect1
xml:id="seealso_http_st_dxf_entity">
    <title>See Also</title>
    <para><link linkend="fn_xxx"><function>XXX()</function></link></para>
  </refsect1-->

    </refentry>
