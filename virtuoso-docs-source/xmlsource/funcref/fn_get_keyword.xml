<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_get_keyword">
      <refmeta>
        <refentrytitle>get_keyword
</refentrytitle>
        <refmiscinfo>array
</refmiscinfo>
        <refmiscinfo>ws
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>get_keyword
</refname>
        <refpurpose>Find a value in keyword vector
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_get_keyword">
          <funcprototype xml:id="fproto_get_keyword">
            <funcdef>
              <function>get_keyword
</function>
            </funcdef>
            <paramdef choice="opt"><parameter>keyword
</parameter>

   any
</paramdef>
            <paramdef choice="opt"><parameter>searched_array
</parameter>

   vector
</paramdef>
            <paramdef choice="opt"><parameter>default
</parameter>

   any
</paramdef>
            <paramdef choice="opt"><parameter>no_copy
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_get_keyword">
        <title>Description
</title>
        <para><function>get_keyword
</function>

   performs a case sensitive seek
    for the occurrence of
    <parameter>keyword</parameter>

   from each even position of
    <parameter>searched_array</parameter>

  . If found,this   returns the
 element following the occurrence of the keyword.
    If the keyword is not found this returns the default argument or NULL if the default is
    not supplied.
</para>
      </refsect1>
      <refsect1 xml:id="params_get_keyword">
        <title>Parameters
</title>
        <refsect2>
          <title>keyword
</title>
          <para>String key value to be searched in the searched_array at
      even positions.
</para>
        </refsect2>
        <refsect2>
          <title>searched_array
</title>
          <para>An array of even length to be searched.
      Each even position is a string to search. Each odd position
      can be any value that may then be returned.
</para>
        </refsect2>
        <refsect2>
          <title>default
</title>
          <para>Any data to be returned if keyword is not matched in
      the searched_array.
</para>
        </refsect2>
        <refsect2>
          <title>no_copy
</title>
          <para>By default no_copy is false (0). If passed as true (non-zero integer)
      then the element to return is the original content of the array and the place
      in the array from which the element came gets set to 0.</para>
          <para>
This must in some cases  be true, for example when the data being retrieved is
not copyable, as in the case of a string output.  While the default behavior is to
return a copy of the element get_keyword will return the element itself and then
set the place from which the element was retrieved to 0 if this argument is true.

</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="errors_get_keyword">
        <title>Errors
</title>
        <para>
          <link linkend="datatypeerror">Parameter data type checking errors
</link>
        </para>
        <table>
          <title>Errors signalled by 
<function>openxml
</function>

</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>SQL Code
</entry>
                <entry>Error Message
</entry>
                <entry>Virtuoso Code
</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <errorcode>22023
</errorcode>
                </entry>
                <entry>get_keyword expects a vector of even length,
	    not of length &lt;n&gt;
</entry>
                <entry>SR057
</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </refsect1>
      <refsect1 xml:id="ret_get_keyword">
        <title>Return Values
</title>
        <para><function>get_keyword
</function>

   returns the matched data if it
    is found. Otherwise it returns the <parameter>default</parameter>

  .
    When no 
<parameter>default
</parameter>

   is defined, NULL is returned.
</para>
      </refsect1>
      <refsect1 xml:id="examples_get_keyword">
        <title>Examples
</title>
        <example xml:id="ex_get_keyword">
          <title>Sample calls
</title>
          <programlisting>get_keyword(2,vector(1,'primero',2,'segundo',
	3,'tercero'),NULL)		-&gt; segundo
get_keyword('tercero',vector('primero',1,'segundo',
	2,'tercero',3), 'NOT FOUND!'))	-&gt; 3

x := vector ('a', 2);
y := get_keyword ('a', x, -1, 1);
The first call returns 2
y := get_keyword ('a', x, -1, 1);
the second call returns 0 as the data was set to 0 by the previous call.

</programlisting>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_get_keyword">
        <title>See Also
</title>
        <para>
          <link linkend="fn_get_keyword_ucase">get_keyword_ucase
</link>
        </para>
      </refsect1>
    </refentry>
