<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_group_digest">
      <refmeta>
        <refentrytitle>DB.DBA.GROUP_DIGEST
</refentrytitle>
        <refmiscinfo>rdf
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>DB.DBA.GROUP_DIGEST
</refname>
        <refpurpose>returns an arbitrary value from the multiset passed to it.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_group_digest">
          <funcprototype xml:id="fproto_group_digest">
            <funcdef>
              <function>DB.DBA.GROUP_DIGEST
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>token
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>delim
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>maxlen
</parameter>

   integer
</paramdef>
            <paramdef choice="opt">in 
<parameter>mode
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_group_digest">
        <title>Description
</title>
        <para>DB.DBA.GROUP_DIGEST is aggregate function that performs a string concatenation across
    	the values of an expression with a group. The order of the strings is not specified.
    	The separator character used in the concatenation may be given with the scalar
    	argument delimiter. The function is an extended version of sql:GROUP_CONCAT(), with
    	two more arguments: maxlen and mode.</para>
        <para>Note: the "sql:" prefix is mandatory when this aggregate is used in SPARQL queries.
    	In SQL queries the prefix is "DB.DBA".

</para>
      </refsect1>
      <refsect1 xml:id="params_group_digest">
        <title>Parameters
</title>
        <refsect2>
          <title>token
</title>
          <para>An item that should be added to a delimited list.
</para>
        </refsect2>
        <refsect2>
          <title>delim
</title>
          <para>The delimeter character to be used in the concatenation.
</para>
        </refsect2>
        <refsect2>
          <title>maxlen
</title>
          <para>The maximal allowed length of the result, in characters. Redundant values will be ignored.
      If the last value does not fit in the "maxlen" entirely, then it can be truncated and "..." is
      placed at the end of the resulting string.
</para>
        </refsect2>
        <refsect2>
          <title>mode
</title>
          <para>Bitmask of properties. Right now only bit 1 is used and others are reserved. If the value
      of the argument is 1 then duplicate values are ignored; value 0 will put duplicate values like
      in case of sql:GROUP_CONCAT ().
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_group_digest">
        <title>Return Types
</title>
        <para>any
</para>
      </refsect1>
      <refsect1 xml:id="examples_group_digest">
        <title>Examples
</title>
        <example xml:id="ex_group_digest">
          <title>Get all ?assets as a list with delimiters.
</title>
          <programlisting>
SQL&gt;SPARQL
SELECT ?view (sql:GROUP_DIGEST (?path, ' ', 1000, 1)) as ?path_list
    (sql:GROUP_DIGEST (?asset, ' ', 1000, 1)) as ?asset_list
FROM &lt;http://mygraph.com&gt;
WHERE
  {
    ?view &lt;viewPath&gt; ?path ;
      &lt;viewContent&gt; ?asset ;
      &lt;viewType&gt;  'phyview'.
  };
</programlisting>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_group_digest">
        <title>See Also
</title>
        <para>
          <link linkend="fn_sample">
            <function>DB.DBA.SAMPLE
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_group_concat">
            <function>DB.DBA.GROUP_CONCAT
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_group_concat_distinct">
            <function>DB.DBA.GROUP_CONCAT_DISTINCT
</function>
          </link>
        </para>
        <para>
          <link linkend="samplegroupconcatdigest">Differences between DB.DBA.SAMPLE, DB.DBA.GROUP_CONCAT and
    DB.DBA.GROUP_DIGEST functions usage.</link>
        </para>
      </refsect1>
    </refentry>
