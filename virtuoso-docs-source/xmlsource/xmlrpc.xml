<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="xmlrpc">
      <title>XML-RPC support</title>
      <para>The XML-RPC is a remote procedure calling system via
HTTP using XML as the encoding. It is very much like the SOAP protocol,
but the data encoding rules are different.
XML-RPC supports fewer data types than SOAP. The data is self-describing and
position bound. </para>
      <para>The Virtuoso SOAP server can process XML-RPC requests using the
XML-RPC to SOAP bridge. This is done with two filters : input and output filter.
The input filter transforms XML-RPC into a SOAP PRC encoded message.  Then the
transformed message is passed to the SOAP server for processing.
The response from the SOAP server will be re-coded into XML-RPC format in the
output filter. The combination of these filters constitutes the bridge.</para>
      <para>It is important to remember that XML-RPC defines two complex
types : array and structure. These two types are represented by vector () and
soap-structure respectively, when passing the data to the PL procedure in question.</para>
      <example xml:id="ex_xmlrpc">
        <title>XML-RPC Procedure Definition</title>
        <para>An example of a PL procedure representing an
XML-RPC method "echoXRtypes" is:</para>
        <programlisting>
create procedure echoXRtypes (
                                in  inInteger 	integer,
                                in  inString 	varchar,
                                in  inDate 	datetime,
                                in  inDouble 	double precision,
				in  inBoolean 	smallint,
				in  inHex 	varchar,
                                out outInteger 	integer,
                                out outString 	varchar,
                                out outDate 	datetime,
                                out outDouble 	double precision,
				out outBoolean 	smallint,
				out outHex 	varchar __soap_type 'http://www.w3.org/2001/XMLSchema:base64Binary'
 			    )
{
    outInteger  := inInteger 	;
    outString 	:= inString 	;
    outDate 	:= inDate 	;
    outDouble 	:= inDouble 	;
    outBoolean 	:= soap_boolean (inBoolean);
    outHex 	:= inHex 	;
}
;
</programlisting>
        <para>Note that the definition of such procedures does not differ from those
of SOAP procedures.</para>
        <para>An XML-RPC request may look like:</para>
        <programlisting>
&lt;?xml version="1.0"?&gt;
&lt;methodCall&gt;
&lt;methodName&gt;echoXRtypes&lt;/methodName&gt;
&lt;params&gt;
  &lt;param&gt; &lt;value&gt;&lt;i4&gt;42&lt;/i4&gt;&lt;/value&gt; &lt;/param&gt;
  &lt;param&gt; &lt;value&gt;String&lt;/value&gt; &lt;/param&gt;
  &lt;param&gt; &lt;value&gt;&lt;dateTime.iso8601&gt;1998-07-17T14:08:55&lt;/dateTime.iso8601&gt;&lt;/value&gt; &lt;/param&gt;
  &lt;param&gt; &lt;value&gt;&lt;double&gt;1234.567&lt;/double&gt;&lt;/value&gt; &lt;/param&gt;
  &lt;param&gt; &lt;value&gt;&lt;boolean&gt;1&lt;/boolean&gt;&lt;/value&gt; &lt;/param&gt;
  &lt;param&gt; &lt;value&gt;&lt;base64&gt;eW91IGNhbid0IHJlYWQgdGhpcyE=&lt;/base64&gt;&lt;/value&gt; &lt;/param&gt;
&lt;/params&gt;
&lt;/methodCall&gt;
</programlisting>
        <para>The response for the above message will be :</para>
        <programlisting>
&lt;?xml version="1.0" encoding="ISO-8859-1" ?&gt;
&lt;methodResponse&gt;
&lt;params&gt;
&lt;param&gt; &lt;value&gt; &lt;i4&gt;42&lt;/i4&gt; &lt;/value&gt; &lt;/param&gt;
&lt;param&gt; &lt;value&gt; &lt;string&gt;String&lt;/string&gt; &lt;/value&gt; &lt;/param&gt;
&lt;param&gt; &lt;value&gt; &lt;dateTime.iso8601&gt;1998-07-17T14:08:55.000+03:00&lt;/dateTime.iso8601&gt; &lt;/value&gt; &lt;/param&gt;
&lt;param&gt; &lt;value&gt; &lt;double&gt;1234.567000&lt;/double&gt; &lt;/value&gt; &lt;/param&gt;
&lt;param&gt; &lt;value&gt; &lt;boolean&gt;1&lt;/boolean&gt; &lt;/value&gt; &lt;/param&gt;
&lt;param&gt; &lt;value&gt; &lt;base64&gt;eW91IGNhbid0IHJlYWQgdGhpcyE=&lt;/base64&gt; &lt;/value&gt; &lt;/param&gt;
&lt;/params&gt;
&lt;/methodResponse&gt;
</programlisting>
      </example>
      <para>Enabling the XML-RPC -&gt; SOAP bridge is very simple.  You make a
virtual directory with physical location pointing to /SOAP/ and specify the 'XML-RPC'
SOAP option as 'yes'.  The following methods are available:
</para>
      <orderedlist>
        <listitem>
          <formalpara>
            <title>Virtual Directories Visual Administration Interface
</title>
            <para>From the main administration menu go to
  <computeroutput>Web Servers -&gt; Virtual Directories</computeroutput>

   and add
  or configure a virtual directory.  For the directory definition add a new option in
  SOAP options box: "
<computeroutput>XML-RPC=yes;
</computeroutput>

  ".
</para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>The vhost_define() Function
</title>
            <para>Using the ISQL utility one can use the command:
</para>
          </formalpara>
          <programlisting>
SQL&gt; vhost_define (lpath=&gt;'/RPC2', ppath=&gt;'/SOAP/', soap_user=&gt;'dba',
    soap_opts=&gt;vector ('XML-RPC', 'yes'));
</programlisting>
        </listitem>
      </orderedlist>
      <note>
        <title>Note:
</title>
        <para>Virtual directories configured in this way can only be used for
  XML-RPC calls. If you need to make SOAP requests, then another virtual
  directory will be required.</para>
      </note>
    </section>
