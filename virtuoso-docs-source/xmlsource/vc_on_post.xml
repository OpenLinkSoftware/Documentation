<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="vc_on_post">
          <refmeta>
            <refentrytitle>on-post</refentrytitle>
            <refmiscinfo>vspx_control</refmiscinfo>
          </refmeta>
          <refnamediv>
            <refname>on-post</refname>
            <refpurpose>Container for code that should be executed when the element gets a post.</refpurpose>
          </refnamediv>
          <refsynopsisdiv>
            <funcsynopsis xml:id="vc_syn_on_post">
              <funcprototype xml:id="vc_proto_on_post">
                <funcdef>
            &lt;<function>on-post</function>

  &gt;(EventHandler)&lt;/<function>on-post</function>

  &gt;</funcdef>
                <paramdef choice="opt"/>
              </funcprototype>
            </funcsynopsis>
          </refsynopsisdiv>
          <refsect1 xml:id="vc_desc_on_post">
            <title>Description</title>
            <para>
The code contained in this element is executed when the element gets a post.
For fields and forms, this is a context for an a SQL compound statement that will be executed.
The statement should end with a return 1 or 0.  The implicit return is 0.  A return of 1 means that the post is fully handled here and not to be passed on to the parent chain.
A 0 means that the post was not handled and the next control up the chain will try.
</para>
            <para>
The context has a self which is the page, a vspx_control which is the control which defines this handler, and a origin_control, which is the control that first got the post event.  This will be a data field or button.  The vspx_event with the post's data will be in the variable event.
</para>
            <para>
The interpretation of the return value is the same for other event handlers.  SQL
conditions signalled will go to the page, these condition handlers are
invoked in no special context, hence the declare handler for SQL
construct should not be used to pass control between handlers, but only
within handlers.
</para>
          </refsect1>
        </refentry>
