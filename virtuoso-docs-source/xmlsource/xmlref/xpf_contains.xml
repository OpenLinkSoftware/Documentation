<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="xpf_contains">
      <refmeta>
        <refentrytitle>contains
</refentrytitle>
        <refmiscinfo>XPATH
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>contains
</refname>
        <refpurpose>Returns true if the first argument string contains the second argument string, and otherwise returns false.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="xpf_syn_contains">
          <funcprototype xml:id="xpf_proto_contains">
            <funcdef>boolean 
<function>contains
</function>

</funcdef>
            <paramdef choice="opt"><parameter>haystack
</parameter>

   string
</paramdef>
            <paramdef choice="opt"><parameter>needle
</parameter>

   string
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="xpf_desc_contains">
        <title>Description
</title>
        <para>
For two given strings, this function checks if the first string contains the second string.
If any argument is not a string, it is converted to string using rules from string() XPATH function.
Thus if the second argument has no string value, the function returns true, because it will
be converted to an empty string first.
</para>
      </refsect1>
      <refsect1 xml:id="xpf_params_contains">
        <title>Parameters
</title>
        <refsect2>
          <title>haystack
</title>
          <para>String where the search is performed
</para>
        </refsect2>
        <refsect2>
          <title>needle
</title>
          <para>String to search
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="xpf_ret_contains">
        <title>Return Types
</title>
        <para>Boolean
</para>
      </refsect1>
      <refsect1 xml:id="xpf_examples_contains">
        <title>Examples
</title>
        <example xml:id="xpf_ex_contains">
          <title> 
  </title>
          <screen>contains ('OpenLink Virtuoso', 'Link')
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="xpf_seealso_contains">
        <title>See Also
</title>
        <para>
          <link linkend="xpf_string">string()
</link>
          <link linkend="xpf_starts_with">starts-with()
</link>
          <link linkend="xpf_ends_with">ends-with()
</link>
        </para>
      </refsect1>
    </refentry>
