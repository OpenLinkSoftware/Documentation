<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="xpf_serialize">
      <refmeta>
        <refentrytitle>serialize
</refentrytitle>
        <refmiscinfo>XPATH
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>serialize
</refname>
        <refpurpose>Serializes a value of its argument following the rules of the host RDBMS.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="xpf_syn_serialize">
          <funcprototype xml:id="xpf_proto_serialize">
            <funcdef>string 
<function>serialize
</function>

</funcdef>
            <paramdef choice="opt"><parameter>obj
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="xpf_desc_serialize">
        <title>Description
</title>
        <para>The serialize() function converts an object to a string as follows:
</para>
        <itemizedlist mark="bullet" spacing="compact">
          <listitem>
            <para>An empty sequence is converted to an empty string.
</para>
          </listitem>
          <listitem>
            <para>
A nonempty node-set is converted to a string by serialization of its first node.</para>
          </listitem>
          <listitem>
            <para>
A non-attribute XML entity is serialized as if it is serialized by http() function.
In other words, the result is a plain text of XML syntax.
For an attribute XML entity, the value of attribute is returned.
</para>
          </listitem>
          <listitem>
            <para>Values of other types are converted into strings as cast(... as varchar) do this in Virtuoso/PL, exactly.
</para>
          </listitem>
        </itemizedlist>
        <para>If the argument is omitted, context node is converted instead as if it is a node-set of one element.
</para>
      </refsect1>
      <refsect1 xml:id="xpf_params_serialize">
        <title>Parameters
</title>
        <refsect2>
          <title>obj
</title>
          <para>Value to be converted into the string
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="xpf_ret_serialize">
        <title>Return Types
</title>
        <para>String
</para>
      </refsect1>
      <refsect1 xml:id="xpf_errors_serialize">
        <title>Errors
</title>
        <para>
</para>
        <!--    
<table>
<title>Errors signalled by
</title>
      <tgroup cols="4">

<thead>
<row>
<entry>SQLState
</entry>
<entry>Error Code
</entry>
<entry>Error Text
</entry>
<entry>Description
</entry>
</row>
</thead>
	<tbody>
	  <row>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorcode></errorcode></entry>
	    <entry><errortext></errortext></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table> -->

      </refsect1>
      <refsect1 xml:id="xpf_examples_serialize">
        <title>Examples
</title>
        <example xml:id="xpf_ex_serialize">
          <title> 
  </title>
          <para> 
  </para>
          <screen>string(//title)
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="xpf_seealso_serialize">
        <title>See Also
</title>
        <para>
          <link linkend="xpf_format_number">format_number()
</link>
        </para>
        <para>
          <link linkend="xpf_serialize">serialize()
</link>
        </para>
        <para>
          <link linkend="xpf_concat">concat()
</link>
        </para>
      </refsect1>
    </refentry>
