<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="xpf_shallow">
      <refmeta>
        <refentrytitle>shallow
</refentrytitle>
        <refmiscinfo>XPATH
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>shallow
</refname>
        <refpurpose>Returns a shallow copy of the given XML entity
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="xpf_syn_shallow">
          <funcprototype xml:id="xpf_proto_shallow">
            <funcdef>entity 
<function>shallow
</function>

</funcdef>
            <paramdef choice="opt"><parameter>ent
</parameter>

   entity
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="xpf_desc_shallow">
        <title>Description
</title>
        <para>
The function returns a shallow copy of the given XML entity, i.e. a root of a new document that consists of
only one node that is a copy of the given entity but have no children.

</para>
      </refsect1>
      <refsect1 xml:id="xpf_params_shallow">
        <title>Parameters
</title>
        <refsect2>
          <title>ent
</title>
          <para>The XML entity to copy
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="xpf_ret_shallow">
        <title>Return Types
</title>
        <para>The function returns an XML entity.
</para>
      </refsect1>
      <refsect1 xml:id="xpf_errors_shallow">
        <title>Errors
</title>
        <table>
          <title>Errors signalled by shallow()
</title>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>SQLState
</entry>
                <entry>Error Code
</entry>
                <entry>Error Text
</entry>
                <entry>Description
</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <errorcode>XP001
</errorcode>
                </entry>
                <entry>
                  <errorcode>XPFD6
</errorcode>
                </entry>
                <entry>
                  <errortext>The argument of XPATH function shallow() is not an entity
</errortext>
                </entry>
                <entry>To match XQuery standard, the function signal an error if 
<parameter>ent
</parameter>

   is not an entity.
</entry>
              </row>
              <row>
                <entry>
                  <errorcode>XP001
</errorcode>
                </entry>
                <entry>
                  <errorcode>XPFD7
</errorcode>
                </entry>
                <entry>
                  <errortext>Persistent XML entities are not supported by XPATH function shallow()
</errortext>
                </entry>
                <entry>This is an artificial restriction that is to be removed in future versions of Virtuoso.
</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </refsect1>
      <refsect1 xml:id="xpf_examples_shallow">
        <title>Examples
</title>
        <example xml:id="xpf_ex_shallow">
          <title>Find Martha's spouse
</title>
          <para>
The idea of the following sample is from W3C's XQuery Use Cases (case 1.9.4.1.).
The query should find all persons whose name is "Marta"
and return entities that describes their spouses, with removed information about children.
</para>
          <screen>
-- read the document, then...
    let $doc := document("census.xml")
-- for every person named "Martha"...
      for $m in $doc//person[@name="Martha"]
-- for all (i.e. 0 or 1) her spouses...
        for $s in $m/@spouse =&gt; person
-- return &lt;person&gt; element with attributes preserved but with children removed
          return shallow($s)

</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="xpf_seealso_shallow">
        <title>See Also
</title>
        <para>
          <link linkend="xpf_filter">filter()
</link>
        </para>
      </refsect1>
    </refentry>
