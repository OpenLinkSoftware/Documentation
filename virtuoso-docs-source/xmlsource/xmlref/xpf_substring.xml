<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="xpf_substring">
      <refmeta>
        <refentrytitle>substring
</refentrytitle>
        <refmiscinfo>XPATH
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>substring
</refname>
        <refpurpose>Returns the substring of the first argument starting at the position specified in the second argument with length specified in the third argument.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="xpf_syn_substring">
          <funcprototype xml:id="xpf_proto_substring">
            <funcdef>string 
<function>substring
</function>

</funcdef>
            <paramdef choice="opt"><parameter>strg
</parameter>

   string
</paramdef>
            <paramdef choice="opt"><parameter>start
</parameter>

   integer
</paramdef>
            <paramdef choice="opt"><parameter>length
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="xpf_desc_substring">
        <title>Description
</title>
        <para>
The substring() XPATH function returns the substring of the <parameter>strg</parameter>

starting at the position specified in <parameter>start</parameter>

   argument with length
specified in <parameter>length</parameter>

   argument.
If <parameter>length</parameter>

   is not specified,
it returns the substring starting at the position specified in the <parameter>start</parameter>

   argument
and continuing to the end of the string.
</para>
        <para>
XPATH 1.0 defines that "each character in the string... is considered to have a numeric position: the position of the first character is 1, the position of the second character is 2 and so on.
This differs from Java and ECMAScript, in which the String.substring method treats the position of the first character as 0."
The returned substring contains those characters for which the position of the character is greater than or equal to <parameter>start</parameter>

   and,
if <parameter>length</parameter>

   is specified, less than the sum of <parameter>start</parameter>

   and <parameter>length</parameter>

  .
</para>
        <para>
If <parameter>start</parameter>

   and/or <parameter>length</parameter>

   are not integers,
they are converted to integers following rules for round() XPATH function, before doing any other processing.
So they will be rounded first, and the sum of rounded values will be used as "end position"
</para>
        <para>
If <parameter>start</parameter>

   is greater than or equal to the length of string, the empty string is returned.
If <parameter>length</parameter>

   is specified and the sum of <parameter>start</parameter>

   is less than or equal to 1, the empty string is returned, too.
Otherwise, the result string will contains some characters even if <parameter>start</parameter>

   is less than 1.
</para>
        <para>
If <parameter>length</parameter>

   <parameter>start</parameter>

   is greater than or equal to the length of string, the empty string is returned.

</para>
      </refsect1>
      <refsect1 xml:id="xpf_params_substring">
        <title>Parameters
</title>
        <refsect2>
          <title>strg
</title>
          <para>Source string. If the argument is not a string, it is converted to string first.
</para>
        </refsect2>
        <refsect2>
          <title>start
</title>
          <para>Position of first character of the substring in the source string.
</para>
        </refsect2>
        <refsect2>
          <title>length
</title>
          <para>Number of characters in the substring, if specified.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="xpf_ret_substring">
        <title>Return Types
</title>
        <para>String
</para>
      </refsect1>
      <refsect1 xml:id="xpf_examples_substring">
        <title>Examples
</title>
        <example xml:id="xpf_ex_substring">
          <title> 
  </title>
          <para>The following expressions are all true:
</para>
          <screen>
substring("12345", 2, 3) = "234"
substring("12345", 2) = "2345"
substring("12345", 1.5, 2.6) = "234"
substring("12345", 0, 3) = "12"
substring("12345", -2, 5) = "12"
substring("12345", -2) = "12345"

</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="xpf_seealso_substring">
        <title>See Also
</title>
        <para>
          <link linkend="xpf_substring_before">substring-before()
</link>
          <link linkend="xpf_substring_after">substring-after()
</link>
        </para>
      </refsect1>
    </refentry>
