<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="xpf__sql__column">
      <refmeta>
        <refentrytitle>sql:column
</refentrytitle>
        <refmiscinfo>XQuery
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>sql:column
</refname>
        <refpurpose>Returns the value of a column from SQL result-set.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="xpf_syn__sql__column">
          <funcprototype xml:id="xpf_proto__sql__column">
            <funcdef>any 
<function>sql:column
</function>

</funcdef>
            <paramdef choice="opt">constant 
<parameter>column_name
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="xpf_desc__sql__column">
        <title>Description
</title>
        <para>This is actually not a function but a special macro that is
    converted to a reference to a global parameter.

</para>
      </refsect1>
      <refsect1 xml:id="xpf_params__sql__column">
        <title>Parameters
</title>
        <refsect2>
          <title>column_name
</title>
          <para>A string constant (literal, not an expression)
that is a column name in plain SQL syntax. It can be a column name
(and it can be qualified to specify a table name or an alias name).
It can be a name of a Virtuoso/PL variable.
</para>
          <para>The string should not contain quotes around parts of the column name.

</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="xpf_ret__sql__column">
        <title>Return Types
</title>
        <para>The value of the sql:column() invocation is the value of some
SQL column or variable. If the type of the value is not supported by XQuery
interpreter then it will be converted according to generic rules for
XQuery parameters.
</para>
      </refsect1>
      <refsect1 xml:id="xpf_examples__sql__column">
        <title>Examples
</title>
        <example xml:id="xpf_ex__sql__column">
          <title>Various invocations of sql:column
</title>
          <para>These two statements will produce identical results:
</para>
          <screen/>
        </example>
      </refsect1>
      <refsect1 xml:id="xpf_seealso__sql__column">
        <title>See Also
</title>
        <para>
          <link linkend="xq_precompilation">Pre-compilation of XPath and XQuery Expressions
</link>
        </para>
      </refsect1>
    </refentry>
