<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="vcrvirtdataadaclass">
          <title>VirtuosoDataAdapter Class</title>
          <para>Represents a set of data commands and a connection to a data source that are used to fill the
DataSet and update the data source. This class cannot be inherited.</para>
          <simplelist type="vert">
            <member>System.Object</member>
            <member>   System.MarshalByRefObject</member>
            <member>      System.ComponentModel.Component</member>
            <member>         System.Data.Common.DataAdapter</member>
            <member>            System.Data.Common.DbDataAdapter</member>
            <member>               VirtuosoDataAdapter</member>
          </simplelist>
          <classsynopsis class="class">
            <ooclass>
              <modifier>public</modifier>
              <modifier>sealed</modifier>
              <modifier>class</modifier>
              <classname>VirtuosoDataAdapter</classname>
            </ooclass>
            <ooclass>
              <classname>DbDataAdapter</classname>
            </ooclass>
            <oointerface>
              <interfacename>IDbDataAdapter</interfacename>
            </oointerface>
          </classsynopsis>
          <section>
            <title>Thread Safety</title>
            <para>Any public static (Shared in Microsoft® Visual Basic®) members of this type are safe
for multithreaded operations. Any instance members are not guaranteed to be thread safe.</para>
          </section>
          <section>
            <title>Remarks</title>
            <para>The VirtuosoDataAdapter serves as a bridge between a DataSet and data source for
retrieving and saving data. The VirtuosoDataAdapter provides this bridge by using Fill to load data
from the data source into the DataSet, and using Update to send changes made in the DataSet back to
the data source.</para>
            <para>The VirtuosoDataAdapter also includes the SelectCommand, InsertCommand, DeleteCommand,
UpdateCommand, and TableMappings properties to facilitate loading and updating of data.</para>
          </section>
          <section>
            <title>VirtuosoDataAdapter Constructor</title>
            <section>
              <title>VirtuosoDataAdapter Constructor ()</title>
              <para>Initializes a new instance of the VirtuosoDataAdapter class.</para>
              <constructorsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoDataAdapter</methodname>
                <void/>
              </constructorsynopsis>
              <section>
                <title>Remarks</title>
                <para>When you create an instance of VirtuosoDataAdapter, the following read/write properties
are set to their default values, as shown in the table.</para>
                <table>
                  <title/>
                  <tgroup cols="2">
                    <thead>
                      <row>
                        <entry>Properties</entry>
                        <entry>Default Value</entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>MissingMappingAction</entry>
                        <entry>MissingMappingAction.Passthrough</entry>
                      </row>
                      <row>
                        <entry>MissingSchemaAction</entry>
                        <entry>MissingSchemaAction.Add</entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
                <para>You can change the value of any of these properties through a separate call to the property.</para>
              </section>
            </section>
            <section>
              <title>VirtuosoDataAdapter Constructor (VirtuosoCommand)</title>
              <para>Initializes a new instance of the VirtuosoDataAdapter class with the specified VirtuosoCommand
as the SelectCommand property.</para>
              <constructorsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoDataAdapter</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>VirtuosoCommand</type>
                  <parameter>selectCommand</parameter>
                </methodparam>
              </constructorsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>selectCommand</term>
                    <listitem>
                      <para>
		    A VirtuosoCommand that is an SQL SELECT statement or stored procedure, and is set as the
		    SelectCommand property of the VirtuosoDataAdapter.
		  </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
              <section>
                <title>Remarks</title>
                <para>This implementation of the VirtuosoDataAdapter constructor sets the SelectCommand property
to the value specified in the selectCommand parameter.</para>
                <para>When you create an instance of VirtuosoDataAdapter, the following read/write properties
are set to their default values, as shown in the table.</para>
                <table>
                  <title/>
                  <tgroup cols="2">
                    <thead>
                      <row>
                        <entry>Properties</entry>
                        <entry>Default Value</entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>MissingMappingAction</entry>
                        <entry>MissingMappingAction.Passthrough</entry>
                      </row>
                      <row>
                        <entry>MissingSchemaAction</entry>
                        <entry>MissingSchemaAction.Add</entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
                <para>You can change the value of any of these properties through a separate call to the property.</para>
              </section>
            </section>
            <section>
              <title>VirtuosoDataAdapter Constructor (string, VirtuosoConnection)</title>
              <para>Initializes a new instance of the VirtuosoDataAdapter class with an SQL SELECT statement
and a VirtuosoConnection.</para>
              <constructorsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoDataAdapter</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>selectCommandText</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>VirtuosoConnection</type>
                  <parameter>selectConnection</parameter>
                </methodparam>
              </constructorsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>selectCommandText</term>
                    <listitem>
                      <para>
		    A string that is a SQL SELECT statement or stored procedure to be used by the SelectCommand
		    property of the VirtuosoDataAdapter.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>selectConnection</term>
                    <listitem>
                      <para>
		    A VirtuosoConnection that represents the connection.
		  </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
            </section>
            <section>
              <title>VirtuosoDataAdapter Constructor (string, string)</title>
              <para>Initializes a new instance of the VirtuosoDataAdapter class with an SQL SELECT statement and
a connection string.</para>
              <constructorsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoDataAdapter</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>selectCommandText</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>selectConnectionString</parameter>
                </methodparam>
              </constructorsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>selectCommandText</term>
                    <listitem>
                      <para>
		    A string that is a SQL SELECT statement or stored procedure to be used by the SelectCommand
		    property of the VirtuosoDataAdapter.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>selectConnectionString</term>
                    <listitem>
                      <para>
		    The connection string.
		  </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
            </section>
          </section>
          <section>
            <title>Properties</title>
            <section>
              <title>DeleteCommand</title>
              <para>Gets or sets an SQL statement or stored procedure used to delete records in the data source.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>VirtuosoCommand</type>
                <varname>DeleteCommand</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>A VirtuosoCommand used during an update operation to delete records in the database
that correspond to deleted rows in the DataSet.</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>When DeleteCommand is assigned to a previously created VirtuosoCommand, the VirtuosoCommand
is not cloned. The DeleteCommand maintains a reference to the previously created VirtuosoCommand object.</para>
              </section>
            </section>
            <section>
              <title>InsertCommand</title>
              <para>Gets or sets an SQL statement or stored procedure used to insert new records in the data source.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>VirtuosoCommand</type>
                <varname>InsertCommand</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>A VirtuosoCommand used during an update operation to insert records in the database
that correspond to new rows in the DataSet.</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>When InsertCommand is assigned to a previously created VirtuosoCommand, the VirtuosoCommand
is not cloned. The InsertCommand maintains a reference to the previously created VirtuosoCommand object.</para>
              </section>
            </section>
            <section>
              <title>SelectCommand</title>
              <para>Gets or sets an SQL statement or stored procedure used to select records in the data source.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>VirtuosoCommand</type>
                <varname>SelectCommand</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>A VirtuosoCommand used during Fill to select records from the database for placement in the DataSet.</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>When SelectCommand is assigned to a previously created VirtuosoCommand, the VirtuosoCommand
is not cloned. The SelectCommand maintains a reference to the previously created VirtuosoCommand object.</para>
                <para>If the SelectCommand does not return any rows, no tables are added to the DataSet, and no
exception is raised.</para>
              </section>
            </section>
            <section>
              <title>UpdateCommand</title>
              <para>Gets or sets an SQL statement or stored procedure used to update records in the data source.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>VirtuosoCommand</type>
                <varname>UpdateCommand</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>A VirtuosoCommand used during an update operation to update records in the database
that correspond to modified rows in the DataSet.</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>When UpdateCommand is assigned to a previously created VirtuosoCommand, the VirtuosoCommand
is not cloned. The UpdateCommand maintains a reference to the previously created VirtuosoCommand object.</para>
              </section>
            </section>
          </section>
          <section>
            <title>Methods</title>
            <section>
              <title>CreateRowUpdatedEvent</title>
              <para>This member overrides DbDataAdapter.CreateRowUpdatedEvent.</para>
              <methodsynopsis>
                <modifier>protected</modifier>
                <modifier>override</modifier>
                <type>RowUpdatedEventArgs</type>
                <methodname>CreateRowUpdatedEvent</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>DataRow</type>
                  <parameter>dataRow</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>IDbCommand</type>
                  <parameter>command</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>StatementType</type>
                  <parameter>statementType</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>DataTableMapping</type>
                  <parameter>tableMapping</parameter>
                </methodparam>
              </methodsynopsis>
            </section>
            <section>
              <title>CreateRowUpdatingEvent</title>
              <para>This member overrides DbDataAdapter.CreateRowUpdatingEvent.</para>
              <methodsynopsis>
                <modifier>protected</modifier>
                <modifier>override</modifier>
                <type>RowUpdatedEventArgs</type>
                <methodname>CreateRowUpdatingEvent</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>DataRow</type>
                  <parameter>dataRow</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>IDbCommand</type>
                  <parameter>command</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>StatementType</type>
                  <parameter>statementType</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>DataTableMapping</type>
                  <parameter>tableMapping</parameter>
                </methodparam>
              </methodsynopsis>
            </section>
            <section>
              <title>OnRowUpdated</title>
              <para>Raises the RowUpdated event.</para>
              <methodsynopsis>
                <modifier>protected</modifier>
                <modifier>override</modifier>
                <void/>
                <methodname>OnRowUpdated</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>RowUpdatedEventArgs</type>
                  <parameter>value</parameter>
                </methodparam>
              </methodsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>value</term>
                    <listitem>
                      <para>A System.Data.Common.RowUpdatedEventArgs object that contains the event data.</para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
              <section>
                <title>Remarks</title>
                <para>Raising an event invokes the event handler through a delegate. For an overview,
see "Raising an Event" in the Microsoft® .NET Framework SDK documentation.</para>
              </section>
            </section>
            <section>
              <title>OnRowUpdating</title>
              <para>Raises the RowUpdating event.</para>
              <methodsynopsis>
                <modifier>protected</modifier>
                <modifier>override</modifier>
                <void/>
                <methodname>OnRowUpdating</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>RowUpdatingEventArgs</type>
                  <parameter>value</parameter>
                </methodparam>
              </methodsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>value</term>
                    <listitem>
                      <para>A System.Data.Common.RowUpdatingEventArgs object that contains the event data.</para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
              <section>
                <title>Remarks</title>
                <para>Raising an event invokes the event handler through a delegate. For an overview,
see "Raising an Event" in the Microsoft® .NET Framework SDK documentation.</para>
              </section>
            </section>
          </section>
          <section>
            <title>Events</title>
            <section>
              <title>RowUpdated</title>
              <para>Occurs during an Update operation after a command is executed against the data source.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <modifier>event</modifier>
                <type>VirtuosoRowUpdatedEventHandler</type>
                <varname>RowUpdated</varname>
              </fieldsynopsis>
              <section>
                <title>Event Data</title>
                <para>The event handler receives an argument of type VirtuosoRowUpdatedEventArgs containing data
related to this event. The following VirtuosoRowUpdatedEventArgs properties provide information specific
to this event.</para>
                <table>
                  <title/>
                  <tgroup cols="2">
                    <thead>
                      <row>
                        <entry>Property</entry>
                        <entry>Description</entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>Command</entry>
                        <entry>Gets the VirtuosoCommand executed when Update is called.</entry>
                      </row>
                      <row>
                        <entry>Errors (inherited from RowUpdatedEventArgs)</entry>
                        <entry>Gets any errors generated by the .NET data provider when the Command was executed.</entry>
                      </row>
                      <row>
                        <entry>RecordsAffected (inherited from RowUpdatedEventArgs)</entry>
                        <entry>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</entry>
                      </row>
                      <row>
                        <entry>Row (inherited from RowUpdatedEventArgs)</entry>
                        <entry>Gets the DataRow sent through an Update.</entry>
                      </row>
                      <row>
                        <entry>StatementType (inherited from RowUpdatedEventArgs)</entry>
                        <entry>Gets the type of SQL statement executed.</entry>
                      </row>
                      <row>
                        <entry>Status (inherited from RowUpdatedEventArgs)</entry>
                        <entry>Gets the UpdateStatus of the Command.</entry>
                      </row>
                      <row>
                        <entry>TableMapping (inherited from RowUpdatedEventArgs)</entry>
                        <entry>Gets the DataTableMapping sent through an Update.</entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </section>
              <section>
                <title>Remarks</title>
                <para>When using the Update method, there are two events that occur per data row updated.
The order of execution is as follows:</para>
                <orderedlist inheritnum="ignore" continuation="restarts">
                  <listitem>
                    <para>
		  The values in the DataRow are moved to the parameter values.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  The OnRowUpdating event is raised.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  The command executes.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  If the UpdateRowSource enumeration is set to FirstReturnedRecord, the first returned result
		  is placed in the DataRow.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  If there are output parameters, they are placed in the DataRow.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  The OnRowUpdated event is raised.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  AcceptChanges is called.
		</para>
                  </listitem>
                </orderedlist>
              </section>
            </section>
            <section>
              <title>RowUpdating</title>
              <para>Occurs during an Update operation before a command is executed against the data source.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <modifier>event</modifier>
                <type>VirtuosoRowUpdatingEventHandler</type>
                <varname>RowUpdating</varname>
              </fieldsynopsis>
              <section>
                <title>Event Data</title>
                <para>The event handler receives an argument of type VirtuosoRowUpdatingEventArgs containing data
related to this event. The following VirtuosoRowUpdatingEventArgs properties provide information specific to this
event.</para>
                <table>
                  <title/>
                  <tgroup cols="2">
                    <thead>
                      <row>
                        <entry>Property</entry>
                        <entry>Description</entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>Command</entry>
                        <entry>Gets or sets the VirtuosoCommand to execute when Update is called.</entry>
                      </row>
                      <row>
                        <entry>Errors (inherited from RowUpdatingEventArgs)</entry>
                        <entry>Gets any errors generated by the .NET data provider when the Command executes.</entry>
                      </row>
                      <row>
                        <entry>Row (inherited from RowUpdatingEventArgs)</entry>
                        <entry>Gets the DataRow to send through an Update.</entry>
                      </row>
                      <row>
                        <entry>StatementType (inherited from RowUpdatingEventArgs)</entry>
                        <entry>Gets the type of SQL statement to execute.</entry>
                      </row>
                      <row>
                        <entry>Status (inherited from RowUpdatingEventArgs)</entry>
                        <entry>Gets the UpdateStatus of the Command.</entry>
                      </row>
                      <row>
                        <entry>TableMapping (inherited from RowUpdatingEventArgs)</entry>
                        <entry>Gets the DataTableMapping to send through the Update.</entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </section>
              <section>
                <title>Remarks</title>
                <para>When using the Update method, there are two events that occur per data row updated.
The order of execution is as follows:</para>
                <orderedlist inheritnum="ignore" continuation="restarts">
                  <listitem>
                    <para>
		  The values in the DataRow are moved to the parameter values.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  The OnRowUpdating event is raised.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  The command executes.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  If the UpdateRowSource enumeration is set to FirstReturnedRecord, the first returned result
		  is placed in the DataRow.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  If there are output parameters, they are placed in the DataRow.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  The OnRowUpdated event is raised.
		</para>
                  </listitem>
                  <listitem>
                    <para>
		  AcceptChanges is called.
		</para>
                  </listitem>
                </orderedlist>
              </section>
            </section>
          </section>
        </section>
