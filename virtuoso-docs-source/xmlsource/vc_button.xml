<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="vc_button">
          <refmeta>
            <refentrytitle>button</refentrytitle>
            <refmiscinfo>vspx_control</refmiscinfo>
          </refmeta>
          <refnamediv>
            <refname>button</refname>
            <refpurpose>Scriptable button.</refpurpose>
          </refnamediv>
          <refsynopsisdiv>
            <funcsynopsis xml:id="vc_syn_button">
              <funcprototype xml:id="vc_proto_button">
                <funcdef>
            &lt;<function>button</function>

 /&gt;</funcdef>
                <paramdef choice="req"><parameter>name</parameter>

   (required) </paramdef>
                <paramdef choice="opt"><parameter>annotation</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>initial-enable</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>enabled</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>instantiate</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>control-udt</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>xsd-stub-xhtml</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>width</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>height</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>column</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>null-value</parameter>

   (optional) </paramdef>
                <paramdef choice="req"><parameter>action</parameter>

   (required) </paramdef>
                <paramdef choice="req"><parameter>value</parameter>

   (required) </paramdef>
                <paramdef choice="opt"><parameter>style</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>active</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>initial-active</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>child-window-options</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>browser-current</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>browser-filter</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>browser-list</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>browser-mode</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>browser-type</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>browser-xfer</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>selector</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>format</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-srcfile</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-srcline</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-log</parameter>

   (optional) </paramdef>
              </funcprototype>
            </funcsynopsis>
          </refsynopsisdiv>
          <refsect1 xml:id="vc_desc_button">
            <title>Description</title>
            <para>Scriptable version of Submit Button of the HTML form. Depending of
'action' attribute it may have variants. In some of these variants the button will not have a submit function, as in select and browse buttons.  In these cases the button will use client JavaScript to pop up new windows or for setting values in other windows.
</para>
          </refsect1>
          <refsect1 xml:id="vc_attrs_button">
            <title>Attributes</title>
            <formalpara>
              <title>name = <link linkend="vc_type_sqlname">SqlName</link>

   </title>
              <para>A page level unique name identifying a control.</para>
            </formalpara>
            <formalpara>
              <title>annotation</title>
              <para>A human readable comment.</para>
            </formalpara>
            <formalpara>
              <title>initial-enable = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines  whether  a control is initially visible. True by default. Could be data-bound to an SQL expression.</para>
            </formalpara>
            <formalpara>
              <title>enabled = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines  whether  a control is visible. True by default. Could be data-bound to an SQL expression.</para>
            </formalpara>
            <formalpara>
              <title>instantiate = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines whether a control instantiate its children. It is true by default. It could be data-bound to an SQL expression. Unlike most of calcucateable attributes, the value of this attribute for a control is calcluated before calling 'on-init' event handler of the control; other values are calculated before calling 'before-data-bind' event handler.</para>
            </formalpara>
            <formalpara>
              <title>control-udt = <link linkend="vc_type_sqlname">SqlName</link>

   </title>
              <para>At run time every control is represented as an instance of some user-defined type (UDT). VSPX compiles selects the UDT to use depending on name of the XML element that represents the control and maybe some of its attributes. In some specific cases the application developer may instruct VSPX compiler to use some other UDT, e.g. an application-specific UDT that is derived from the preset one. If specified, the value of 'control-udt' attribute should be equal to the name of the desired target UDT.</para>
            </formalpara>
            <formalpara>
              <title>xsd-stub-xhtml</title>
              <para>This attribute is for internal use only. It has no effect if added to the source VSPX file.</para>
            </formalpara>
            <formalpara>
              <title>width</title>
              <para>Visible width of the control when it is displayed in WYSIWYG tools when the source VSPX text is edited.
The value of this attribute will not be used when the resulting HTML is rendered.</para>
            </formalpara>
            <formalpara>
              <title>height</title>
              <para>Visible width of the control when it is displayed in WYSIWYG tools when the source VSPX text is edited.
The value of this attribute will not be used when the resulting HTML is rendered.</para>
            </formalpara>
            <formalpara>
              <title>column = <link linkend="vc_type_sqlname">SqlName</link>

   </title>
              <para>The name of the column bound.
If nothing else is specified, the column meta data from the containing update form sets the field's attributes.
</para>
            </formalpara>
            <formalpara>
              <title>null-value</title>
              <para>This value will be shown if value of the column is NULL, also
	      value of the control will be set to null if this value is passed upon POST request.
	  </para>
            </formalpara>
            <formalpara>
              <title>action</title>
              <para>This specifies the button subclass to use.
              <table><title>Allowed values of the 'action' attribute</title><tgroup cols="2"><tbody><row><entry>simple</entry><entry><para>is a simple submit button, no special functions
				</para></entry></row><row><entry>submit</entry><entry><para>an alias of 'simple' button, obsolete
				</para></entry></row><row><entry>delete</entry><entry><para>a button for deleting a row in a data-set or data-grid control. This is represented as a submit button with a special on-post script. The delete function is performed based on table, key attributes. (check implementation!!)
				</para></entry></row><row><entry>browse</entry><entry><para>Button that opens pup-up window using client-side javascript (browse-button).
This control allows the designer to place some part of a form's input into a pop-up window. When the HTML page is rendered, this control puts a button and associated client-side javascript into the resulting page so clicking the button opens a child window.  </para></entry></row><row><entry>return</entry><entry><para>
This is to be used on a page invoked for selecting from a browse button.  Specifies that the value of the fields designated by the field children are to be asigned to the corresponding fields of the invoking page.
				</para></entry></row><row><entry>logout</entry><entry><para> This will terminate the current session when clicked.  Can only occur inside the login control.
				</para></entry></row></tbody></tgroup></table>
              </para>
            </formalpara>
            <formalpara>
              <title>value = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Text of the label of the button.</para>
            </formalpara>
            <formalpara>
              <title>style</title>
              <para>A style of button, affects appearance.
              <table><title>Allowed values of the 'style' attribute</title><tgroup cols="2"><tbody><row><entry>submit</entry><entry><para>This is a default style used, no special handling.
The button will be rendered as a usual submit button.
				</para></entry></row><row><entry>url</entry><entry><para>The button will be rendered as a link, furthermore client side JavaScript code will be produced to act as submit button.	</para></entry></row><row><entry>image</entry><entry><para>The button will be rendered as an image on the browser under link button. In that case value of button control must be link to the image file.
				</para></entry></row></tbody></tgroup></table>
              </para>
            </formalpara>
            <formalpara>
              <title>active = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>A data bound value to enable or disable the button. The default is '1' meaning 'enable'.</para>
            </formalpara>
            <formalpara>
              <title>initial-active = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>A data bound value to enable or disable the button. The default is '1' meaning 'enable'.
Unlike 'active' attribute, this one is effective only when the page is displayed in the first time, not after user posts data back to the page.</para>
            </formalpara>
            <formalpara>
              <title>child-window-options</title>
              <para>Options for oppening a child pop-up window.This can be used only in conjuction with  action browse.</para>
            </formalpara>
            <formalpara>
              <title>browser-current</title>
              <para>Current directory of browsing. Can be used only with browse button for WebDAV or File system resources.</para>
            </formalpara>
            <formalpara>
              <title>browser-filter</title>
              <para>Filter expression(s) for browsing. (see above)</para>
            </formalpara>
            <formalpara>
              <title>browser-list</title>
              <para>Type of browser list, 0 - short, 1 - long</para>
            </formalpara>
            <formalpara>
              <title>browser-mode</title>
              <para>COL, RES or STANDALONE , for a file system or DAV browse button, this specifies whether to return an path name or internal ID.
</para>
            </formalpara>
            <formalpara>
              <title>browser-type</title>
              <para>This designates the type of browser: dav or OS (filesystem).</para>
            </formalpara>
            <formalpara>
              <title>browser-xfer</title>
              <para>For a browse button, this is the   means  of transferring the data between windows, DOM is default. No other options in current implementation.</para>
            </formalpara>
            <formalpara>
              <title>selector</title>
              <para>For a browse button this is the  URL that will be loaded into the pop up window.</para>
            </formalpara>
            <formalpara>
              <title>format = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>A sprintf format string for printing the value</para>
            </formalpara>
            <formalpara>
              <title>debug-srcfile</title>
              <para>URI of the source document where the tag comes from.</para>
            </formalpara>
            <formalpara>
              <title>debug-srcline</title>
              <para>Line number in the source document where the tag comes from.</para>
            </formalpara>
            <formalpara>
              <title>debug-log</title>
              <para>This defines what sort of data are saved to the debugging log.
</para>
            </formalpara>
          </refsect1>
          <refsect1 xml:id="vc_udt_button">
            <title>Declaration of type vspx_button</title>
            <para>
 Button class, encapsulate all controls originating a event
</para>
            <screen>
create type vspx_button under vspx_field as
(
  bt_pressed int default 0,
  bt_style  varchar default 'submit',
  bt_close_img varchar,
  bt_open_img varchar,
  bt_url varchar default '',
  bt_l_pars varchar default '',
  bt_text varchar default '',
  bt_anchor int default 0
)  temporary self as ref
overriding method vc_render () returns any,
overriding method vc_xrender () returns any,
overriding method vc_set_model () returns any,
constructor method vspx_button (name varchar, parent vspx_control)
</screen>
          </refsect1>
          <refsect1 xml:id="vc_ex_button">
            <title>Examples</title>
            <example xml:id="vc_ex_button__0">
              <title>
  Buton shown as an image
</title>
              <para>
The button of the form will be shown as a picture plus.gif. Attributes whose names start with 'xhtml_' are
placed into the resulting HTML with no changes.
</para>
              <screen>
&lt;v:page name="button__0" xmlns:v="http://http://example.com/vspx/"&gt;
  &lt;html&gt;
    &lt;head&gt;
      &lt;title&gt;VSPX samples | v:button&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
      &lt;v:form name="form1" type="simple" action="" method="POST"&gt;
        &lt;v:text name="txt1" default=""/&gt;
        &lt;v:button name="submit1" action="simple" style="image" xhtml_alt="A test button" value="--'plus.gif'" /&gt;
      &lt;/v:form&gt;
    &lt;/body&gt;
  &lt;/html&gt;
&lt;/v:page&gt;
</screen>
            </example>
            <example xml:id="vc_ex_button__1">
              <title>
  Simple 'Add-Number' example
</title>
              <para>The form accepts two numbers and calculates their sum.</para>
              <screen>
&lt;v:page name="button__1" xmlns:v="http://http://example.com/vspx/"&gt;
  &lt;html&gt;
    &lt;head&gt;
      &lt;title&gt;VSPX samples | v:button&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
      &lt;v:form name="f1" type="simple" action="" method="POST"&gt;
	&lt;v:label name="l1" value="--0" format="%.2f" /&gt;&lt;br/&gt;
        &lt;v:text name="t1" default="0"/&gt;
        &lt;v:text name="t2" default="0"/&gt;
        &lt;v:button name="b1" action="simple" value="Add" &gt;
	&lt;v:on-post&gt;
	 self.l1.ufl_value := atof (self.t1.ufl_value) + atof (self.t2.ufl_value);
	&lt;/v:on-post&gt;
	&lt;/v:button&gt;
      &lt;/v:form&gt;
    &lt;/body&gt;
  &lt;/html&gt;
&lt;/v:page&gt;
</screen>
            </example>
            <example xml:id="vc_ex_button__2">
              <title>
  Simple 'Browse File' dialog
</title>
              <para>The form allows to select a file from server's file system &lt;html&gt; &lt;body&gt;</para>
              <screen>
&lt;v:page name="browse__2" xmlns:v="http://http://example.com/vspx/"&gt;
  &lt;v:form name="f1" type="simple" method="POST"&gt;
      &lt;v:text name="floc" value="" xhtml_size="60%" /&gt;
      &lt;v:button action='browse' name="cmb" selector="browser/dav_browser.vsp"
		child-window-options="resizable=yes, status=no, menubar=no, scrollbars=no, width=640, height=400"
		value="Browse"
		browser-type="os"
		browser-mode="RES"
		browser-xfer="DOM"
		browser-list="1"
		browser-current="1"
		browser-filter="*"&gt;
        &lt;v:field name="floc" /&gt;
      &lt;/v:button&gt;
  &lt;/v:form&gt;
&lt;/v:page&gt;
&lt;/body&gt;
&lt;/html&gt;
</screen>
            </example>
            <example xml:id="vc_ex_button__3">
              <title>
  Simple browse button example
</title>
              <para>The form allows to select a two values from a different page
	&lt;html&gt;
&lt;body&gt;
</para>
              <screen>
&lt;v:page name="button__3" xmlns:v="http://http://example.com/vspx/"&gt;
  &lt;v:form name="frm" type="simple" method="POST"&gt;
      &lt;v:text name="fld1" value="" /&gt;
      &lt;v:text name="fld2" value="" /&gt;
      &lt;v:button action='browse' name="br1" selector="button__4.vspx"
		child-window-options="scrollbars=yes, menubar=no, height=630, width=600"
		value="Browse"&gt;
        &lt;v:field name="fld1" /&gt;
        &lt;v:field name="fld2" /&gt;
      &lt;/v:button&gt;
  &lt;/v:form&gt;
&lt;/v:page&gt;
&lt;/body&gt;
&lt;/html&gt;
</screen>
            </example>
            <example xml:id="vc_ex_button__4">
              <title>
  Simple select button example
</title>
              <para>
The form returns back to caller form two walues from a text box and select list

&lt;html&gt;
&lt;body&gt;
</para>
              <screen>
&lt;v:page name="button__4" xmlns:v="http://http://example.com/vspx/"&gt;
  &lt;v:form name="f1" type="simple" method="POST"&gt;
     &lt;v:text name="sl1" value="Test" /&gt;
     &lt;v:select-list name="sl2"&gt;
       &lt;v:item name="*default*" value="0" /&gt;
       &lt;v:item name="FIRST" 	value="1" /&gt;
       &lt;v:item name="SECOND" 	value="2" /&gt;
     &lt;/v:select-list&gt;
	&lt;v:button name="select1" action="return" value="Select"&gt;
	  &lt;v:field name="fld1" ref="sl1" /&gt;
	  &lt;v:field name="fld2" ref="sl2" /&gt;
	&lt;/v:button&gt;
 &lt;/v:form&gt;
&lt;/v:page&gt;
&lt;/body&gt;
&lt;/html&gt;
</screen>
            </example>
            <tip>
              <title>See Also: Reference Material in the Tutorial:</title>
              <para>
                <link xlink:href="http://demo.openlinksw.com/tutorial/web/vx_s_2/form.vspx">VX-S-2</link>
              </para>
              <para>
                <link xlink:href="http://demo.openlinksw.com/tutorial/web/vx_s_7/products.vspx">VX-S-7</link>
              </para>
            </tip>
          </refsect1>
        </refentry>
