<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="vcrvirtparamclass">
          <title>VirtuosoParameter Class</title>
          <para>Represents a parameter to an VirtuosoCommand and optionally, its mapping to a DataColumn.
This class cannot be inherited.</para>
          <simplelist type="vert">
            <member>System.Object</member>
            <member>   System.MarshalByRefObject</member>
            <member>      VirtuosoParameter</member>
          </simplelist>
          <classsynopsis class="class">
            <ooclass>
              <modifier>public</modifier>
              <modifier>sealed</modifier>
              <modifier>class</modifier>
              <classname>VirtuosoParameter</classname>
            </ooclass>
            <ooclass>
              <classname>MarshalByRefObject</classname>
            </ooclass>
            <oointerface>
              <interfacename>IDbDataParameter</interfacename>
            </oointerface>
            <oointerface>
              <interfacename>IDataParameter</interfacename>
            </oointerface>
            <oointerface>
              <interfacename>ICloneable</interfacename>
            </oointerface>
          </classsynopsis>
          <section>
            <title>Thread Safety</title>
            <para>Any public static (Shared in Visual Basic) members of this type are safe for multithreaded operations.
Any instance members are not guaranteed to be thread safe.</para>
          </section>
          <section>
            <title>VirtuosoParameter Constructor</title>
            <section>
              <title>VirtuosoParameter Constructor ()</title>
              <para>Initializes a new instance of the VirtuosoParameter class.</para>
              <methodsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoParameter</methodname>
                <void/>
              </methodsynopsis>
            </section>
            <section>
              <title>VirtuosoParameter Constructor (string, object)</title>
              <para>Initializes a new instance of the VirtuosoParameter class with the parameter name and value.</para>
              <methodsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoParameter</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>parameterName</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>object</type>
                  <parameter>object</parameter>
                </methodparam>
              </methodsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>parameterName</term>
                    <listitem>
                      <para>
		    The name of the parameter to map.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>value</term>
                    <listitem>
                      <para>
		    An Object that is the value of the VirtuosoParameter.
		  </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
              <section>
                <title>Remarks</title>
                <para>When you specify an Object in the value parameter, the VirtDbType is inferred from
the .NET Framework type of the Object.</para>
              </section>
            </section>
            <section>
              <title>VirtuosoParameter Constructor (string, VirtDbType)</title>
              <para>Initializes a new instance of the VirtuosoParameter class with the parameter name and the data type.</para>
              <methodsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoParameter</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>parameterName</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>VirtDbType</type>
                  <parameter>dbType</parameter>
                </methodparam>
              </methodsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>parameterName</term>
                    <listitem>
                      <para>
		    The name of the parameter to map.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>dbType</term>
                    <listitem>
                      <para>
		    One of the VirtDbType values.
		  </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
              <section>
                <title>Remarks</title>
                <para>The data type, and if appropriate, Size and Precision are inferred from the value of the
dbType parameter.</para>
              </section>
            </section>
            <section>
              <title>VirtuosoParameter Constructor (string, VirtDbType, int)</title>
              <para>Initializes a new instance of the VirtuosoParameter class with the parameter name,
the VirtDbType, and the size.</para>
              <methodsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoParameter</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>parameterName</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>VirtDbType</type>
                  <parameter>dbType</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>int</type>
                  <parameter>size</parameter>
                </methodparam>
              </methodsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>parameterName</term>
                    <listitem>
                      <para>
		    The name of the parameter to map.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>dbType</term>
                    <listitem>
                      <para>
		    One of the VirtDbType values.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>size</term>
                    <listitem>
                      <para>
		    The width of the parameter.
		  </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
              <section>
                <title>Remarks</title>
                <para>The Size is inferred from the value of the dbType parameter if it is not explicitly set
in the size parameter.</para>
              </section>
            </section>
            <section>
              <title>VirtuosoParameter Constructor (string, VirtDbType, int, string)</title>
              <para>Initializes a new instance of the VirtuosoParameter class with the parameter name, VirtDbType, size,
and source column name.</para>
              <methodsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoParameter</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>parameterName</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>VirtDbType</type>
                  <parameter>dbType</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>int</type>
                  <parameter>size</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>sourceColumn</parameter>
                </methodparam>
              </methodsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>parameterName</term>
                    <listitem>
                      <para>
		    The name of the parameter to map.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>dbType</term>
                    <listitem>
                      <para>
		    One of the VirtDbType values.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>size</term>
                    <listitem>
                      <para>
		    The width of the parameter.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>sourceColumn</term>
                    <listitem>
                      <para>
		    The name of the source column.
		  </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
              <section>
                <title>Remarks</title>
                <para>The Size is inferred from the value of the dbType parameter if it is not explicitly set
in the size parameter.</para>
              </section>
            </section>
            <section>
              <title>VirtuosoParameter Constructor (string, VirtDbType, int, ParameterDirection, Boolean, Byte, Byte, String, DataRowVersion, Object)</title>
              <para>Initializes a new instance of the VirtuosoParameter class with the parameter name,
the type of the parameter, the size of the parameter, a ParameterDirection, the precision of the parameter,
the scale of the parameter, the source column, a DataRowVersion to use, and the value of the parameter.</para>
              <methodsynopsis>
                <modifier>public</modifier>
                <methodname>VirtuosoParameter</methodname>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>parameterName</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>VirtDbType</type>
                  <parameter>dbType</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>int</type>
                  <parameter>size</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>ParameterDirection</type>
                  <parameter>direction</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>bool</type>
                  <parameter>isNullable</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>byte</type>
                  <parameter>precision</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>byte</type>
                  <parameter>scale</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>string</type>
                  <parameter>sourceColumn</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>DataRowVersion</type>
                  <parameter>sourceVersion</parameter>
                </methodparam>
                <methodparam choice="req" rep="norepeat">
                  <type>object</type>
                  <parameter>value</parameter>
                </methodparam>
              </methodsynopsis>
              <section>
                <title>Parameters</title>
                <variablelist>
                  <varlistentry>
                    <term>parameterName</term>
                    <listitem>
                      <para>
		    The name of the parameter to map.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>dbType</term>
                    <listitem>
                      <para>
		    One of the VirtDbType values.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>size</term>
                    <listitem>
                      <para>
		    The width of the parameter.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>direction</term>
                    <listitem>
                      <para>
		    One of the System.Data.ParameterDirection values.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>isNullable</term>
                    <listitem>
                      <para><literal>true</literal>
                       if the value of the field can be null, otherwise 
                      <literal>false</literal>
                      .
</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>precision</term>
                    <listitem>
                      <para>
		    The total number of digits to the left and right of the decimal point to which Value is resolved.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>scale</term>
                    <listitem>
                      <para>
		    The total number of decimal places to which Value is resolved.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>sourceColumn</term>
                    <listitem>
                      <para>
		    The name of the source column.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>sourceVersion</term>
                    <listitem>
                      <para>
		    One of the System.Data.DataRowVersion values.
		  </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>value</term>
                    <listitem>
                      <para>
		    An Object that is the value of the VirtuosoParameter.
		  </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </section>
              <section>
                <title>Remarks</title>
                <para>The Size and Precision are inferred from the value of the dbType parameter if they are not
explicitly set in the size and precision parameters.</para>
              </section>
            </section>
          </section>
          <section>
            <title>Properties</title>
            <section>
              <title>DbType Property</title>
              <para>Gets or sets the DbType of the parameter.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>DbType</type>
                <varname>DbType</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>One of the System.Data.DbType values. The default is String.</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDataParameter.DbType</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>The VirtDbType and DbType are linked. Therefore, setting the DbType changes the VirtDbType to
a supporting VirtDbType.</para>
                <para>For a list of the supported data types, see the appropriate VirtDbType member.</para>
              </section>
            </section>
            <section>
              <title>Direction Property</title>
              <para>Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional,
or a stored procedure return value parameter.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>ParameterDirection</type>
                <varname>Direction</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>One of the System.Data.ParameterDirection values. The default is Input.</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDataParameter.Direction</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>If the ParameterDirection is Output, and execution of the associated VirtuosoCommand does not
return a value, the VirtuosoParameter will contain a null value. Null values are handled using the DBNull class.
After the last row from the last resultset is read, the Output, InputOut, and ReturnValue parameters are updated.</para>
              </section>
            </section>
            <section>
              <title>IsNullable Property</title>
              <para>Gets or sets a value indicating whether the parameter accepts null values.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>bool</type>
                <varname>IsNullable</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para><literal>true</literal>

   if null values are accepted; otherwise, <literal>false</literal>

  .
The default is <literal>false</literal>

  .</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDataParameter.IsNullable</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>Null values are handled using the System.DBNull class.</para>
              </section>
            </section>
            <section>
              <title>ParameterName Property</title>
              <para>Gets or sets the name of the VirtuosoParameter.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>string</type>
                <varname>ParameterName</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>The name of the VirtuosoParameter. The default is an empty string ("").</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDataParameter.ParameterName</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>Instead of named parameters, the Virtuoso .NET Data Provider uses positional parameters that are
marked with a question mark (?) in the syntax of the command text. Parameter objects in the VirtuosoParameterCollection
and the actual parameters accepted by the stored procedure or parameterized SQL statement correspond to each other
based on the order in which the VirtuosoParameter objects are inserted into the collection rather than by parameter
name. Parameter names can be supplied, but will be ignored during parameter object binding.</para>
              </section>
            </section>
            <section>
              <title>Precision Property</title>
              <para>Gets or sets the maximum number of digits used to represent the Value property.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>byte</type>
                <varname>Precision</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>The maximum number of digits used to represent the Value property. The default value is 0.</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDbDataParameter.Precision</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>The Precision property is used only for decimal and numeric input parameters.</para>
              </section>
            </section>
            <section>
              <title>Scale Property</title>
              <para>Gets or sets the number of decimal places to which Value is resolved.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>byte</type>
                <varname>Scale</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>The number of decimal places to which Value is resolved. The default is 0.</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDbDataParameter.Scale</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>The Scale property is used only for decimal and numeric input parameters.</para>
              </section>
            </section>
            <section>
              <title>Size Property</title>
              <para>Gets or sets the maximum size, in bytes, of the data within the column.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>int</type>
                <varname>Size</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>The maximum size, in bytes, of the data within the column. The default value is inferred from
the parameter value.</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDbDataParameter.Size</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>The Size property is used for binary and string types.</para>
                <para>For variable-length data types, the Size property describes the maximum amount of data to transmit
to the server. For example, for a string value, the Size property could be used to limit the amount of data sent to the
server to the first one hundred bytes.</para>
                <para>For nonstring data types and ANSI string data, the Size property refers to the number of bytes.
For Unicode string data, the Size property refers to the number of characters. The count for strings does not include
the terminating character.</para>
                <para>If not explicitly set, the value of Size is inferred from the actual size of the specified parameter
value.</para>
                <para>For fixed-width data types, the value of Size is ignored. It can be retrieved for informational
purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to
the server.</para>
              </section>
            </section>
            <section>
              <title>SourceColumn Property</title>
              <para>Gets or sets the name of the source column mapped to the DataSet and used for loading or returning
the Value.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>string</type>
                <varname>SourceColumn</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>The name of the source column that will be used to set the value of this parameter. The default
is an empty string ("").</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDataParameter.SourceColumn</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>When SourceColumn is set to anything other than an empty string, the value of the parameter is
retrieved from the column with the SourceColumn name. If Direction is set to Input, the value is taken from the DataSet.
If Direction is set to Output, the value is taken from the data source. A Direction of InputOutput is a combination
of both.</para>
              </section>
            </section>
            <section>
              <title>SourceVersion Property</title>
              <para>Gets or sets the DataRowVersion to use when loading Value.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>DataRowVersion</type>
                <varname>DataRowVersion</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>One of the System.Data.DataRowVersion values. The default is Current.</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDataParameter.SourceVersion</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>The SourceVersion is used by UpdateCommand during an Update operation to determine whether the
parameter value is set to Current or Original. This allows primary keys to be updated. This property is ignored by
InsertCommand and DeleteCommand.</para>
                <para>This property is set to the version of the DataRow used by either the Item property
(DataRow indexer), or the GetChildRows method of the DataRow object.</para>
              </section>
            </section>
            <section>
              <title>Value Property</title>
              <para>Gets or sets the value of the parameter.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>object</type>
                <varname>Value</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>An Object that is the value of the parameter. The default value is null.</para>
              </section>
              <section>
                <title>Implements</title>
                <para>IDataParameter.Value</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>For input parameters, the value is bound to the VirtuosoCommand that is sent to the server.
For output and return-value parameters, the value is set on completion of the VirtuosoCommand and after the
VirtuosoDataReader is closed.</para>
                <para>When sending a null parameter value to the server, the user must specify DBNull, not null.
A null value in the system is an empty object that has no value. DBNull is used to represent null values.</para>
                <para>If the application specifies the database type, the bound value is converted to that type when
the provider sends the data to the server. The provider attempts to convert any type of value if it supports the
IConvertible interface. Conversion errors may result if the specified type is not compatible with the value.</para>
                <para>Both the DbType and VirtDbType properties can be inferred by setting Value. If applicable,
the size, precision and scale will also be inferred from Value.</para>
                <para>The Value property is overwritten by the Update method.</para>
              </section>
            </section>
            <section>
              <title>VirtDbType Property</title>
              <para>Gets or sets the VirtDbType of the parameter.</para>
              <fieldsynopsis>
                <modifier>public</modifier>
                <type>VirtDbType</type>
                <varname>VirtDbType</varname>
              </fieldsynopsis>
              <section>
                <title>Property Value</title>
                <para>One of the VirtDbType values. The default is NVarChar.</para>
              </section>
              <section>
                <title>Remarks</title>
                <para>The VirtDbType and DbType are linked. Therefore, setting the DbType changes the VirtDbType
to a supporting VirtDbType.</para>
                <para>For a list of the supported data types, see the appropriate VirtDbType member. For more information,
see "Using Parameters with a DataAdapter" in the Microsoft® .NET Framework SDK documentation.</para>
              </section>
            </section>
          </section>
          <section>
            <title>Methods</title>
            <section>
              <title>ICloneable.Clone Method</title>
              <para>This member supports the Microsoft® .NET Framework infrastructure and is not intended to be used
directly from your code.</para>
              <methodsynopsis>
                <type>object</type>
                <methodname>ICloneable.Clone</methodname>
                <void/>
              </methodsynopsis>
            </section>
            <section>
              <title>ToString Method</title>
              <para>Gets a string containing the ParameterName.</para>
              <methodsynopsis>
                <modifier>public</modifier>
                <modifier>override</modifier>
                <type>string</type>
                <methodname>ToString</methodname>
                <void/>
              </methodsynopsis>
              <section>
                <title>Return Value</title>
                <para>A string containing the ParameterName.</para>
              </section>
            </section>
          </section>
        </section>
