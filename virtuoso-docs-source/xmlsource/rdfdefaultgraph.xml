<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="rdfdefaultgraph">
        <title>Default and Named Graphs</title>
        <para>Sometimes the default graph IRI is not known when the SPARQL query is composed. It can be added at the very last moment by providing the IRI in a 'define' clause as follows:</para>
        <programlisting>
define input:default-graph-uri &amp;lt;http://example.com&amp;gt
</programlisting>
        <para>Such a definition overrides the default graph URI set in query by the 'FROM ...' clause (if any).</para>
        <para>The query may contain more than one <emphasis>define input:default-graph-uri</emphasis>

  .
The set of values of <emphasis>input:default-graph-uri</emphasis>

   has the highest possible priority and cannot be redefined in the rest of the text of the query by FROM clauses.</para>
        <para>FROM NAMED clauses can be used multiple times in one query:</para>
        <programlisting>
SPARQL
  SELECT ?id
  FROM NAMED &lt;http://example.com/user1.ttl&gt;
  OPTION (get:soft "soft", get:method "GET")
  FROM NAMED &lt;http://example.com/user2.ttl&gt;
  OPTION (get:soft "soft", get:method "GET")
  WHERE { GRAPH ?g { ?id a ?o } }
</programlisting>
        <para>Similarly, <emphasis>define input:named-graph-uri &lt;http://example.com&gt;</emphasis>

   is a replacement for a FROM NAMED clause</para>
        <para>
When Virtuoso receives a SPARQL request via HTTP, the value of the default graph can be set in the protocol using a <emphasis>default-graph-uri</emphasis>

   HTTP parameter.
Multiple occurrences of this parameter are allowed. This HTTP parameter is converted into <emphasis>define input:default-graph-uri</emphasis>

  .
There's similar support for <emphasis>named-graph-uri</emphasis>

   HTTP parameter.
For debugging purposes, graph names set in the protocol are sent back in the reply header as <emphasis>X-SPARQL-default-graph: ...</emphasis>

   and <emphasis>X-SPARQL-named-graph: ...</emphasis>

   header lines, one line per graph.
</para>
        <para>
A web service endpoint may provide different default configurations for different host names mentioned in HTTP requests.
This facility is configured via table <emphasis>DB.DBA.SYS_SPARQL_HOST</emphasis>

  .
</para>
        <programlisting>
create table DB.DBA.SYS_SPARQL_HOST (
  SH_HOST	varchar not null primary key, -- host mask
  SH_GRAPH_URI varchar,                 -- default graph uri
  SH_USER_URI	varchar,                  -- reserved for any use in applications
  SH_BASE_URI varchar,                  -- for future use (not used currently) to set BASE in sparql queries. Should be NULL for now.
  SH_DEFINES long varchar,              -- additional defines for requests
  PRIMARY KEY (SH_HOST)
)
</programlisting>
        <para>
When the SPARQL web service endpoint receives a request it checks the <emphasis>Host</emphasis>

   HTTP header line.
This line contains zero or more target host names, delimited by commas.
For every host name in the line, the service scans the <emphasis>DB.DBA.SYS_SPARQL_HOST</emphasis>

   table in search of a
row containing a matching host name in <emphasis>SH_HOST</emphasis>

  .
The <emphasis>SH_HOST</emphasis>

   field acts as 'pattern' argument for the SQL string operator LIKE. If a matching row is found,
the text of SPARQL request is extended.</para>
        <para>
If a default graph is not explicitly set by the HTTP parameters and <emphasis>SH_GRAPH_URI</emphasis>

   is not null then the
default graph is set to <emphasis>SH_GRAPH_URI</emphasis>

  .</para>
        <para>
If <emphasis>SH_DEFINES</emphasis>

   is not null then it is added in front of the query; so this field is a good place for the
text for any <link linkend="rdfsparqlimplementationextent">DEFINE</link>

   options.
See <link linkend="rdfcontrollingsparqloutputtypes">various</link>

   DEFINE examples usage.
</para>
        <para>SH_USER_URI is for arbitrary user data and can be used in any way by the
application that is "responsible" for the declared host.</para>
        <para>
The search of <emphasis>DB.DBA.SYS_SPARQL_HOST</emphasis>

   stops at the first found row, other possible matches are silently ignored.
</para>
        <para>Example Usage:</para>
        <programlisting>
INSERT INTO DB.DBA.SYS_SPARQL_HOST (SH_HOST, SH_GRAPH_URI, SH_USER_URI, SH_BASE_URI, SH_DEFINES) VALUES
('example.com', 'urn:example:com', 'urn:example:user', NULL, 'define input:inference "http://mygraph.com"');
</programlisting>
      </section>
