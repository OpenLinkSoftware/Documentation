<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_registry_name_is_protected">
      <refmeta>
        <refentrytitle>registry_name_is_protected
</refentrytitle>
        <refmiscinfo>sql
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>registry_name_is_protected
</refname>
        <refpurpose>The function checks if a given registry variable is read-only or protected from occasional changes.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_registry_name_is_protected">
          <funcprototype xml:id="fproto_registry_name_is_protected">
            <funcdef>
              <function>registry_name_is_protected
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>name
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_registry_name_is_protected">
        <title>Description
</title>
        <para>Some registry variables are used solely by internal server routines so they should not be changed by any application.
Some of these "protected" variables can be updated by DBA only (in built-in Virtuoso/PL routines)
whereas some can not be updated by any Virtuoso/PL routine at all.
</para>
        <para>The function gets a variable name as a parameter and returns zero if such a variable variable can be created/modified/removed by
any application, one if a variable can be modified by DBA but can not be removed and two if the variable can not be altered even by DBA.</para>
        <para>The returned value does not indicate that the variable exists or not exists. The name of not yet existing variable can
be protected anyway to prevent future misuse of an variable by an application.</para>
        <para>The name of any protected variable starts with two underscores. It can be a good idea to not start names of
application-specific registry variable with two underscores to ensure compatibility with future versions of Virtuoso Server.
</para>
      </refsect1>
      <refsect1 xml:id="params_registry_name_is_protected">
        <title>Parameters
</title>
        <refsect2>
          <title>name
</title>
          <para>The name of registry variable to check.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_registry_name_is_protected">
        <title>Return Types
</title>
        <para>The function returns an integer
</para>
      </refsect1>
      <refsect1 xml:id="examples_registry_name_is_protected">
        <title>Examples
</title>
        <example xml:id="ex_registry_name_is_protected">
          <title>Two checks of variable names
</title>
          <para>One name can be used by any application, other is for internal use in the FTP server:
</para>
          <screen>
&gt; select registry_name_is_protected ('my_example');
0

&gt; select registry_name_is_protected ('__next_free_port');
1
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_registry_name_is_protected">
        <title>See Also
</title>
        <para>
          <link linkend="fn_registry_get">
            <function>registry_get
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_registry_get_all">
            <function>registry_get_all
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_registry_set">
            <function>registry_set
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_registry_remove">
            <function>registry_remove
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_sequence_get_all">
            <function>sequence_get_all
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_sequence_next">
            <function>sequence_next
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_sequence_set">
            <function>sequence_set
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_sequence_remove">
            <function>sequence_remove
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
