<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_http_get">
      <refmeta>
        <refentrytitle>http_get
</refentrytitle>
        <refmiscinfo>ws
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>http_get
</refname>
        <refpurpose>returns a varchar containing the body of the request uri
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_http_get">
          <funcprototype xml:id="fprot_http_get">
            <funcdef>varchar 
<function>http_get
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>target_uri
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">out 
<parameter>return_header
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>http_method
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>request_header
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>request_body
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>proxy
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_http_get">
        <title>Description
</title>
        <para>http_get returns a varchar containing the body of the
requested target_uri or NULL if the body is not received.
</para>
      </refsect1>
      <refsect1 xml:id="params_http_get">
        <title>Parameters
</title>
        <refsect2>
          <title>target_uri
</title>
          <para>HTTP target in form http://&lt;target_host&gt;:&lt;target_port&gt;/&lt;path&gt;
(if &lt;target_port&gt; is not given then 80 will be used by default)
</para>
        </refsect2>
        <refsect2>
          <title>return_header
</title>
          <para>This output parameter is set to the array of HTTP
response header lines from the target server, if the parameter is a  constant it will be ignored.
</para>
        </refsect2>
        <refsect2>
          <title>http_method
</title>
          <para>This parameter will be used to specify the HTTP request method.
Possible values are: GET, POST, PUT, OPTIONS or see RFC2616[5.1.1] for
details. 
</para>
        </refsect2>
        <refsect2>
          <title>request_header
</title>
          <para>This string will be sent to the target server together with other
header fields. If more than one header field should be sent then header fields must be separated
with CR/LF pair. (Warning: this string must not be terminated with CR/LF pair!).
</para>
        </refsect2>
        <refsect2>
          <title>request_body
</title>
          <para>This string will be sent to the target server as the request body.
The  "Content-Length" header field is set to the length of this string.
</para>
        </refsect2>
        <refsect2>
          <title>proxy
</title>
          <para>If this parameter is supplied  the request will be passed through this HTTP proxy. The format is  &lt;proxy_host&gt;:&lt;proxy_port&gt; .
</para>
          <para>Supports:
</para>
          <programlisting>
http://[user:pass@]host:port - user &amp; pass are optional
</programlisting>
          <programlisting>
socks4://[user:pass@]host:port - user &amp; pass are optional
</programlisting>
          <programlisting>
socks5://[user:pass@]host:port - user &amp; pass are optional
</programlisting>
          <programlisting>
socks5-host://[user:pass@]host:port - user &amp; pass are optional
</programlisting>
          <para>In the INI file, in section HTTPServer should be set:</para>
          <programlisting>
HTTPProxyServer       = proxytest:3128
HTTPProxyExceptions   = localhost:8890, 127.0.0.1:8890
</programlisting>
          <para>Exception could be also 127.0.0.* i.e. there could have also wildcard.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="errors_http_get">
        <title>Errors
</title>
        <table>
          <title>Errors signalled by
</title>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>SQLState
</entry>
                <entry>Error Code
</entry>
                <entry>Error Text
</entry>
                <entry>Description
</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <errorcode/>
                </entry>
                <entry>
                  <errorcode>HT001 
</errorcode>
                </entry>
                <entry>
                  <errortext>Not valid host name or host IP address
</errortext>
                </entry>
                <entry/>
              </row>
              <row>
                <entry>
                  <errorcode/>
                </entry>
                <entry>
                  <errorcode>HT002 
</errorcode>
                </entry>
                <entry>
                  <errortext>Target host is unreachable
</errortext>
                </entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </table>
      </refsect1>
      <refsect1 xml:id="examples_http_get">
        <title>Examples
</title>
        <example xml:id="ex_http_get">
          <title>Using http_get()
</title>
          <programlisting>
declare header any;
page := http_get ('http://www.openlinksw.com/');
...
page := http_get ('http://www.openlinksw.com/',
		header, 'GET', 'If-Modified-Since: Fri, 21 Jul 2000 11:19:45 GMT');
...
page := http_get ('http://example.com/some_link.html',
		header, 'POST', '', 'a=1&amp;b=2');
...
page := http_get ('http://www.openlinksw.com/',
		NULL, 'GET', '', '', 'proxy.server.com:8080');
</programlisting>
        </example>
      </refsect1>
    </refentry>
