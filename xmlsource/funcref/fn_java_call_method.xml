<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_java_call_method">
      <refmeta>
        <refentrytitle>java_call_method
</refentrytitle>
        <refmiscinfo>jvmpl
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>java_call_method
</refname>
        <refpurpose/>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_java_call_method">
          <funcprototype xml:id="fproto_java_call_method">
            <funcdef>
              <function>java_call_method
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>class_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>instance_obj
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>method_name
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>method_ret_sig
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">
              <parameter>arg1, ...
</parameter>
            </paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_java_call_method">
        <title>Description
</title>
        <para>Calls a class method using the supplied parameters (if any) and returns 
    the return value (if any).  If instance_obj is supplied (not NULL) then this 
    function searches for a non-static method otherwise for static.
</para>
      </refsect1>
      <refsect1 xml:id="params_java_call_method">
        <title>Parameters
</title>
        <refsect2>
          <title>class_name
</title>
          <para>The name of the Java class.
</para>
        </refsect2>
        <refsect2>
          <title>instance_obj
</title>
          <para>the Java VM class instance reference value (for example returned 
      by java_new_object VSEI). Can be NULL.
</para>
        </refsect2>
        <refsect2>
          <title>method_name
</title>
          <para>the name of the method to call
</para>
        </refsect2>
        <refsect2>
          <title>metjod_ret_name
</title>
          <para>the JNI type signature of the method's return value (or V for void).
</para>
        </refsect2>
        <refsect2>
          <title>arg1, ...
</title>
          <para>method parameters (as in java_new_object).
</para>
        </refsect2>
      </refsect1>
      <!--
  <refsect1
xml:id="ret_java_call_method"><title>Return Types</title>
    <para></para>
  </refsect1>
  <refsect1
xml:id="examples_java_call_method">
    <title>Examples</title>
    <example
xml:id="ex_java_call_method"><title></title>
      <para></para>
      <screen><![CDATA[
]]>
</screen>
    </example>
  </refsect1>
  -->

      <refsect1 xml:id="seealso_java_call_method">
        <title>See Also
</title>
        <para>
          <link linkend="fn_java_vm_attach">
            <function>java_vm_attach()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_java_set_property">
            <function>java_set_property()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_java_get_property">
            <function>java_get_property()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_java_load_class">
            <function>java_load_class()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_java_new_object">
            <function>java_new_object()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_java_vm_detach">
            <function>java_vm_detach()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
