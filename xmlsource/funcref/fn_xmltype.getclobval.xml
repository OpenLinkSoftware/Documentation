<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xmltype.getclobval">
      <refmeta>
        <refentrytitle>XMLType.getClobVal
</refentrytitle>
        <refmiscinfo>xml
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>XMLType.getClobVal
</refname>
        <refpurpose>This function returns the serialization of the current node like XPATH function 'serialize()', i.e. a text in XML syntax.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xmltype.getclobval">
          <funcprototype xml:id="fproto_xmltype.getclobval">
            <funcdef>
              <function>XMLType.getClobVal
</function>
            </funcdef>
            <paramdef choice="opt"/>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xmltype.getclobval">
        <title>Description
</title>
        <para>This function returns the serialization of the current node. This is similar to the XPATH function
    	'serialize()', i.e. a text in XML syntax.
</para>
      </refsect1>
      <refsect1 xml:id="ret_xmltype.getclobval">
        <title>Return Types
</title>
        <para>The function returns wide string.
</para>
      </refsect1>
      <refsect1 xml:id="examples_xmltype.getclobval">
        <title>Examples
</title>
        <example xml:id="ex_xmltype.getclobval">
          <title>A table with an XMLType column
</title>
          <para>This populates a table with XML data and then selects string representation of 'ename' element from
      	the appropriate record.</para>
          <screen>
create table TEST_XMLS  (I integer primary key, XMLVAL XMLType);
insert into TEST_XMLS  values (1, XMLType('&lt;emp&gt;&lt;empno&gt;221&lt;/empno&gt;&lt;ename&gt;John&lt;/ename&gt;&lt;/emp&gt;'));
insert into TEST_XMLS  values (2, XMLType('&lt;po&gt;&lt;pono&gt;331&lt;/pono&gt;&lt;poname&gt;PO_1&lt;/poname&gt;&lt;/po&gt;'));
insert into TEST_XMLS  values (3, XMLType('&lt;oil-rig
xml:id="14a_02" water="0.413"/&gt;&lt;oil-rig
xml:id="14b_02" water="0.402"/&gt;'));
select e.XMLVAL.extract ('//ename').getCLobVal() as ENAME
  from TEST_XMLS  as e
 where e.XMLVAL.existsNode('/emp/empno')
ENAME
NVARCHAR
_______________________________________________________________________________

&lt;ename&gt;John&lt;/ename&gt;

1 Rows. -- 00000 msec.
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xmltype.getclobval">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xmltype.getstringval">
            <function>XMLType.getStringVal()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xmltype.getnumval">
            <function>XMLType.getNumVal()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
