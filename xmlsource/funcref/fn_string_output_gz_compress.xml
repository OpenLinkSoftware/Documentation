<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_string_output_gz_compress">
      <refmeta>
        <refentrytitle>string_output_gz_compress
</refentrytitle>
        <refmiscinfo>compression
</refmiscinfo>
        <refmiscinfo>string
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>string_output_gz_compress
</refname>
        <refpurpose>compress a string_output with gzip algorithm
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_string_output_gz_compress">
          <funcprototype xml:id="fproto_string_output_gz_compress">
            <funcdef>
              <function>string_output_gz_compress
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>str_out_in
</parameter>

   string_session
</paramdef>
            <paramdef choice="opt">out 
<parameter>str_out_out
</parameter>

   string_session
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_string_output_gz_compress">
        <title>Description
</title>
        <para>The string_output_gz_compress compresses its string_output argument using the gzip
    algorithm and writes the result to another string_output given as an argument.
    When successful, the number of bytes written to <parameter>str_out_out</parameter>

    is returned.
</para>
      </refsect1>
      <refsect1 xml:id="params_string_output_gz_compress">
        <title>Parameters
</title>
        <refsect2>
          <title>str_out_in
</title>
          <para>A string session as returned by 
<function>string_output
</function>

   function.
</para>
        </refsect2>
        <refsect2>
          <title>str_out_out
</title>
          <para>A string session as returned by 
<function>string_output
</function>

   function.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_string_output_gz_compress">
        <title>Return Types
</title>
        <para><type>INTEGER
</type>

   number of bytes written to 
<parameter>str_out_out
</parameter>

</para>
      </refsect1>
      <!--  
<refsect1
xml:id="errors_string_output_gz_compress">
    <title>Errors</title>
    <table>
      <title>Errors signalled by</title>
      <tgroup cols="4">
       <thead>
         <row>
           <entry>SQLState</entry>
           <entry>Error Code</entry>
           <entry>Error Text</entry>
           <entry>Description</entry></row></thead>
	<tbody>
	  <row>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorcode></errorcode></entry>
	    <entry><errortext></errortext></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1> -->

      <refsect1 xml:id="examples_string_output_gz_compress">
        <title>Examples
</title>
        <example xml:id="ex_string_output_gz_compress_1">
          <title>GZIP test
</title>
          <para>Test if the gzip implementation works.
</para>
          <screen>
create procedure
gz_test_1 (in fname varchar)
{
  declare dta, dta_2, res any;
  declare len integer;

  res := string_output ();
  dta_2 := string_output ();
  dta := file_to_string_output (fname);

  result_names (len);

  -- send length of input to client

  result (length (dta));

  -- compress and return compressed size.

  result (string_output_gz_compress (dta, res));
  gz_uncompress (string_output_string (res), dta_2);

  if (md5 (dta) &lt;&gt; md5 (dta_2))
    signal ('SNAFU', 'GZIP algorithm implementation is faulty.');

  result (length (dta));
  end_result();
}
;

SQL&gt; gz_test_1 ('tmp/test.dat');
len
INTEGER
_______________________________________________________________________________

11689
2477
11689

3 Rows. -- 11 msec.
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_string_output_gz_compress">
        <title>See Also
</title>
        <para>
          <link linkend="fn_string_output">string_output
</link>
        </para>
      </refsect1>
    </refentry>
