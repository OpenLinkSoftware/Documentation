<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xmltype.xmltype">
      <refmeta>
        <refentrytitle>XMLType.XMLType
</refentrytitle>
        <refmiscinfo>xml
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>XMLType.XMLType
</refname>
        <refpurpose/>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xmltype.xmltype">
          <funcprototype xml:id="fproto_xmltype.xmltype">
            <funcdef>constructor method 
<function>XMLType.XMLType
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>src
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>schema_uri
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>validated
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>wellformed
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_xmltype.xmltype">
        <title>Description
</title>
        <para>The method creates an XMLType instance from 
<parameter>src
</parameter>

   XML entity.
If parameter <parameter>src</parameter>

   is not an XML entity then it is converted to it
via internal call of <function>xtree_doc()</function>

   or <function>xml_tree_doc()</function>

  .
A schema may be associated with an XML entity
by passing its URI as <parameter>schema_uri</parameter>

  ; this schema can be used later to
validate the structure of the document.
</para>
      </refsect1>
      <refsect1 xml:id="params_xmltype.xmltype">
        <title>Parameters
</title>
        <refsect2>
          <title>src
</title>
          <para>An XML entity or a value that can be converted to an XML entity.
</para>
        </refsect2>
        <refsect2>
          <title>schema_uri
</title>
          <para>An URI of the schema of the document. The default is NULL to make result non-schema based.
</para>
        </refsect2>
        <refsect2>
          <title>validated
</title>
          <para>An integer flag that indicates if the document is already validated against the
schema of the document (this is to avoid redundant validations). The default is 0.
</para>
        </refsect2>
        <refsect2>
          <title>wellformed
</title>
          <para>This parameter is unused and is listed solely for compatibility.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_xmltype.xmltype">
        <title>Return Types
</title>
        <para>The method returns a new instance of XMLType.
</para>
      </refsect1>
      <refsect1 xml:id="examples_xmltype.xmltype">
        <title>Examples
</title>
        <example xml:id="ex_xmltype.xmltype">
          <title>Simple Use
</title>
          <screen>
create table XMLTYPE_TEST (I integer primary key, XMLVAL long xml)

Done. -- 00000 msec.

insert into XMLTYPE_TEST values (1, XMLType('&lt;emp&gt;&lt;empno&gt;221&lt;/empno&gt;&lt;ename&gt;John&lt;/ename&gt;&lt;/emp&gt;'))

Done. -- 00000 msec.

insert into XMLTYPE_TEST values (2, XMLType('&lt;po&gt;&lt;pono&gt;331&lt;/pono&gt;&lt;poname&gt;PO_1&lt;/poname&gt;&lt;/po&gt;'))

Done. -- 00000 msec.

select e.XMLVAL.extract ('//empno/text()').getNumVal() as EMPNO
  from XMLTYPE_TEST as e
  where e.XMLVAL.existsNode('/emp/empno') = 1
EMPNO
DECIMAL
_______________________________________________________________________________

221

1 Rows. -- 00000 msec.
</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_xmltype.xmltype">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xtree_doc">
            <function>xtree_doc()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_xper_doc">
            <function>xper_doc()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
