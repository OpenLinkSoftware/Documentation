<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_string_output_string">
      <refmeta>
        <refentrytitle>string_output_string
</refentrytitle>
        <refmiscinfo>string
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>string_output_string
</refname>
        <refpurpose>produce a string out of a string output stream
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_string_output_string">
          <funcprototype xml:id="fproto_string_output_string">
            <funcdef>
              <function>string_output_string
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>string_out
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_35">
        <title>Description
</title>
        <para>This function is used to produce a string from contents of a
    string output stream. See
    <link linkend="fn_string_output"><function>string_output</function></link>

    for more information about string output streams.
</para>
      </refsect1>
      <refsect1 xml:id="params_09">
        <title>Parameters
</title>
        <refsect2>
          <title>string_out
</title>
          <para>The string output stream
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_03_01">
        <title>Return Values
</title>
        <para>A 
<type>varchar
</type>

   with the contents of the string output
    stream.
</para>
      </refsect1>
      <refsect1 xml:id="examples_06_01">
        <title>Examples
</title>
        <example xml:id="ex_string_output_string">
          <title>Convert string output stream into a string
</title>
          <para>Create a string output, write 'foo' and ' bar' into it, convert
      to string and produce a result.</para>
          <screen>
SQL&gt; create procedure
ex_string_output_string ()
{
  declare s_out any; s_out := string_output();
  declare s varchar;

  result_names (s);
  http('foo', s_out);
  http(' bar', s_out);
  s := string_output_string (s_out);
  result (s);
}
;

SQL&gt; ex_string_output_string ();
s
VARCHAR NOT NULL
_______________________________________________________________________________

foo bar

1 Rows. -- 5 msec.

</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_16">
        <title>See Also
</title>
        <para><link linkend="fn_string_output"><function>string_output
</function></link>

  , 
<link linkend="fn_http"><function>http
</function></link>

  ,
    <link linkend="fn_http_value"><function>http_value</function></link>

  ,
    <link linkend="fn_http_rewrite"><function>http_rewrite</function></link>

  .
    </para>
      </refsect1>
    </refentry>
