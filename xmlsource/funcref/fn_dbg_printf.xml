<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_dbg_printf">
    <refmeta>
        <refentrytitle>dbg_printf
        </refentrytitle>
        <refmiscinfo>debug
        </refmiscinfo>
    </refmeta>
    <refnamediv>
        <refname>dbg_printf
        </refname>
        <refpurpose>print formatted output onto the system console
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_dbg_printf">
            <funcprototype xml:id="fproto_dbg_printf">
                <funcdef>
                    <function>dbg_printf
                    </function>
                </funcdef>
                <paramdef choice="opt">in
                    <parameter>format
                    </parameter>

                    varchar
                </paramdef>
                <paramdef choice="opt">in
                    <parameter>arg1
                    </parameter>

                    any
                </paramdef>
                <paramdef choice="opt">
                    <parameter>...
                    </parameter>
                </paramdef>
                <paramdef choice="opt">in
                    <parameter>argn
                    </parameter>

                    any
                </paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <refsect1 xml:id="desc_dbg_printf">
        <title>Description
        </title>
        <para>
            <function>dbg_printf
            </function>

            prints a variable number
            (max. eight) of arguments to the system console of Virtuoso server,
            each argument formatted in C
            <function>printf</function>

            style,
            according to the format string specified in the first argument.
        </para>
    </refsect1>
    <refsect1 xml:id="params_dbg_printf">
        <title>Parameters
        </title>
        <refsect2>
            <title>format
            </title>
            <para>a C sprintf -style format
                <type>string
                </type>

            </para>
        </refsect2>
        <refsect2>
            <title>argn
            </title>
            <para>The arguments to format and print in any type
            </para>
        </refsect2>
    </refsect1>
    <refsect1 xml:id="ret_dbg_printf">
        <title>Return Values
        </title>
        <para>None
        </para>
    </refsect1>
    <refsect1 xml:id="examples_dbg_printf">
        <title>Examples
        </title>
        <example xml:id="ex_dbg_printf_1">
            <title>Simple example
            </title>
            <para>The frammitz just zilched!
            </para>
            <screen>
                if (frammitz_status 0)
                {
                dbg_printf ('Error: Frammitz status: %d.\nProgram terminated',
                frammitz_status);
                signal ('42666', 'Frammitz zilched');
                }
            </screen>
            <para>Hitting these lines would cause something like this in a client:</para>
            <screen>*** Error 42666: [Virtuoso Driver][Virtuoso Server]Frammitz zilched at line 84 (84) of Top-Level:
                zappi()
            </screen>
            <para>The console output would look like this:</para>
            <screen>Error: Frammitz status: 2.
                Program terminated

            </screen>
        </example>
    </refsect1>
    <refsect1 xml:id="seealso_dbg_printf">
        <title>See Also
        </title>
        <para>
            <link linkend="fn_sprintf">sprintf()
            </link>
        </para>
        <para>
            <link linkend="fn_log_message">log_message()
            </link>
        </para>
    </refsect1>
</refentry>
