<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_checkpoint_interval">
      <refmeta>
        <refentrytitle>checkpoint_interval
</refentrytitle>
        <refmiscinfo>admin
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>checkpoint_interval
</refname>
        <refpurpose>Configure database checkpointing
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_checkpoint_interval">
          <funcprototype xml:id="fproto_checkpoint_interval">
            <funcdef>integer 
<function>checkpoint_interval
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>minutes
</parameter>

   integer
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_checkpoint_interval">
        <title>Description
</title>
        <para>This function changes the database checkpointing interval to the given
      value in minutes. It may also be used to disable checkpointing in two
      ways: By setting checkpoint interval to 0, the checkpoint will only be
      performed after roll forward upon database startup. A setting of -1
      will disable all checkpointing. Main use for this function is to
      ensure a clean online backup of the database slices. Copying of the
      database may take long and checkpointing would modify those files in
      mid-copy, thus rendering the resulting copy unusable. In case the
      system should, for some reason or another, become unstable, it is
      sometimes better to disable checkpointing after a database restart
      to resume backing up from where it was left prior to a system crash.
      Disabling all checkpointing by giving checkpoint_interval the value
      of -1 will do just that.</para>
        <para>The interval setting will be saved in the server configuration
      file as value of CheckpointInterval in section [Parameters], thus it
      will persist over consecutive server shutdown/restart cycles. A
      long checkpoint_interval setting will produce longer transaction
      logs, which in turn prolongs the time it takes for the database to
      perform a roll forward upon restart in case it was shut down without
      making a checkpoint.
</para>
      </refsect1>
      <refsect1 xml:id="params_checkpoint_interval">
        <title>Parameters
</title>
        <refsect2>
          <title>minutes
</title>
          <para><type>integer
</type>

   number of minutes between checkpoints.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_checkpoint_interval">
        <title>Return Types
</title>
        <para>Previous value of CheckpointInterval in the configuration file as an integer.
</para>
      </refsect1>
      <refsect1 xml:id="errors_checkpoint_interval">
        <title>Errors
</title>
        <para>
          <link linkend="datatypeerror">Parameter data type checking errors
</link>
        </para>
      </refsect1>
      <refsect1 xml:id="examples_checkpoint_interval">
        <title>Examples
</title>
        <example xml:id="ex_checkpoint_interval">
          <title>Simple examples
</title>
          <para>Disable checkpoints:
</para>
          <screen>SQL&gt; checkpoint_interval(-1);

Done. -- 25 msec.
</screen>
          <para>Re-enable checkpoints (every 2 hrs):</para>
          <screen>SQL&gt; checkpoint_interval(120);
callret
VARCHAR
______________________________________________________

-1

Done. -- 4 msec.

</screen>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_checkpoint_interval">
        <title>See Also
</title>
        <para>
          <link linkend="fn_backup">
            <function>backup
</function>
          </link>
        </para>
        <para>
          <link linkend="configsrvstupfiles">CheckpointInterval setting in Configuring Server Startup Files section
</link>
        </para>
      </refsect1>
    </refentry>
