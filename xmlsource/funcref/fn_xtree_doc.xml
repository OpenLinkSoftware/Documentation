<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_xtree_doc">
      <refmeta>
        <refentrytitle>xtree_doc
</refentrytitle>
        <refmiscinfo>xml
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>xtree_doc
</refname>
        <refpurpose>returns an entity object created from an XML document
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_xtree_doc">
          <funcprototype xml:id="fproto_xtree_doc">
            <funcdef>
              <function>xtree_doc
</function>
            </funcdef>
            <paramdef choice="opt">in 
<parameter>document
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>parser_mode
</parameter>

   integer
</paramdef>
            <paramdef choice="opt">in 
<parameter>base_uri
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>content_encoding
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>content_language
</parameter>

   varchar
</paramdef>
            <paramdef choice="opt">in 
<parameter>dtd_validator_config
</parameter>

   varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_81">
        <title>Description
</title>
        <para>This parses the argument, which is expected to be a well formed XML fragment and returns a
parse tree as a special memory-resident object. While <link linkend="fn_xper_doc">xper_doc</link>

   creates
some disk-resident data structure, xtree_doc() will work faster but it may require more memory. You may
wish to use xtree_doc for small documents (e.g. less than 5 megabytes and xper_doc for larger documents.

</para>
      </refsect1>
      <refsect1 xml:id="params_43">
        <title>Parameters
</title>
        <refsect2>
          <title>document
</title>
          <para>well formed XML or HTML document
</para>
        </refsect2>
        <refsect2>
          <title>parser_mode
</title>
          <para>0, 1 or 2; 0 - XML parser mode, 1 - HTML parser mode, 2 - 'dirty HTML'
mode (with quiet recovery after any syntax error)
</para>
        </refsect2>
        <refsect2>
          <title>base_uri
</title>
          <para>in HTML parser mode change all absolute references to relative from given
base_uri (http://&lt;host&gt;:&lt;port&gt;/&lt;path&gt;)
</para>
        </refsect2>
        <refsect2>
          <title>content_encoding
</title>
          <para>string with content encoding type of &lt;document&gt;; valid are 'ASCII', 'ISO',
'UTF8', 'ISO8859-1', 'LATIN-1' etc., defaults are 'UTF-8' for XML mode and 'LATIN-1' for
HTML mode.
</para>
        </refsect2>
        <refsect2>
          <title>content_language
</title>
          <para>string with language tag of content of &lt;document&gt;; valid names are listed in
IETF RFC 1766, default is 'x-any' (it means 'mix of words from various human languages')
</para>
        </refsect2>
        <refsect2>
          <title>dtd_validator_config
</title>
          <para>configuration string for DTD validator, default is empty string meaning that DTD
validator should be fully disabled.
See 
<link linkend="dtd_config">Configuration Options of the DTD Validator
</link>

   for details.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_26">
        <title>Return Types
</title>
        <para>XML entity with underlying parse tree
of source document; the tree will be a memory-resident structure of nested heterogeneous
vectors.</para>
      </refsect1>
      <!--
  <refsect1
xml:id="errors_17"><title>Errors</title>
    <table><title>Errors signalled by</title>
      <tgroup cols="4">

<thead>
<row>
<entry>SQLState
</entry>
<entry>Error Code
</entry>
<entry>Error Text
</entry>
<entry>Description
</entry>
</row>
</thead>
	<tbody>
	  <row>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorcode></errorcode></entry>
	    <entry><errortext></errortext></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
-->

      <refsect1 xml:id="examples_28">
        <title>Examples
</title>
        <example xml:id="ex_xtree_doc">
          <title>xtree_doc
</title>
          <programlisting>
declare tree any;

tree := xtree_doc (file_to_string ('doc.html'), 1,
		'http://localhost.localdomain/', 'ISO');
...
tree := xtree_doc (file_to_string ('doc.xml'));

</programlisting>
        </example>
      </refsect1>
      <refsect1 xml:id="seealso_51">
        <title>See Also
</title>
        <para>
          <link linkend="fn_xml_tree">xml_tree
</link>
        </para>
        <para>
          <link linkend="fn_xml_tree_doc">xml_tree_doc
</link>
        </para>
        <para>
          <link linkend="fn_xper_doc">xper_doc
</link>
        </para>
      </refsect1>
    </refentry>
