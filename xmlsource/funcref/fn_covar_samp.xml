<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_covar_samp">
      <refmeta>
        <refentrytitle>COVAR_SAMP
</refentrytitle>
        <refmiscinfo>aggr
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>COVAR_SAMP
</refname>
        <refpurpose>Returns the sample covariance of a set of number pairs.
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_covar_samp">
          <funcprototype xml:id="fproto_covar_samp">
            <funcdef>numeric 
<function>COVAR_SAMP
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>expr1
</parameter>

   any
</paramdef>
            <paramdef choice="opt">in 
<parameter>expr2
</parameter>

   any
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_covar_samp">
        <title>Description
</title>
        <para>COVAR_SAMP returns the sample covariance of a set of number pairs.  Both expr1 and expr2 are numeric expressions. Virtuoso applies the function to the set of (expr1, expr2) pairs after eliminating
all pairs for which either expr1 or expr2 is null. Then Virtuoso makes the following computation:
</para>
        <programlisting>(SUM(expr1 * expr2) - SUM(expr2) * SUM(expr1) / n) / (n-1)
</programlisting>
        <para>where n is the number of (expr1, expr2) pairs where neither expr1 nor expr2 is null.
</para>
      </refsect1>
      <refsect1 xml:id="params_covar_samp">
        <title>Parameters
</title>
        <refsect2>
          <title>expr1
</title>
          <para>Number expression.
</para>
        </refsect2>
        <refsect2>
          <title>expr2
</title>
          <para>Number expression.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="ret_covar_samp">
        <title>Return Types
</title>
        <para>The function returns a value of type NUMERIC. If the function is applied to an empty set, then it
returns null.</para>
      </refsect1>
      <!--
  <refsect1
xml:id="errors_covar_samp">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
-->

      <!-- refsect1
xml:id="examples_covar_samp">
    <title>Examples</title>
    <example
xml:id="ex__16"><title></title>
      <para></para>
      <screen><![CDATA[
]]>
</screen>
    </example>
  </refsect1 -->

      <refsect1 xml:id="seealso_covar_samp">
        <title>See Also
</title>
        <para>
          <link linkend="fn_var">
            <function>VAR()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_var_samp">
            <function>VAR_SAMP()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_var_pop">
            <function>VAR_POP()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_stddev">
            <function>STDDEV()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_stddev_samp">
            <function>STDDEV_SAMP()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_stddev_pop">
            <function>STDDEV_POP()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_syy">
            <function>REGR_SYY()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_sxx">
            <function>REGR_SXX()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_sxy">
            <function>REGR_SXY()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_avgx">
            <function>REGR_AVGX()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_avgy">
            <function>REGR_AVGY()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_r2">
            <function>REGR_R2()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_count">
            <function>REGR_COUNT()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_intercept">
            <function>REGR_INTERCEPT()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_regr_slope">
            <function>REGR_SLOPE()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_covar_samp">
            <function>COVAR_SAMP()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_covar_pop">
            <function>COVAR_POP()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_corr">
            <function>CORR()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
