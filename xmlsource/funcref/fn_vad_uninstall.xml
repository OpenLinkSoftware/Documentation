<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="fn_vad_uninstall">
      <refmeta>
        <refentrytitle>VAD_UNINSTALL
</refentrytitle>
        <refmiscinfo>vad
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>VAD_UNINSTALL
</refname>
        <refpurpose>Vad package uninstallation
</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="fsyn_vad_uninstall">
          <funcprototype xml:id="fproto_vad_uninstall">
            <funcdef>varchar DB.DBA.
<function>VAD_UNINSTALL
</function>

</funcdef>
            <paramdef choice="opt">in 
<parameter>package_name 
</parameter>

  varchar
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="desc_60">
        <title>Description
</title>
        <para>Invokes the uninstall operation from interactive SQL or from the
  web user interface. This will:
</para>
        <itemizedlist mark="bullet" spacing="compact">
          <listitem>
            <para>enter into atomic mode
</para>
          </listitem>
          <listitem>
            <para>Check if no other package is using the subject of uninstall
</para>
          </listitem>
          <listitem>
            <para>Run the pre-uninstall SQL script
</para>
          </listitem>
          <listitem>
            <para>Run any post-uninstall SQL code
</para>
          </listitem>
          <listitem>
            <para>Remove all VSP and XSLT and other web resources from their
    designated place in DAV or the Virtuoso Web root where permitted.</para>
          </listitem>
          <listitem>
            <para>If DB.DBA.VAD_UNINSTALL() succeeded the server comes back
    on-line. If there was a failure in mid-uninstall, such as running out
    of disk or some other serious unrecoverable database error, the server
    exits. The failed uninstallation can be undone manually. As usual,
    halting the server, deleting the transaction log file and restarting
    will force the server to start from the checkpoint as if the
    uninstallation was never attempted.
</para>
          </listitem>
        </itemizedlist>
      </refsect1>
      <refsect1 xml:id="params_26">
        <title>Parameters
</title>
        <refsect2>
          <title>package_name
</title>
          <para>name of package '/' version e.g: 'virtodp/1.0'
</para>
        </refsect2>
      </refsect1>
      <!--
  <refsect1
xml:id="ret_19"><title>Return Types</title>
  <para></para></refsect1>
-->

      <!--
  <refsect1
xml:id="errors_11"><title>Errors</title>
    <table><title>Errors signalled by</title>
      <tgroup cols="4">

<thead>
<row>
<entry>SQLState
</entry>
<entry>Error Code
</entry>
<entry>Error Text
</entry>
<entry>Description
</entry>
</row>
</thead>
	<tbody>
	  <row>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorcode></errorcode></entry>
	    <entry><errortext></errortext></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1
xml:id="examples_19"><title>Examples</title>
    <example
xml:id="ex__33"><title></title>
      <para></para>
      <screen></screen>
    </example>
  </refsect1>
-->

      <refsect1 xml:id="seealso_32">
        <title>See Also
</title>
        <para>
          <link linkend="fn_vad_check_uninstallability">
            <function>vad_check_uninstallability()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_vad_check_installability">
            <function>vad_check_installability()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_vad_fail_check">
            <function>vad_fail_check()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_vad_install">
            <function>vad_install()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_vad_safe_exec">
            <function>vad_safe_exec()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_vad_pack">
            <function>vad_pack()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_vad_load_file">
            <function>vad_load_file()
</function>
          </link>
        </para>
        <para>
          <link linkend="fn_vad_check">
            <function>vad_check()
</function>
          </link>
        </para>
      </refsect1>
    </refentry>
