<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="htmlconductorbar">
      <title>HTML based Administration Console (Conductor) Guide</title>
      <info>
        <abstract>
          <para>This section describes how to administer the Virtuoso server from
    the Conductor interface. It primarily allow users to administer the server while giving access
    to many of the features that Virtuoso has to offer providing many conceptual
    demonstrations and introductions.</para>
          <para>Most of the pages from the administration interface are provided to
    help administrators quickly and easily tune the Virtuoso server or navigate
    the various interfaces and features that Virtuoso has to offer.</para>
        </abstract>
      </info>
      <section xml:id="conductorbar">
        <title>Virtuoso Conductor Administration</title>
        <para>The Main Navigation Bar provides different tabs that allow you to administrate
your Virtuoso server or use one of the provided samples.
</para>
        <figure xml:id="adminuimenucutout" floatstyle="1">
          <title>Navigation</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="menu-cutout.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>From "System Admin" you can view and change the Conductor Dashboard, manage user accounts; scheduler;
Virtuoso Server parameter and Access Control Settings. You can also install /upgrade /uninstall Virtuoso
packages and Monitor Virtuoso Server Statistics.
</para>
        <figure xml:id="adminuisystemadmin" floatstyle="1">
          <title>System Administration</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="systemadmin.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>
From "Database" you can administrate your database, manage the Virtuoso Relational Database System,
administrate views, tables, stored procedures, trigger definitions, user define types, backups.
</para>
        <figure xml:id="adminuidatabase" floatstyle="1">
          <title>Database Administration</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="database.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>From "Replication" you can create Snapshot Replications to copy sections of the Database
    to remote locations or use Transactional Replication to keep Virtuoso Servers
    in sync over a definable interval.</para>
        <figure xml:id="adminuireplication" floatstyle="1">
          <title>Replication</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="replication.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>From "Web Application Server" you can configure Virtuoso's WebDAV, and HTTP
Server functionality, which includes management of Virtual Domains &amp; Directories.</para>
        <figure xml:id="adminuiwebdav" floatstyle="1">
          <title>Web Application Server Administration</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="webdav.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>From "XML" you can query Relational and XML Data using SQL, XQUERY, XPATH, and FREE TEXT.</para>
        <figure xml:id="adminuiquerytools" floatstyle="1">
          <title>Query Tools</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="querytools.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>From "Web Services" you can add/ edit/ remove Web Services Endpoints,
perform WSDL Import/Export, manage your BPEL processes.
</para>
        <figure xml:id="adminuiwebservices" floatstyle="1">
          <title>Web Services</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="webservices.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>From "Linked Data" tab you can execute/save/load SPARQL queries, add/edit RDF Mapping, make
      	statistics, manage graphs, import schemas and define namespaces, generated Linked Data Views,
      	upload to the Quad Store:</para>
        <figure xml:id="adminuirdf" floatstyle="1">
          <title>RDF</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rdf.png"/>
            </imageobject>
          </mediaobject>
        </figure>
        <para>Virtuoso's NNTP support which includes linking third-party
    NNTP servers into Virtuoso and controlling access to these servers.</para>
        <figure xml:id="adminuinntp" floatstyle="1">
          <title>NNTP Administration</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="nntp.png"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="admui.runtimehosting">
        <title>Runtime Hosting</title>
        <para>The runtime hosting interfaces require Mono/CLR and Java extension servers.</para>
        <section xml:id="admui.loadedmodules">
          <title>Loaded Modules</title>
          <para>You can view Loaded Modules list and each Module you can "Unload". Also you can browse for Module
and examine its content.
    </para>
          <figure floatstyle="1" xml:id="rth001">
            <title>Loaded Modules</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/rth001.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="admui.importfiles">
          <title>Import Files</title>
          <para>To import files click the "Browse" button and select the class you want to import.
Then click the "Add to list" button.
    </para>
          <figure floatstyle="1" xml:id="rth002">
            <title>Import Files</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/rth002.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="admui.loadodules">
          <title>Modules Grants</title>
          <para>In order to change grants to a particular Module, select the desired
grant value from the "Grant to" list and click the "Add" button.
    </para>
          <figure floatstyle="1" xml:id="rth003">
            <title>Modules Grants</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/rth003.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="admui.webservices">
        <title>Web Services</title>
        <section xml:id="contentcrawler">
          <title>Content Crawler</title>
          <para>          Some of the supported features are:</para>
          <itemizedlist mark="bullet">
            <listitem>
              <para><emphasis>Import Targets</emphasis> : Virtuoso can be set up to retrieve content from external web sites and host it in its own
WebDAV repository via this page.

</para>
              <figure floatstyle="1">
                <title>Web Robot - Crawl Job
</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/dav_rbt_trgt_01.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <figure floatstyle="1">
                <title>Web Robot - Crawl Job
</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/dav_rbt_trgt_02.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <itemizedlist mark="bullet">
                <listitem>
                  <para><emphasis>Target description
</emphasis>  lets you provide a friendly name for the target that you are defining.
</para>
                </listitem>
                <listitem>
                  <para><emphasis>Target URL
</emphasis>  is the url of the web site that you are trying
to retrieve content from. Only the hostname should be provided here, along with the protocol. For
example http://www.myhost.com.</para>
                </listitem>
                <listitem>
                  <para><emphasis>Login name on target</emphasis>  is the username for accessing the remote server,
if required.

</para>
                </listitem>
                <listitem>
                  <para><emphasis>Login password on target
</emphasis>  is the password for the login name above.
</para>
                </listitem>
                <listitem>
                  <para><emphasis>Copy to local DAV collection
</emphasis>  this *mandatory* value will serve
          as the DAV root location if content is stored locally.</para>
                </listitem>
                <listitem>
                  <para><emphasis>Single page download</emphasis>  radio button specifies whether
Virtuoso will retrieved linked content also.</para>
                </listitem>
                <listitem>
                  <para><emphasis>Local Resources Owner</emphasis>  The DAV user that will be the owner
of the content that will copied to DAV.</para>
                </listitem>
                <listitem>
                  <para>The <emphasis>Download only newer than</emphasis>

   field allows you to specify
a datetime value to prevent Virtuoso downloading files that are older than
that datetime.</para>
                </listitem>
                <listitem>
                  <para>Use the <emphasis>Follow links matching (delimited with ;)</emphasis>

   field to limit the content
that is downloaded by specify pattern matching criteria.</para>
                </listitem>
                <listitem>
                  <para><emphasis>Do not follow links matching (delimited with ;)</emphasis>  allows you limit content by
specifying what files not to download.</para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para><emphasis>Use robots.txt</emphasis>  check-box is checked by default.</para>
            </listitem>
            <listitem>
              <para><emphasis>Custom HTTP headers</emphasis>  can be used to specigy custom HTTP headers.</para>
            </listitem>
            <listitem>
              <para><emphasis>Number of HTTP redirects to follow</emphasis>  is set by default to 1.</para>
            </listitem>
            <listitem>
              <para><emphasis>XPath expression for links extraction</emphasis>  allows to be entered custom XPath expression.</para>
            </listitem>
            <listitem>
              <para><emphasis>Crawling depth limit</emphasis>  allows to limit crawling depth. By default is set to "unlimited".</para>
            </listitem>
            <listitem>
              <para><emphasis>Update Interval (minutes)</emphasis>  is on what interval the updated of the crawled data should be performed.</para>
            </listitem>
            <listitem>
              <para><emphasis>Number of threads</emphasis>  allows setting crawling threads.</para>
            </listitem>
            <listitem>
              <para><emphasis>Crawl delay (sec)</emphasis>  allows to be specified a delay. By default is set to "0.00".</para>
            </listitem>
            <listitem>
              <para><emphasis>Store Function</emphasis>  allows to be used a specific stored function for ex. in Semantic Sitemaps crawling.

</para>
              <para>
                <tip>
                  <title>See Also:
</title>
                  <para>
                    <link xlink:href="http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtSetCrawlerJobsGuideSemanticSitemapsFuncExample">Example of Stored Functions.
</link>
                  </para>
                </tip>
              </para>
            </listitem>
            <listitem>
              <para><emphasis>Extract Function</emphasis>  allows to be used a specific extract function for ex. in Semantic Sitemaps crawling. If left empty, will be used a system Store function.

</para>
              <para>
                <tip>
                  <title>See Also:
</title>
                  <para>
                    <link xlink:href="http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtSetCrawlerJobsGuideSemanticSitemapsFuncExample">Example of Stored Functions.
</link>
                  </para>
                </tip>
              </para>
            </listitem>
            <listitem>
              <para><emphasis>Semantic Web Crawling</emphasis> : hatch to retrieve Semantic Sitemaps. If left empty, will be used a system Store function.</para>
            </listitem>
            <listitem>
              <para><emphasis>If Graph IRI is unassigned use this Data Source URL:</emphasis>  use to specify a custom graph URI for data storage.</para>
            </listitem>
            <listitem>
              <para><emphasis>Follow URLs outside of the target host</emphasis>  is check-box to specify either to follow URIS outside of the target host.</para>
            </listitem>
            <listitem>
              <para><emphasis>Follow HTML meta link</emphasis>  is check-box to specifiy either to follow HTML meta links.</para>
            </listitem>
            <listitem>
              <para><emphasis>Follow RDF properties (one IRI per row)</emphasis> .</para>
            </listitem>
            <listitem>
              <para><emphasis>Download Images</emphasis>  radio buttons to allow Virtuoso to pull
down image type also. You may want to prevent this if you are more interested
in the textual content rather than bandwidth draining images.</para>
            </listitem>
            <listitem>
              <para><emphasis>Use WebDAV methods</emphasis>  can be checked if the host is known to
support WebDAV methods. This would enable better copying of sites that support DAV.</para>
            </listitem>
            <listitem>
              <para><emphasis>Delete if remove on remote detected</emphasis>  can be switched on
so that when Virtuoso synchronizes its content with that on the remote host
it will check for files that have been removed on the remote and remove
them from the local copy also.</para>
            </listitem>
            <listitem>
              <para><emphasis>Store metadata*</emphasis>  when checked offers to be stored respectively
metadata from FOAF, RDF, RSS/RDF and GRDLL data depending on which check-box is checked.</para>
            </listitem>
            <listitem>
              <para>When all details have been completed press the <emphasis>Add</emphasis>

   (or
Update if updating) button to submit the web robot task to the queue.</para>
            </listitem>
            <listitem>
              <para><emphasis>Import Queues</emphasis> : This page shows you a list of web copy targets that have been enlisted with the
Virtuoso Server, and a list of web robot update schedules. Several options are available for
each item listed: Start, Update, Schedule, Reset, and Stop. You can configure the scheduled update
interval by pressing the Schedule link and entering a value in minutes. Once that is done you can
start the schedule by pressing the Start link. You make a manual update of the content by pressing
the Update link. You can stop the scheduled updates taking place by pressing the Stop link. To reset
the details of the web copy item press the Reset link.

</para>
              <figure floatstyle="1">
                <title>Web Robot - Queues
</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/dav_rbt_que_01.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <para><emphasis>Retrieved Sites</emphasis> : You can view a list of the links retrieved from the web copy from this page. You are also
able to remove some of the content from this page by following the Edit link.

</para>
              <figure floatstyle="1">
                <title>Web Robot - Retrieved Links
</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/dav_rbt_rtrd_01.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <para><emphasis>Export</emphasis> : You can export content from the WebDAV repository. Note that you can only export content
that has been retrieved using Virtuoso's Web Robot.
        </para>
              <para>When you click the "Export" link for a retrieved collection, you will be presented
with a form for selecting the export target location. Choose the export method: either File
System or DAV by clicking the "External WebDAV Server URL" check-box. This lets you indicate to
the remote target where to store the exported content. Then type the target URL to an existing
location on the server. Finally press the <emphasis>Export</emphasis>

   button to export.
A confirmation will be supplied once the operation is complete.

</para>
              <figure floatstyle="1" xml:id="dav_rbt_expt_02">
                <title>Web Robot - Exporting Content
</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/dav_rbt_expt_02.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <note>
                <title>Note:
</title>
                <para>If is not checked the "External WebDAV Server URL" check-box, i.e. you are selecting the
filesystem method, then you are restricted to Virtuoso targets. However WebDAV methods can be applied
to any WebDAV server. WebDAV methods assume that the target is publicly available for writing.
          </para>
              </note>
            </listitem>
            <listitem>
              <para><emphasis>Populate the RDF Quad Store</emphasis> : Virtuoso's built-in Content Crawler to can be used to populate its RDF Quad Store, as a one-time run or on a scheduled basis.
        </para>
              <para>Transforming data sources into RDF "on the fly" is sufficient for many use cases, but there are times when the volume or sheer nature of a data source makes batch-loading necessary.</para>
              <para>For example, Freebase offers RDF representations of its data, but it doesn't publish RDF dumps; even if it did, such dumps would usually be outdated by the time they were loaded.</para>
              <para>One practical solution takes the form of a scheduled crawl of specific resources of interest.</para>
            </listitem>
          </itemizedlist>
          <section xml:id="contentcrawlerrdf">
            <title>Set Up the Content Crawler to Gather RDF</title>
            <para>The Virtuoso Conductor can be used to set up various Content Crawler Jobs:</para>
            <section xml:id="contentcrawlerrdfquad">
              <title>Setting up a Content Crawler Job to Add RDF Data to the Quad Store</title>
              <para>See <link linkend="rdfinsertmethodvirtuosocrawler">details</link>

   how to use Virtuoso Crawler for including the Sponger options so you crawl non-RDF but get RDF and this to the Quad Store.</para>
            </section>
            <section xml:id="contentcrawlerrdfsm">
              <title>Setting up a Content Crawler Job to Retrieve Sitemaps (when the source includes RDFa)</title>
              <para>The following section describes how to set up a crawler job for getting content of a basic Sitemap where the source includes RDFa.</para>
              <orderedlist>
                <listitem>
                  <para>From the Virtuoso Conductor User Interface i.e. http://cname:port/conductor, login as the "dba" user.</para>
                </listitem>
                <listitem>
                  <para>Go to the "Web Application Server" tab.
    </para>
                  <figure xml:id="cr1" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr1.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Go to the "Content Imports" tab.
    </para>
                  <figure xml:id="cr2" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr2.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click on the "New Target" button.
    </para>
                  <figure xml:id="cr3" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr3.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>In the form displayed:
</para>
                  <itemizedlist mark="bullet">
                    <listitem>
                      <para>Enter a name of choice in the "Target description" text box:
</para>
                      <programlisting>
Virtuoso Sample Example
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Enter the URL of the site to be crawled in the "Target URL" text box:
</para>
                      <programlisting>
http://virtuoso.openlinksw.com/sitemap.xml
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Enter the location in the Virtuoso WebDAV repository the crawled should stored, in the
  	"Copy to local DAV collection" text box, for example, if user demo is available, then:
</para>
                      <programlisting>
/DAV/home/demo/VirtSample/
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Choose the  "Local resources owner" for the collection from the list box available, for ex: user demo.
</para>
                    </listitem>
                    <listitem>
                      <para>Select the "Accept RDF" check box.
</para>
                    </listitem>
                    <listitem>
                      <para>Optionally you can select "Convert Links" to make all HREFs in the local stored content relative.
</para>
                    </listitem>
                  </itemizedlist>
                  <figure xml:id="cr11" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr11.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                  <figure xml:id="cr11a" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr11a.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click the "Create" button to create the import.
  	</para>
                  <figure xml:id="cr11a_01" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr11ab.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click the "Import Queues" button.
    </para>
                  <figure xml:id="cr12" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr12.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>For the "Robot targets" with label "Virtuoso Sample Example" click the "Run" button.</para>
                </listitem>
                <listitem>
                  <para>This will result in the Target site being crawled and the retrieved pages stored locally in DAV and any network resource triples being fetched in the RDF Quad store.
    </para>
                  <figure xml:id="cr12a" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr12a.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Go to the "Web Application Server" -&gt; "Content Management" tab and navigate to the location of newly created DAV collection:
</para>
                  <programlisting>
/DAV/home/demo/VirtSample/
</programlisting>
                </listitem>
                <listitem>
                  <para>The retrieved content will be shown:
    </para>
                  <figure xml:id="cr15" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Sitemaps</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr15.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
              </orderedlist>
            </section>
            <section xml:id="contentcrawlerrdfssm">
              <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemaps (a variation of the standard sitemap)</title>
              <para>The following section describes how to set up crawler job for getting Semantic Sitemap's content: a variation of standard sitemap:</para>
              <orderedlist>
                <listitem>
                  <para>From the Virtuoso Conductor User Interface i.e. http://cname:port/conductor, login as the "dba" user.</para>
                </listitem>
                <listitem>
                  <para>Go to "Web Application Server".
    </para>
                  <figure xml:id="cr1_01" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr1.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Go to "Content Imports".
    </para>
                  <figure xml:id="cr2_01" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr2.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "New Target".
    </para>
                  <figure xml:id="cr3_01" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr3.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>In the shown form:
</para>
                  <itemizedlist mark="bullet">
                    <listitem>
                      <para>Enter for "Target description":
</para>
                      <programlisting>
Semantic Web Sitemap Example
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Enter for "Target URL":
</para>
                      <programlisting>
http://virtuoso.openlinksw.com/sitemap-semantic.xml
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Enter the location in the Virtuoso WebDAV  repository the crawled should stored in the
  	"Copy to local DAV collection" text box, for example, if user demo is available, then:
</para>
                      <programlisting>
/DAV/home/demo/semantic_sitemap/
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Choose the "Local resources owner" for the collection from the list box available, for ex: user demo.</para>
                    </listitem>
                    <listitem>
                      <para>Hatch "Semantic Web Crawling"
</para>
                      <itemizedlist mark="bullet">
                        <listitem>
                          <para>Note: when you select this option, you can either:
</para>
                          <orderedlist>
                            <listitem>
                              <para>Leave the Store Function and Extract Function empty - in this case the system Store and Extract functions will be used for the Semantic Web Crawling Process, or:</para>
                            </listitem>
                            <listitem>
                              <para>You can select your own Store and Extract Functions, for ex:
</para>
                              <programlisting>
-- Example of Extract Function
use WS;

create procedure WS.WS.SITEMAP_BB_PARSE (
  in _host varchar,
  in _url varchar,
  in _root varchar,
  inout _content varchar,
  in _c_type varchar := null,
  in lev int := 0))
{
  --pl_debug+
  declare xt, xp, graph any;
  declare inx int;

--  dbg_obj_print ('WS.WS.GET_URLS_SITEMAP', _url);

  declare exit handler for sqlstate '*'
    {
--      dbg_obj_print (__SQL_MESSAGE);
      return;
    };

  if (_url like '%.xml.gz')
    {
      _content := gzip_uncompress (_content);
    }

  if (_url like '%.xml' or _url like '%.xml.gz' or _url like '%.rdf')
    {
      xt := xtree_doc (_content);
      if (xpath_eval ('/urlset/dataset', xt) is not null)
	{
	  xp := xpath_eval ('/urlset/dataset/dataDumpLocation/text()', xt, 0);
	  graph := cast (xpath_eval ('/urlset/dataset/datasetURI/text()', xt) as varchar);
	  if (length (graph))
	    update VFS_SITE set VS_UDATA = serialize (vector ('graph', graph)) where VS_HOST = _host and VS_ROOT = _root;
	  inx := 0;
	  foreach (any u in xp) do
	    {
	      declare hf, host, url varchar;

	      u := cast (u as varchar);
	      hf := WS.WS.PARSE_URI (u);
	      host := hf[1];
	      --dbg_obj_print ('WS.WS.GET_URLS_SITEMAP PARSE', u);
	      url := hf[2];
	      insert soft VFS_QUEUE (VQ_HOST, VQ_TS, VQ_URL, VQ_STAT, VQ_ROOT, VQ_OTHER)
		  values (host, now (), url, 'waiting', _root, NULL);
	      if (row_count () = 0)
		update VFS_QUEUE set VQ_STAT = 'waiting', VQ_TS = now () where VQ_HOST = host and VQ_ROOT = _root and VQ_URL = url;
	      inx := inx + 1;
	    }
	}
      if (xpath_eval ('/sitemapindex/sitemap/loc', xt) is not null)
	{
	  xp := xpath_eval ('/sitemapindex/sitemap/loc/text()', xt, 0);
	  inx := 0;
	  foreach (any u in xp) do
	    {
	      declare hf, host, url varchar;

	      u := trim (cast (u as varchar));
	      hf := WS.WS.PARSE_URI (u);
	      host := hf[1];
--	      dbg_obj_print ('WS.WS.GET_URLS_SITEMAP', host, _host);
	      url := hf[2];
	      if (url &lt;&gt; '')
		{
		  insert soft VFS_QUEUE (VQ_HOST, VQ_TS, VQ_URL, VQ_STAT, VQ_ROOT, VQ_OTHER)
		      values (host, now (), url, 'waiting', _root, NULL);
		  if (row_count () = 0)
		    update VFS_QUEUE set VQ_STAT = 'waiting', VQ_TS = now () where VQ_HOST = host and VQ_ROOT = _root and VQ_URL = url;
		  inx := inx + 1;
		}
	    }
	}
    }
  commit work;
}
;

-- Example of Store Function
use WS;

create procedure WS.WS.SITEMAP_BB_STORE (
  in _host varchar,
  in _url varchar,
  in _root varchar,
  inout _content varchar,
  in _s_etag varchar,
  in _c_type varchar,
  in store_flag int := 1,
  in udata any := null,
  in lev int := 0)
{
  --pl_debug+
  declare graph varchar;

--  dbg_obj_print ('WS.WS.SITEMAP_BB_STORE', _url, udata);
  if (isarray (udata))
    graph := get_keyword ('graph', udata);
  else
    graph := null;

  if (graph is not null and _url like '%.rdf')
    {
      DB.DBA.RDF_LOAD_RDFXML (_content, graph, graph);
      DB.DBA.VT_INC_INDEX_DB_DBA_RDF_OBJ ();
    }
  insert soft VFS_URL (VU_HOST, VU_URL, VU_CHKSUM, VU_CPTIME, VU_ETAG, VU_ROOT)
      values (_host, _url, md5 (_content), now (), _s_etag, _root);
  if (row_count () = 0)
    update VFS_URL set VU_CHKSUM = md5 (_content), VU_CPTIME = now (), VU_ETAG = _s_etag where
	VU_HOST = _host and VU_URL = _url and VU_ROOT = _root;
  commit work;
}
;
</programlisting>
                            </listitem>
                          </orderedlist>
                        </listitem>
                      </itemizedlist>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>Optionally you can select "Convert Link" to make all HREFs in the local stored content relative.</para>
                </listitem>
                <listitem>
                  <para>Hatch "Accept RDF"
    </para>
                  <figure xml:id="cr16" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr16.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                  <figure xml:id="cr17" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr17.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                  <figure xml:id="cr17_01" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr17b.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Optionally you can hatch "Store metadata *" and specify which RDF Cartridges to be included from the Sponger:
  	</para>
                  <figure xml:id="cr17a" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr17a.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click the button "Create".
    </para>
                  <figure xml:id="cr18" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr18.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "Import Queues".
    </para>
                  <figure xml:id="cr19" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr19.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>For "Robot target" with label "Semantic Web Sitemap Example" click "Run".
  </para>
                </listitem>
                <listitem>
                  <para>As result should be shown the number of the pages retrieved.
    </para>
                  <figure xml:id="cr20" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr20.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Check the retrieved RDF data from your Virtuoso instance sparql endpoint http://cname:port/sparql with the following query selecting all the retrieved graphs for ex:
</para>
                  <programlisting>
SELECT ?g
FROM &lt;http://host:port/&gt;
WHERE
  {
    graph ?g { ?s ?p ?o } .
    FILTER ( ?g LIKE &lt;http://virtuoso.openlinksw.com/%&gt; )
  }
</programlisting>
                  <figure xml:id="cr21" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr21.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                  <figure xml:id="cr22" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Semantic Sitemap content</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr22.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
              </orderedlist>
            </section>
            <section xml:id="contentcrawlerrdfsd">
              <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
              <para>The following section describes how to set up crawler job for getting directories using Conductor.</para>
              <orderedlist>
                <listitem>
                  <para>From the Virtuoso Conductor User Interface i.e. http://cname:port/conductor, login as the "dba" user.</para>
                </listitem>
                <listitem>
                  <para>Go to "Web Application Server".
    </para>
                  <figure xml:id="cr1_02" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr1.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Go to "Content Imports".
    </para>
                  <figure xml:id="cr2_02" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr2.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "New Target".
    </para>
                  <figure xml:id="cr3_02" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr3.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>In the shown form:
</para>
                  <itemizedlist mark="bullet">
                    <listitem>
                      <para>Enter for "Target description":
</para>
                      <programlisting>
UDA WebSite
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Enter for "Target URL":
</para>
                      <programlisting>
http://uda.openlinksw.com/
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Enter for "Copy to local DAV collection" for available user, for ex. demo:
</para>
                      <programlisting>
/DAV/home/demo/uda/
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Choose from the available list "Local resources owner" an user, for ex. demo.
    </para>
                      <figure xml:id="d1" floatstyle="1">
                        <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                        <mediaobject>
                          <imageobject>
                            <imagedata fileref="ui/d1.png"/>
                          </imageobject>
                        </mediaobject>
                      </figure>
                      <figure xml:id="d1a" floatstyle="1">
                        <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                        <mediaobject>
                          <imageobject>
                            <imagedata fileref="ui/d1a.png"/>
                          </imageobject>
                        </mediaobject>
                      </figure>
                    </listitem>
                    <listitem>
                      <para>Optionally you can select "Convert Link" to make all HREFs in the local stored content relative.</para>
                    </listitem>
                    <listitem>
                      <para>Click the button "Create".</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>As result the Robot target will be created:
    </para>
                  <figure xml:id="d2" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/d2.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "Import Queues".
    </para>
                  <figure xml:id="d3" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/d3.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "Run" and go to "Retrieved Sites".</para>
                </listitem>
                <listitem>
                  <para>As result should be shown the number of the total pages retrieved.
    </para>
                  <figure xml:id="d5" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/d5.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Go to "Web Application Server" -&gt; "Content Management" and go to path:
</para>
                  <programlisting>
DAV/home/demo/uda/
</programlisting>
                </listitem>
                <listitem>
                  <para>As result the retrieved content will be shown:
    </para>
                  <figure xml:id="d7" floatstyle="1">
                    <title>Setting up a Content Crawler Job to Retrieve Content from Specific Directories</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/d7.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
              </orderedlist>
            </section>
            <section xml:id="contentcrawleratom">
              <title>Setting up a Content Crawler Job to Retrieve Content from ATOM feed</title>
              <para>This section demonstrates populating the Virtuoso Quad Store using ATOM feed.</para>
              <para>Populating the Virtuoso Quad Store can be done in different ways Virtuoso supports. The Conductor -&gt; Content Import UI offers plenty of options, one of which is the XPath expression for crawling RDF resources URLs and this feature is a powerful and easy-to-use for managing the Quad Store.</para>
              <para>To populate the Virtuoso Quad Store, in this Guide we will use a XPAth expression for the URLs of the RDF resources references in a given ATOM feed. For ex. this one of the "National Bibliography" Store.</para>
              <orderedlist>
                <listitem>
                  <para>Go to http://cname/conductor</para>
                </listitem>
                <listitem>
                  <para>Enter dba credentials</para>
                </listitem>
                <listitem>
                  <para>Go to Web Application Server -&gt; Content Management -&gt; Content Imports:
        </para>
                  <figure xml:id="cra1" floatstyle="1">
                    <title>Crawling ATOM feed</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cra1.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "New Target":
        </para>
                  <figure xml:id="cr3_03" floatstyle="1">
                    <title>Crawling ATOM feed</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr3.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>In the presented form specify respectively:
        </para>
                  <itemizedlist mark="bullet">
                    <listitem>
                      <para>"Target description": for ex. National Bibliography ;</para>
                    </listitem>
                    <listitem>
                      <para>"Target URL": for ex. http://data.libris.kb.se/nationalbibliography/feed/ ;
          </para>
                      <para>Note: the entered URL will be the graph URI for storing the imported RDF data.
          	You can also set it explicitly by entering another graph URI in the
          	"If Graph IRI is unassigned use this Data Source URL:" shown as option in this form.</para>
                    </listitem>
                    <listitem>
                      <para>"Copy to local DAV collection": for ex.
</para>
                      <programlisting>
/DAV/temp/nbio/
</programlisting>
                    </listitem>
                    <listitem>
                      <para>"XPath expression for links extraction:":
</para>
                      <programlisting>
//entry/link/@href
</programlisting>
                    </listitem>
                    <listitem>
                      <para>"Update Interval (minutes)": for ex. 10 ; 
</para>
                    </listitem>
                    <listitem>
                      <para>"Run Sponger": hatch this check-box ; 
</para>
                    </listitem>
                    <listitem>
                      <para>"Accept RDF": hatch this check-box ; 
</para>
                    </listitem>
                    <listitem>
                      <para>Optionally you can hatch "Store metadata" ; 
</para>
                    </listitem>
                    <listitem>
                      <para>"RDF Cartridge": hatch this check-box and specify what cartridges will be used.
            </para>
                      <figure xml:id="cra3" floatstyle="1">
                        <title>Crawling ATOM feed</title>
                        <mediaobject>
                          <imageobject>
                            <imagedata fileref="ui/cra3.png"/>
                          </imageobject>
                        </mediaobject>
                      </figure>
                      <figure xml:id="cra4" floatstyle="1">
                        <title>Crawling ATOM feed</title>
                        <mediaobject>
                          <imageobject>
                            <imagedata fileref="ui/cra4.png"/>
                          </imageobject>
                        </mediaobject>
                      </figure>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>Click "Create".</para>
                </listitem>
                <listitem>
                  <para>The new created target should be displayed in the list of available Targets:
        </para>
                  <figure xml:id="cra7" floatstyle="1">
                    <title>Crawling ATOM feed</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cra7.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "Import Queues":
        </para>
                  <figure xml:id="cra8" floatstyle="1">
                    <title>Crawling ATOM feed</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cra8.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click for "National Bibliography" target the "Run" link from the very-right "Action" column.</para>
                </listitem>
                <listitem>
                  <para>Should be presented list of Top pending URLs:
        </para>
                  <figure xml:id="cra9" floatstyle="1">
                    <title>Crawling ATOM feed</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cra9.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Go to "Retrieved Sites" to check the total URLs that were processed:
        </para>
                  <figure xml:id="cra10" floatstyle="1">
                    <title>Crawling ATOM feed</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cra10.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>To view the imported RDF data, go to http://example.com/sparql and enter a simple query for ex.:
</para>
                  <programlisting>
SELECT *
FROM &lt;http://data.libris.kb.se/nationalbibliography/feed/&gt;
WHERE
  {
    ?s ?p ?o
  }
</programlisting>
                  <figure xml:id="cra14" floatstyle="1">
                    <title>Crawling ATOM feed</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cra14.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "Run Query".</para>
                </listitem>
                <listitem>
                  <para>The imported RDF data triples should be shown:
        </para>
                  <figure xml:id="cra15" floatstyle="1">
                    <title>Crawling ATOM feed</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cra15.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
              </orderedlist>
            </section>
            <section xml:id="contentcrawlersparqlendp">
              <title>Setting up a Content Crawler Job to Retrieve Content from SPARQL endpoint</title>
              <para>The following step-by section walks you through the process of:</para>
              <itemizedlist mark="bullet">
                <listitem>
                  <para>Populating a Virtuoso Quad Store with data from a 3rd party SPARQL endpoint</para>
                </listitem>
                <listitem>
                  <para>Generating RDF dumps that are accessible to basic HTTP or WebDAV user agents.</para>
                </listitem>
              </itemizedlist>
              <orderedlist>
                <listitem>
                  <para>Sample SPARQL query producing a list SPARQL endpoints:
</para>
                  <programlisting>
PREFIX rdf:      &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs:     &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX owl:      &lt;http://www.w3.org/2002/07/owl#&gt;
PREFIX xsd:      &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX foaf:     &lt;http://xmlns.com/foaf/0.1/&gt;
PREFIX dcterms:  &lt;http://purl.org/dc/terms/&gt;
PREFIX scovo:    &lt;http://purl.org/NET/scovo#&gt;
PREFIX void:     &lt;http://rdfs.org/ns/void#&gt;
PREFIX akt:      &lt;http://www.aktors.org/ontology/portal#&gt;

SELECT DISTINCT ?endpoint
WHERE
  {
    ?ds a void:Dataset .
    ?ds void:sparqlEndpoint ?endpoint
  }
</programlisting>
                </listitem>
                <listitem>
                  <para>Here is a sample SPARQL protocol URL constructed from one of the sparql endpoints in the result from the query above:
</para>
                  <programlisting>
http://void.rkbexplorer.com/sparql/?query=PREFIX+foaf%3A+%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E+%0D%0APREFIX+void%3A+++++%3Chttp%3A%2F%2Frdfs.org%2Fns%2Fvoid%23%3E++%0D%0ASELECT+distinct+%3Furl++WHERE+%7B+%3Fds+a+void%3ADataset+%3B+foaf%3Ahomepage+%3Furl+%7D%0D%0A&amp;format=sparql
</programlisting>
                </listitem>
                <listitem>
                  <para>Here is the cURL output showing a Virtuoso SPARQL URL that executes against a 3rd party SPARQL Endpoint URL:
</para>
                  <programlisting>
$ curl "http://void.rkbexplorer.com/sparql/?query=PREFIX+foaf%3A+%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E+%0D%0APREFIX+void
%3A+++++%3Chttp%3A%2F%2Frdfs.org%2Fns%2Fvoid%23%3E++%0D%0ASELECT+distinct+%3Furl++WHERE+%7B+%3Fds+a+void%3ADataset+%3B+foaf%3Ah
omepage+%3Furl+%7D%0D%0A&amp;format=sparql"
&lt;?xml version="1.0" ?&gt;
&lt;sparql xmlns="http://www.w3.org/2005/sparql-results#"&gt;
  &lt;head&gt;
    &lt;variable name="url"/&gt;
  &lt;/head&gt;
  &lt;results ordered="false" distinct="true"&gt;
    &lt;result&gt;
      &lt;binding name="url"&gt;&lt;uri&gt;http://kisti.rkbexplorer.com/&lt;/uri&gt;&lt;/binding&gt;
    &lt;/result&gt;
    &lt;result&gt;
      &lt;binding name="url"&gt;&lt;uri&gt;http://epsrc.rkbexplorer.com/&lt;/uri&gt;&lt;/binding&gt;
    &lt;/result&gt;
    &lt;result&gt;
      &lt;binding name="url"&gt;&lt;uri&gt;http://test2.rkbexplorer.com/&lt;/uri&gt;&lt;/binding&gt;
    &lt;/result&gt;
    &lt;result&gt;
      &lt;binding name="url"&gt;&lt;uri&gt;http://test.rkbexplorer.com/&lt;/uri&gt;&lt;/binding&gt;
    &lt;/result&gt;
    ...
    ...
    ...
  &lt;/results&gt;
&lt;/sparql&gt;
</programlisting>
                </listitem>
                <listitem>
                  <para>Go to Conductor UI -- http://example.com/conductor and provide dba credentials;</para>
                </listitem>
                <listitem>
                  <para>Go to "Web Application Server"-&gt; "Content Management" -&gt; "Content Imports"
        </para>
                  <figure xml:id="scp2" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cra1.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "New Target":
        </para>
                  <figure xml:id="cr3_04" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/cr3.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>In the presented form enter for ex.:
        </para>
                  <orderedlist>
                    <listitem>
                      <para>"Target description": voiD store</para>
                    </listitem>
                    <listitem>
                      <para>"Target URL": the url from above i.e.:
</para>
                      <programlisting>
http://void.rkbexplorer.com/sparql/?query=PREFIX+foaf%3A+%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E+%0D%0APREFIX+void%3A+++++%3Chttp%3A%2F%2Frdfs.org%2Fns%2Fvoid%23%3E++%0D%0ASELECT+distinct+%3Furl++WHERE+%7B+%3Fds+a+void%3ADataset+%3B+foaf%3Ahomepage+%3Furl+%7D%0D%0A&amp;format=sparql
</programlisting>
                    </listitem>
                    <listitem>
                      <para>"Copy to local DAV collection":
</para>
                      <programlisting>
/DAV/void.rkbexplorer.com/content
</programlisting>
                    </listitem>
                    <listitem>
                      <para>"Follow links matching (delimited with ;)":
</para>
                      <programlisting>
%
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Un-hatch "Use robots.txt" ;</para>
                    </listitem>
                    <listitem>
                      <para>"XPath expression for links extraction":
</para>
                      <programlisting>
//binding[@name="url"]/uri/text()
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Hatch "Semantic Web Crawling";</para>
                    </listitem>
                    <listitem>
                      <para>"If Graph IRI is unassigned use this Data Source URL:": enter for ex:
</para>
                      <programlisting>
http://void.collection
</programlisting>
                    </listitem>
                    <listitem>
                      <para>Hatch "Follow URLs outside of the target host";</para>
                    </listitem>
                    <listitem>
                      <para>Hatch "Run "Sponger" and "Accept RDF"
            </para>
                      <figure xml:id="scp4" floatstyle="1">
                        <title>Crawling SPARQL Endpoints</title>
                        <mediaobject>
                          <imageobject>
                            <imagedata fileref="ui/scp4.png"/>
                          </imageobject>
                        </mediaobject>
                      </figure>
                      <figure xml:id="scp5" floatstyle="1">
                        <title>Crawling SPARQL Endpoints</title>
                        <mediaobject>
                          <imageobject>
                            <imagedata fileref="ui/scp5.png"/>
                          </imageobject>
                        </mediaobject>
                      </figure>
                    </listitem>
                  </orderedlist>
                </listitem>
                <listitem>
                  <para>Click "Create";</para>
                </listitem>
                <listitem>
                  <para>The target should be created and presented in the list of available targets:
        </para>
                  <figure xml:id="scp7" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/scp7.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "Import Queues":
        </para>
                  <figure xml:id="scp8" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/scp8.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "Run" for the imported target:
        </para>
                  <figure xml:id="scp9" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/scp9.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>To check the retrieved content go to "Web Application Server"-&gt; "Content Management" -&gt; "Content Imports" -&gt; "Retrieved Sites":
        </para>
                  <figure xml:id="scp11" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/scp11.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>Click "voiD store" -&gt; "Edit":
        </para>
                  <figure xml:id="scp12" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/scp12.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>To check the imported URLs go to "Web Application Server"-&gt; "Content Management" -&gt; "Repository" path DAV/void.rkbexplorer.com/content/:
        </para>
                  <figure xml:id="scp10" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/scp10.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
                <listitem>
                  <para>To check the inserted into the RDF QUAD data go to http://cname/sparql and execute the following query:
</para>
                  <programlisting>
SELECT *
FROM &lt;http://void.collection&gt;
WHERE
  {
    ?s ?p ?o
  }
</programlisting>
                  <figure xml:id="scp13" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/scp13.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                  <figure xml:id="scp14" floatstyle="1">
                    <title>Crawling SPARQL Endpoints</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="ui/scp14.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
              </orderedlist>
            </section>
          </section>
        </section>
        <section xml:id="admiui.accesscontrol">
          <title>Access Control</title>
          <para>From "System Admin" -&gt; Security -&gt; "Access Controls" you can manage Rules and ACL
    	respectively for HTTP, News, Proxy. The tabs PSH and PSH-SSL are available only when the
	    <link xlink:href="http://s3.amazonaws.com/opldownload/uda/vad-packages/6.1/virtuoso/pubsubhub_dav.vad">pubsubhub_dav.vad</link>

	    is installed.
    </para>
          <figure floatstyle="1" xml:id="acl001">
            <title>Access Control Lists</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/acl001.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>For each of the tabs "HTTP", "NEWS", "PROXY" the created rules will be shown in a list with
Filter, Access, Destination, Object, Mode, Rate values. You can also add/delete rules, re-arrange rules order.
    </para>
          <figure floatstyle="1" xml:id="acl002">
            <title>Access Control List for HTTP</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/acl002.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Click the link "Edit" for a rule. Then specify the filter and access values.
    </para>
          <figure floatstyle="1" xml:id="acl003">
            <title>Access Control Lists</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/acl003.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="admiui.wsdl">
          <title>Import WSDL</title>
          <para>From "Web Services" / "WSDL Import/Export" you can provide a URL to a WSDL description.
In return Virtuoso will automatically provide a wrapper for the services available, hence stored
procedures and user-defined types that are callable within Virtuoso while the processing and mechanics of
the services are actually handled at the source.
    </para>
          <figure floatstyle="1" xml:id="wsdlimp001">
            <title>WSDL Import</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/wsdlimp001.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>After Virtuoso examines the supplied URL to a WSDL you are presented with the source
code for the PL wrappers and Virtuoso user-defined types to be created. You have the chance to
edit the code for more specific needs and then you can either save this to a file for later
work, or execute it in Virtuoso to create the procedures and types.
    </para>
          <figure floatstyle="1" xml:id="wsdlimp002">
            <title>WSDL Import</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/wsdlimp002.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Any errors in the code will be highlighted if you try and execute it.
    </para>
          <para>If you wish to save the file the appropriate file system ACLs must be in place for
the destination.
    </para>
        </section>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="webdavadmin">
        <title>WebDAV Administration</title>
        <para>DAV, or WebDAV, is a protocol for Web-based Distributed Authoring and Versioning. The location
where content items are placed is called the <emphasis>repository</emphasis>

  . Content elements are called
<emphasis>documents</emphasis>

  , corresponding to files, and <emphasis>folders/collections</emphasis>

  ,
corresponding to directories. Collectively these documents and folders (collections) are known as
<emphasis>resources</emphasis>

  .
  </para>
        <para>Virtuoso implements the DAV protocol, allowing you to create and manage resources either directly
through repository manipulations or indirectly, through a variety of WebDAV services.
  </para>
        <section xml:id="resourcetypes">
          <title>DAV Resource Types</title>
          <para>To make sure that when Virtuoso serves files to client user agents the type of file is
conveyed properly so that the right application can be used with that file a list or file
types are maintained in the server. This list is used when sending any content via the HTTP
server which include content in DAV and under VSP.
    </para>
          <figure floatstyle="1">
            <title>DAV Resource Types</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/dav_resrctyp_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>
The Web Application Server/Content Management/Resource Types page shows the list of currently
defined resource types in the Virtuoso server. You can edit or remove these types by using the
action links on the right most column of the list next to the type applicable.
</para>
          <para>
Add new types by typing the details into the fields provided and pressing the <emphasis>Save</emphasis>

   button.
</para>
        </section>
        <section xml:id="contentmanagement">
          <title>Content Management</title>
          <para>The content management page gives you an interface to the WebDAV
  repository resources. From here you can navigate or create directories,
  commonly referred to as collections or folders in DAV, alter properties,
  upload or remove files, or edit documents.</para>
          <para>The Repository tab lists the current location within the tree and
  the current login name. The root of the repository is usually
  <code>/DAV/</code>

  .</para>
          <figure floatstyle="1">
            <title>Content Management</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="webdav.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <section xml:id="davcontresnames">
            <title>Resource Names</title>
            <para>Resource names are given with collection (folder) names listed first,
  then individual documents. Permissions on resources are presented in a
  style similar to Unix, with (r)ead, (w)rite, and e(x)ecute permissions
  listed for the resource owner (the user), the resource's group, and
  for the general public. If a permission is present, the letter is
  shown; if not, it is replaced with a dash.</para>
          </section>
          <section xml:id="davcontresperm">
            <title>Resource Permissions</title>
            <para>Unlike Unix, the Repository does not use the designation 'd' for
  directories, which in DAV are more commonly referred to as collections.
  Collections are distinguished by a different icon - a folder-like icon
  - and by having the type named "collection".</para>
            <para>In addition, the permissions string has a trailing letter designating
  the indexing status of the resource. This letter is 'n' to designate
  that indexing is off, 'r' for recursive indexing, and 't' for direct indexing.</para>
          </section>
          <section xml:id="davcontresug">
            <title>Resource User and Group</title>
            <para>By default, the user and group of a DAV resource are those set by the
  service that created the resource, or they are the ID and primary group of
  the user who was logged in when the resource was created.</para>
          </section>
          <section xml:id="davconterssize">
            <title>Resource Size</title>
            <para>The size of a document resource is its size in disk bytes. Note that
  this does not necessarily correspond to characters displayed on the
  screen because of encodings. For example, the HTML token
  &amp;-a-m-p-semicolon is five bytes on disk but displays as a single
  screen character.</para>
          </section>
          <section xml:id="davcontrestype">
            <title>Resource Type</title>
            <para>The type of a resource is always "collection" for
  collections (folder). For documents it can be any of the known resource
  types (see Resource Types below). The resource type is usually based on the
  resource's extension; for example, .xml files are usually assumed to
  be <code>text/xml</code>

  . If Virtuoso does not recognize the extension of a
  resource, it assigns the default type of <code>application/octet-stream</code>

  .</para>
          </section>
          <section xml:id="davcontpropedt">
            <title>Editing Properties</title>
            <para>Within the Content Management screen, you can change any of the
  properties of a resource, other than its name, by selecting the
  resource via the checkbox to the left of the icon, and pressing the
  "Properties" button.</para>
            <figure floatstyle="1" xml:id="editres">
              <title>Edit Resource Properties</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/editres.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>XML documents also permit you to edit their XML properties
  specifically. This can be done on any document of type text/xml by
  clicking on the icon for the document.</para>
            <section xml:id="davcontresprops">
              <title>Properties</title>
              <para>When clicked this button from the bottom of the page, you can edit the properties
for one or a group of resources which should be selected. The name of a resource cannot be changed.</para>
              <para>The owner, group, permissions, and indexing controls on this form
    apply to the appropriate properties of resources, as documented
    above. Changes to the type of a collection (folder) are ignored.</para>
              <figure floatstyle="1" xml:id="meditres">
                <title>Multiple Resources Edit Properties</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/meditres.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <para>The "Property" control permits you to change or add
    additional properties. There is a pulldown of predefined XML-related
    properties, or you may create your own property.</para>
              <figure floatstyle="1" xml:id="meditres2">
                <title>Multiple Resources Edit Properties</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/meditres2.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </section>
            <section xml:id="davcontdavprop">
              <title>WebDAV Properties</title>
              <para>This control permits you to manipulate the specific properties of XML
    documents. Existing properties are shown with their values, and can
    be removed. New properties can be added.</para>
              <para>XML-related properties are generally set by specific XML-related
    services and do not need to be edited directly by users; however, this
    interface provides a quick means to correct a minor typo or other
    change without re-running the entire service. For example, you
    can change the <parameter>xml-sql-root</parameter>

   property, which
    controls the name of the root XML element for the document.</para>
            </section>
          </section>
          <section xml:id="davaddnewres">
            <title>Adding New Resources</title>
            <para>Resources may be added to the repository in two ways: by uploading
  files or by creating new collections (folders). Buttons for both these methods
  are on the page.</para>
            <para>The "Create Folder" button brings up a form in which you can
  specify the name of the collection (folder), its owner and group, and the initial
  permissions. You may also turn on indexing for the folder's contents at this point.</para>
            <figure floatstyle="1" xml:id="cfolder">
              <title>Create Folder</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/cfolder.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>The "Upload File" button brings up a form in which you can
  specify the name and location of a file on your local computer that is
  to be copied into the DAV repository. You need to specify the name of
  the resource in the repository and give it a type. You can also set
  the basic repository properties here.</para>
            <figure floatstyle="1" xml:id="ufile">
              <title>Upload File</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/ufile.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <!--sect5
xml:id="davadsymlink"><title>WebDAV Symbolic Linking</title>

<para>WebDAV symbolic linking, also known as <emphasis>DAV
redirection</emphasis>, is another method for accessing content from
your DAV repository. Instead of directly copying or creating
resources, as described above, symbolic linking permits you to create
a reference to a resource. In this sense it is similar to the
&quot;Create Shortcut&quot; feature of Windows, &quot;Make Alias&quot;
on MacOS, and the &quot;ln -s&quot; command on Unix systems.</para>

<para>This capability enables Virtuoso users to import resources from
a plethora of sites such as webzine articles and keep references to
these imported resources in sensible locations for future
reference.</para>

<para>In the Virtuoso Conductor WebDAV Content Manager, links appear and are
accessed just as you would see a created resource. Their Type is
<parameter>Link:&lt;Target&gt;</parameter> where the target is the URL
of the resource being linked.</para>

<para>To create a link, you first navigate to the DAV Repository
location where you want the alias to reside. Then click the Create
Link button at the bottom-right of the screen. This brings you to a
screen where you can specify the Link Name, as it will appear in your
DAV Repository. The Link to field can be given a full URL, as in the
example below, or you can use the Browse button to target a resource
elsewhere in the DAV.</para>

<para>Linked resources do not permit direct Edit operations. You can
change the Target by editing the <parameter>redirectref</parameter>
property of the link. To view the resource, simply click its
Name.</para>

<example
xml:id="ex_davsymlincs"><title>Examples:</title>

<para>If one wishes to keep a link to the article found at &lt;URL:
http://www.xml.com/pub/a/2001/10/17/slippery-soap.html&gt;  he/she would
simply click the Add Link button, type a useful local name, such as
&quot;Slippery SOAP article&quot; and paste the URL into the Link to
field.</para>

<para>More interesting, he/she could set up a Web Data Import for the
target &lt;URL:
http://news.cnet.com/news/0-1277-210-7545619-1.html?tag=bt_bh&gt;</para>

<para>When this URL target is imported, Virtuoso will replicate the
traversal path within the DAV repository that results in multiple
access point locations for each import. Using the symbolic link
feature, we are able to map the actual documents imported to a common
location without encountering problems related to component
references, embedded links, etc.</para>
</example>
</section-->

          </section>
        </section>
        <section xml:id="freetext">
          <title>Free Text</title>
          <section xml:id="contentidxmode">
            <title>Indexing Mode</title>
            <para>
When files are inserted into Virtuoso's WebDAV repository, if their type is a type of text file such
as plain text TXT, XML, or HTML, then they may be automatically free text indexed.
</para>
            <para>
By default files are automatically free text indexed as they are inserted into Virtuoso. This is
very convenient but can be time consuming if you frequently insert or update text files. For
this reason Virtuoso can be set to index in batch mode at a particular interval in minutes.
</para>
            <figure floatstyle="1">
              <title>DAV Free Text Index Configuration</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/dav_idxprprty_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>
To change the free-text index mode to batch mode check the check-box and provide a non-zero time interval (in minutes).
Press the <emphasis>Accept</emphasis>

   button to save the changes into the server.
</para>
          </section>
        </section>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="admui.internetdomains">
        <title>Internet Domains</title>
        <section xml:id="httpvirtualdirs">
          <title>HTTP Virtual Directories</title>
          <para>From Virtual Domains &amp; Directories you can define Virtual HTTP directories. Virtual Directories
  let you define multiple HTTP server listeners in Virtuoso for either the same
  network interface or another one. Virtual directories can respond logically
  to a name or directly by IP address. Both types as well as default responses
  can be defined here.</para>
          <para>Each virtual directory can also have HTTP maps defined for it. This
  allow you to set logical paths on an HTTP directory to point to specific
  directories available to Virtuoso through the file system or DAV.</para>
          <para>You can also publish stored procedures to a SOAP defined directory
  during the virtual directory definition.</para>
          <figure floatstyle="1">
            <title>Virtual Directories</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admvirtdir001.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Click on the <emphasis>Add New Site</emphasis>

   button to start adding
  a new Virtual Web Site and its directories.</para>
          <figure floatstyle="1">
            <title>Virtual Directories: Site Details</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admvirtdir002.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>When adding or editing a web site you must supply a host.domain name,
  which will be used to match again incoming requests to produce the correct
  response, the IP address of the network interface, to set-up the listener on,
  and the TCP port number that will be used to listen for incoming requests.
  Although Virtuoso will be listening on the specified interface you can
  set up multiple sites on this interface. The site required by client web
  browsers will be determined by the host name specified in the request.
  This provides the virtual site.</para>
          <para>Click on "New Directory" to continue.</para>
          <figure floatstyle="1">
            <title>Virtual Directories Mappings</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admvirtdir003.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Before the directory settings are configured you can select from a
  few types to help configure the details to follow quicker and easier.
  For SOAP virtual directories this step is particular useful.</para>
          <para>Select "Type" and then click "Next" to continue.</para>
          <figure floatstyle="1">
            <title>Virtual Directories</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admvirtdir004.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>The "Virtual Directory Information" tab lets you configure most aspects of the virtual directory.</para>
          <para>The default directory checkbox can be checked if you want the site being
  defined to act as the default site for the interface. This means that if a
  request is made to the interface that does not match a hostname defined for
  the interface, the default will be returned.</para>
          <para>Logical Path will be the path that Virtuoso will respond to for this
  virtual directory mapping. This is what will be placed on the URL.
  Physical Path or URL is what Virtuoso will actually supply the content
  from. In either case you can use the Browse buttons to traverse the file systems
  graphically. Use the WebDAV Source Checkbox to instruct Virtuoso to use the
  WebDAV store for the physical location. "Default Page" will be returned if
  no page is specified in the incoming URL. </para>
          <note>
            <title>Note:</title>
            <para>Virtual directories for SOAP must always use a physical path of /SOAP/.</para>
            <para>The physical path of /SOAP/ does not need to exist in the filesystem
  under the VSP-root directory for normal SOAP operation. If it does existing it
  can be used to answer non-SOAP requests. Thus, configuring the
  virtual directory for SOAP with a "Default Page" can be used to
  avoid SOAP clients receiving HTTP 404 errors when testing the SOAP endpoint
  using standard HTTP only. Some SOAP applications assume the SOAP endpoint
  is down if they received HTTP 404 without checking the SOAP endpoint itself.</para>
          </note>
          <para>The permissions panel lets you choose whether to enable various
  abilities in the directory.</para>
          <para>In the SOAP Options section you can publish or unpublish procedures
  and/or templates, both native and remote to the virtual directory using
  the Publish/Unpublish buttons respectively. The SOAP Options text-area allows
  you to specify other SOAP options such as DIME encapsulations and WS-security
  settings. These options are supplied as name=value pairs terminated with a semi-colon and
  a carriage-return. Here is an example of the options used for the
  default Interop test based demo virtual directory:</para>
          <programlisting>
Namespace=http://soapinterop.org/;
MethodInSoapAction=no;
ServiceName=InteropTests;
HeaderNS=http://soapinterop.org/echoheader/;
CR-escape=yes;
</programlisting>
          <tip>
            <title>See Also:</title>
            <para>For a list of available SOAP Options review the end section of the SOAP
  chapter: <link linkend="soapoptions">Optional Parameters to the SOAP Endpoint</link>

  .</para>
          </tip>
          <para>The Authentication Options panel lets you define the authentication
  rules for the Virtual Directory.</para>
          <para>Once the form details have been completed press on the Add button to
  save the them and proceed to configure mappings for the directory.</para>
          <figure floatstyle="1">
            <title>Virtual Directories Mappings</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admvirtdir006.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>This screen lists mappings that have been defined for the virtual site.
  If you have just created a fresh site then only one line will be displayed.
  The "Add Virtual Directory" button will let you define more. Back
  returns you to the start page, Edit and Delete allow you to edit or remove
  existing mappings as their link suggests.</para>
          <tip>
            <title>See Also:</title>
            <para>
              <link linkend="virtdir">Virtual Directories</link>
            </para>
          </tip>
          <para>For example, here are the basic steps to be performed, in order to mount FS folder to DAV:</para>
          <orderedlist>
            <listitem>
              <para>Suppose there is a folder with name "test" in your FS and it is under the root of the
  	ServerRoot defined in your virtuoso ini file.</para>
            </listitem>
            <listitem>
              <para>Also suppose in the folder "test" there is a file index.html with simple content:
  </para>
              <programlisting>
&lt;!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;OpenLink Virtuoso Conductor Simple Test&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;table cellspacing="0" cellpadding="0" border="1" width="50%"&gt;
      &lt;tr&gt;
       &lt;td&gt;&lt;b&gt;Name&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;/b&gt;State&lt;/b&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
       &lt;td&gt;Simple test for mounting FS to DAV&lt;/td&gt;&lt;td&gt;Successful.&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/body&gt;
&lt;/html&gt;
  </programlisting>
            </listitem>
            <listitem>
              <para>Install the Conductor package</para>
            </listitem>
            <listitem>
              <para>Go to http://host:port/conductor and login as dba user.</para>
            </listitem>
            <listitem>
              <para>Go to Web Application Server -&gt; Virtual Domains &amp; Directories.
  </para>
              <figure floatstyle="1">
                <title>Mount FS to DAV</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/admvirtdir011.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <para>For your {Default Web Site} click the link "New Directory".</para>
            </listitem>
            <listitem>
              <para>Check the check-box "Type" and select from the drop-down list "Filesystem".
  </para>
              <figure floatstyle="1">
                <title>Mount FS to DAV</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/admvirtdir012.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <para>Click "Next"</para>
            </listitem>
            <listitem>
              <para>In the shown form: Enter for the field "Path": mytest; Enter for the field "Physical path": /test;
Enter for the field "Default page": index.html; Check the check-box "Allow Directory Browsing"; Leave the rest of the fields with their default values.</para>
            </listitem>
            <listitem>
              <para>Click "Save Changes"
  </para>
              <figure floatstyle="1">
                <title>Mount FS to DAV</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/admvirtdir013.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <para>From your browser access the url: http://host:port/mytest/</para>
            </listitem>
            <listitem>
              <para>As result the content of the index.html file will be shown:
  </para>
              <figure floatstyle="1">
                <title>Mount FS to DAV</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/admvirtdir014.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
          </orderedlist>
        </section>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="admui.xmlservices">
        <title>XML Services</title>
        <section xml:id="sqlxmlstmts">
          <title>SQL-XML Statements</title>
          <para>
Go to XML/SQL-XML and enter a SQL to XML statement in the <emphasis>SQLX or SQL-XML Query</emphasis>

   text-area:
</para>
          <example>
            <title>For example:</title>
            <programlisting>
SELECT "product".ProductID AS "id",
  "product".ProductName AS "name"
FROM
  "Demo"."demo"."Products" as "product"
FOR XML AUTO ELEMENT
</programlisting>
          </example>
          <figure floatstyle="1">
            <title>SQL-XML Statements</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/sql_xml_mng_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>
Type the root XML element name into the <emphasis>Root Element</emphasis>

   field.
The results of the query will be contained within this root element.</para>
          <para>
Type the full path and resource name where you want your XML resource to reside under WebDAV
in the <emphasis>WebDAV Resource path for the result</emphasis>

   field. Collection(s) described
in the full path must already exist.</para>
          <para>
You may use the <emphasis>Browse</emphasis>

   button next to the <emphasis>WebDAV Resource path
for the result</emphasis>

   field to navigate existing WebDAV collections (folders) or resources
to store the result of query.</para>
          <para>
From the "Stored Queries" tab if you choose a resource that already exists as a query in WebDAV resource,
after click the "Edit" link, the form will automatically acquire the details from the query.</para>
          <para>
If an XSLT transformation should be performed on retrieval time then you may either type the location
of the stylesheet in the <emphasis>Stylesheet</emphasis>

   field or press the
<emphasis>Browse</emphasis>

   button next to it to search for a valid XSLT stylesheet from the WebDAV
repository.</para>
          <para>
Provide the appropriate <emphasis>WebDAV owner</emphasis>

   and <emphasis>group</emphasis>

   of stored result
using the drop downs provided.</para>
          <para>
Select appropriate <emphasis>permissions</emphasis>

   for the stored result.</para>
          <para>
The query can be set to update itself at specific intervals of time or execute every time the resource
is retrieved. If <emphasis>Persist XML</emphasis>

   is checked the query will be executed
on <emphasis>Update every</emphasis>

   10 minutes by default.</para>
          <para>
Press the <emphasis>Execute</emphasis>

   button to execute the statement and store as a WebDAV
resource. Use <emphasis>Reset</emphasis>

   to clear the form</para>
          <para>
If you want to build a schema definition for the result then press the
<emphasis>Create XML Schema</emphasis>

   radio-button.
</para>
          <para>
Virtuoso can provide the generated XML output with a full DTD for the data. Press
<emphasis>Create External DTD</emphasis>

   to enable this option for the query.
</para>
        </section>
        <section xml:id="xpathsearch">
          <title>XQuery Search</title>
          <para>Go to XML / XQuery /Xquery Basic.
	</para>
          <para>XQuery Document Search applies the XPATH expression to every realized XML contained
within the Query Scope to qualify search hit results. Note that this does not include XML Views unless
persistent.
	</para>
          <figure floatstyle="1">
            <title>XPATH Query of DAV</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/dav_xpath_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Choose the <emphasis>Scope of Query</emphasis>

   from within the WebDAV repository. You may
define the scope as either No Context, DAV Resource (file), DAV Collection (folder), External Document URL,
External Collection URL or Database Table. Use the <emphasis>Browse</emphasis>

   button to
browse the contents of WebDAV to make a selection. The query will then be confined to the selected resource
or collection and its children. Then Click the button "Next" in order to continue.
	</para>
          <figure floatstyle="1">
            <title>XPATH Query of DAV</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/dav_xpath_02.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Enter that XPATH query expression into the text area that you wish
to interrogate your WebDAV XML documents with. e.g. <emphasis>//*</emphasis>

   or <emphasis>//title</emphasis>

	</para>
          <para>The <emphasis>Root Element</emphasis>

   field allows you specify the name of the root
element to contain document element matches for each document found. This aids stylesheet design.
	</para>
          <para>Choose an <emphasis>Output Style Sheet</emphasis>

   by either typing its
URL or using <emphasis>Browse</emphasis>

   to select an XSL resource from WebDAV. You only need to
specify a style sheet if you want to transform your XML results using XSLT.
	</para>
          <para>Click the button "Next" in order to continue.
        </para>
          <para>Choose an <emphasis>Store into</emphasis>

   location by either typing its
URL or using <emphasis>Browse</emphasis>

   to select a DAV resource from WebDAV
	</para>
          <para>Set <emphasis>Permissions</emphasis>

   for the output result. Check "r" for read rights for Group and
Users in order to view later the saved xml file.
	</para>
          <para>You may want to <emphasis>Replace the existing resource</emphasis>

   by checking the shown check-box with this label.
	</para>
          <para>Choose <emphasis>Output Type</emphasis>

   that you wish to obtain.
<emphasis>Persist XML</emphasis>

   should be selected with Update interval im minutes or if you want to be created as XML Template,
fill in the "Create as XML Template Description" field.
	</para>
          <para>Click the button "Save".
        </para>
          <figure floatstyle="1">
            <title>XPATH Query of DAV</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/dav_xpath_03.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>XPATH Query of DAV</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/dav_xpath_04.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>If for location you have chosen /DAV/xmlsql/xquery.xml, you can view the saved file accessing the
url: http://host:port/DAV/xmlsql/xquery.xml
        </para>
          <figure floatstyle="1">
            <title>XPATH Query of DAV</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/dav_xpath_05.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="querytools">
        <title>Query Tools</title>
        <section xml:id="sqlqueries">
          <title>Relational Data using SQL</title>
          <para>
Conductor Interactive SQL allows you to quickly and directly query Virtuoso using SQL.
It offers <emphasis>Save</emphasis>

   and <emphasis>Load</emphasis>

facilities which allow SQL queries to be saved as an XML template, and read
back later. With a query in the SQL Statement box click on the
<emphasis>Execute</emphasis>

   for the results which will in the "Base" tab with option to return back
to the query area. The <emphasis>Clear</emphasis>

   clears the SQL Statement text box.</para>
          <figure floatstyle="1">
            <title>Querying Relational Database Using SQL</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/qry_sql_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Results</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/qry_sql_01a.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Specify the location for the file to be saved to by selecting the "WebDAV source" or "Local file"
check-box. </para>
          <figure floatstyle="1">
            <title>Saving SQL in an XML Template</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/qry_sql_02.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Click the "Browse" button. As result will be opened the Virtuoso WebDAV/File Browser
where you should define the XML template based on the SQL Query. Specify a
<emphasis>Root Element</emphasis>

   that will contain the resulting XML tree.
Specify the file name and location of the XML Template. </para>
        </section>
        <section xml:id="xqueryqueries">
          <title>XML Data Using XQuery</title>
          <para>
The Conductor Interactive XQuery facility allows you to create,
execute, save and reload queries using the evolving <link xlink:href="http://www.w3.org/TR/xquery/">W3C XML Query (XQuery) Language</link>

  .
Virtuoso currently supports the 1.0 version of this language.
</para>
          <para>
This language uses XPath-like expressions, as well as a set of
functions and operators, to permit effective parallel searching of a
set of XML documents. Where XPath works with one XML "tree",
XQuery searches a "forest". The result is an XML document.
</para>
          <para>
In order to create an XQuery you must both create the query statement
 -  by typing or pasting it into the text box  -  and specify
the document context. Since Virtuoso's XQuery implementation operates
over XML data in relational tables, this means the tables and columns
that are to be searched.
</para>
          <para>
Note that the XQuery language also allows a query to specify all or
part of the document context for the query. In the example below we
will see how these can interact. The user interface form permits you to
select a table  -  either one of the XQuery test data tables that come
with Virtuoso, or the WS.WS.SYS_DAV_RES table, which stores Virtuoso's WebDAV
Repository content.
</para>
          <para>
The form specifies a <parameter>Key Column</parameter>

   and a
<parameter>Data Column</parameter>

  . For the sample tables, the values
for these are filled in for you. The <parameter>Path</parameter>

   is
prepended to any <function>document()</function>

   function specified in
the query text to find Key column values of XML trees against which
the query is to be run.
</para>
          <para>
Once a query has been written and debugged, it can be saved by
pressing the Save button. This brings you to the form for saving a
query as an XML Template in the DAV repository.
</para>
          <para>
Pressing the Execute button causes the query result (an XML tree) to
be shown on the page below the Statement type-in box.
</para>
          <example xml:id="ex_xqtool">
            <title>XQuery Test File Example</title>
            <para>
In this example, we will query the table XQuery test files table, with
"name" as the key column and "text" as the data
column.
</para>
            <para>The query text, shown below, is a sample query from the W3C's
XML Query Use Cases document (<link xlink:href="http://www.w3.org/TR/xmlquery-use-cases">http://www.w3.org/TR/xmlquery-use-cases</link>

  ).
This query contains a document() call specifying a document named
"bib.xml". In order to have the query run properly, we
first set the Path form value to "xqdemo/". This causes the
query to find all rows in the table XQ.XQ.TEST_FILES that have the
value "xqdemo/bib.xml" in their Name column.</para>
            <programlisting>
&lt;bib&gt;
   {
   for $b in document("bib.xml")/bib/book
   where $b/publisher = "Addison-Wesley" and $b/@year &gt; 1991
   return
      &lt;book year = {$b/@year}&gt;
         {$b/title}
      &lt;/book&gt;
   }
&lt;/bib&gt;
</programlisting>
          </example>
          <figure floatstyle="1">
            <title>XQuery Test File Results</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/qry_sql_02a.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="replicationandsynchronization">
        <title>Replication &amp; Synchronization</title>
        <section xml:id="snapshotreplication">
          <title>Snapshot Replication</title>
          <itemizedlist mark="bullet">
            <para>Conductor "Replication" offers manage Virtuoso Replication. You are offered with "Basic",
"Incremental", "Bidirectional Snapshot" and "Transactional" sub-tabs.
</para>
            <itemizedlist mark="bullet">
              <listitem>
                <para>From </para>
                <para>
                  <emphasis>Replication/Basic/Query(Table select)to local</emphasis>
                </para>
                <para> to replicate local table(s)
to another data source click </para>
                <para>
                  <emphasis>Create New Snapshot</emphasis>
                </para>
                <para> and follow the wizard.
</para>
              </listitem>
              <listitem>
                <para>
To copy the changes from the local table to the remote select some replications and
press </para>
                <para>
                  <emphasis>Synchronize</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
To drop the replication definition without dropping the destination table select some replications and press
</para>
                <para>
                  <emphasis>Remove</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
To drop the replication definition and the destination table select some replications and
press </para>
                <para>
                  <emphasis>Remove &amp; Drop Remote</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
To copy the changes from the local table to the remote automatically select some
replications, enter minutes in </para>
                <para>
                  <emphasis>Scheduled Interval</emphasis>
                </para>
                <para> and
press </para>
                <para>
                  <emphasis>Schedule</emphasis>
                </para>
              </listitem>
              <listitem>
                <para>
To remove scheduled update select the replications enter 0 in "Scheduled Interval" and press Schedule
</para>
              </listitem>
            </itemizedlist>
            <listitem>
              <figure floatstyle="1">
                <title>Snapshot Replication</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/replt_ss_01.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <figure floatstyle="1">
                <title>Snapshot Replication</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/replt_ss_add_01.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <figure floatstyle="1">
                <title>Snapshot Replication</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/replt_ss_add_02.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <figure floatstyle="1">
                <title>Snapshot Replication</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/replt_ss_add_03.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <figure floatstyle="1">
                <title>Snapshot Replication</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/replt_ss_add_05.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <figure floatstyle="1">
                <title>Snapshot Replication</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="ui/replt_ss_add_06.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
          </itemizedlist>
        </section>
        <section xml:id="transactionalreplication">
          <title>Transactional Replication</title>
          <section xml:id="publications">
            <title>Publications</title>
            <para>The Transaction Publication screen lists publications. You can add, edit or
remove publications as necessary, each time using the guide-lines of the wizard.</para>
            <figure floatstyle="1">
              <title>Transaction Replication - Publications</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/repltranspub001.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <simplelist type="vert">
              <member>Add a new publication by clicking on the <emphasis>Create</emphasis>

   button.</member>
              <member>Edit an existing publication by clicking on publication name.</member>
              <member>Remove publications by selecting their checkbox and clicking on the
  <emphasis>Delete</emphasis>

   button. Use caution, as this action cannot be reverted.</member>
            </simplelist>
            <para>When creating a new publication you must supply a name. At this point
you have the option to create an updateable publication - see the
<link linkend="bidirtransrepl">Bi-Directional Transactional Replication</link>

section for more details - which allows updates to come from subscribers
rather than being limited to originating from the publisher only.</para>
            <figure floatstyle="1">
              <title>Transaction Replication - New Publication</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/repltranspub002.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <figure floatstyle="1">
              <title>Transaction Replication - List of Publications</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/repltranspub002a.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Once a new publication has been made you can add database objects to
it using the <emphasis>Add ...</emphasis>

   buttons, or remove them by selecting
their checkbox and using the <emphasis>Remove</emphasis>

   button. To add a
new table to the publication click on <emphasis>Add Table/Procedure</emphasis>

  .
Follow the wizard by choosing the appropriate database/catalog by clicking on its name,
you will then be presented with the tables within it.</para>
            <figure floatstyle="1">
              <title>Transaction Replication - Publish Tables and Procedures</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/repltranspub003.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Select the tables to publish using the checkboxes and press
<emphasis>Add to Publication</emphasis>

   to add the tables and continue.</para>
            <para>Once returned the publication screen, the published tables will be listed.
Updatable publication will need conflict resolvers in case of conflicting data
arriving from a subscriber. Click on the table name to manage the resolvers
list.</para>
            <figure floatstyle="1">
              <title>Transaction Replication - Published Items</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/repltranspub004.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Use the <emphasis>Add</emphasis>

  /<emphasis>Remove</emphasis>

   to add
or remove selected resolvers.</para>
            <para>Click on Publication Item -&gt; <emphasis>New Resolver</emphasis>

   to add a new resolver. You have the
following details to contend with:</para>
            <itemizedlist>
              <listitem>
                <para>
                  <emphasis>Name Suffix</emphasis>
                </para>
                <para>Conflict resolver name suffix.</para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>Order</emphasis>
                </para>
                <para>Resolver order number.</para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>Type</emphasis>
                </para>
                <para>The resolver type, one of: Insert, Update, or Delete for resolving
	  such SQL queries.</para>
              </listitem>
              <listitem>
                <para>
                  <emphasis>Class</emphasis>
                </para>
                <para>The kind of resolver. Class can be one of the following:</para>
                <simplelist type="vert">
                  <member><emphasis>'max'</emphasis>

  row with maximum value of specified column wins</member>
                  <member><emphasis>'min'</emphasis>

  row with minimum value of specified column wins</member>
                  <member><emphasis>'ave'</emphasis>

  new value of specified column is calculated as:
<computeroutput>current_val = (current_val + new_val) / 2</computeroutput>

  </member>
                  <member><emphasis>'add'</emphasis>

  new value of specified column is calculated as:
<computeroutput>current_val = current_val + (new_val - old_val) </computeroutput>

  </member>
                  <member>
                    <emphasis>'pub_wins'</emphasis>
                  </member>
                  <member><emphasis>'custom'</emphasis>

  publisher always wins</member>
                  <member><emphasis>'sub_wins'</emphasis>

  subscriber always wins</member>
                </simplelist>
              </listitem>
              <listitem>
                <para>
                  <emphasis>Column</emphasis>
                </para>
                <para>This should specify the column name if <computeroutput>class</computeroutput>

   is not one of 'pub_wins', 'sub_wins' or 'custom'.</para>
              </listitem>
            </itemizedlist>
            <figure floatstyle="1">
              <title>Transaction Replication - Resolvers</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/repltranspub006.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Click on Publication -&gt; <emphasis>Advanced Options</emphasis>

   to set additional settings such as split size, default copy mode of publication item, etc.</para>
            <figure floatstyle="1">
              <title>Transaction Replication - Advanced</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/repltranspub005.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="subscriptions">
            <title>Subscriptions</title>
            <itemizedlist mark="bullet">
              <listitem>
                <para>To add new subscription click at New Subscription and follow the wizard.</para>
              </listitem>
              <listitem>
                <para>Click Edit to change properties.</para>
              </listitem>
              <listitem>
                <para>To drop subscription click at link Drop.</para>
              </listitem>
              <listitem>
                <para>To synchronize subscription click the Sync button.</para>
              </listitem>
              <listitem>
                <para>To disconnect all subscriptions click at Disconnect all button.</para>
              </listitem>
              <listitem>
                <para>To load image file click at Load image button and follow the wizard.</para>
              </listitem>
            </itemizedlist>
            <figure floatstyle="1">
              <title>Transaction Replication - Subscription</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/replt_trans_sub_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <figure floatstyle="1">
              <title>Transaction Replication - Subscription</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/replt_trans_sub_02.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
        </section>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="dbadmin">
        <title>Database Administration</title>
        <section xml:id="dbusersandgroups">
          <title>Users &amp; Group Accounts</title>
          <para>
From System Admin / user Accounts you can alter the users that can access the Virtuoso database. You may
add a new user by clicking the "Create New Account" link, edit an existing user, or delete users.
You can associate users with groups or make new groups.
</para>
          <para>
Groups are created and function like normal user accounts. To define a group you simply create a new user, and then to make
use of the group you assign users to that group from the drop down which will contain available groups.
</para>
          <para>
To create a new user or group you must enter a username, password and confirm the password by retyping it in the
fields provided. You may optionally specify a group and default qualifier. You can use groups to control access to a set of users
by maintaining the permissions granted to the group for which they are members. Specifying a default qualifier
allows you to specify the catalog or database for which queries will be run against that do not explicitly
refer to a particular catalog or database.
</para>
          <para>
You can import users by adding LDAP Servers(s) from the "LDAP Servers" tab, and then from the "LDAP Import" to specify from
which LDAP server the import should be done:</para>
          <figure floatstyle="1">
            <title>Users Accounts</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admtables_01a.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <section xml:id="dbusersandgroupsldap">
            <title>Configuring and import from LDAP server</title>
            <para>The following steps describe how to configure LDAP server and then import user(s) using the Conducor UI:</para>
            <orderedlist>
              <listitem>
                <para>Go to http://cname:port/conductor</para>
              </listitem>
              <listitem>
                <para>Enter user dba credentials</para>
              </listitem>
              <listitem>
                <para>Go to System Admin -&gt; User Accounts -&gt; LDAP Servers
     </para>
                <figure xml:id="ldap1" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap1.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
              <listitem>
                <para>Enter in the LDAP servers form respectively:
     </para>
                <orderedlist>
                  <listitem>
                    <para>Host Name: for ex.: ldap.example.com
         </para>
                    <para>Note: you can also use ldap:// or ldaps:// in front of Host name</para>
                  </listitem>
                  <listitem>
                    <para>Base: for ex.: o=MyCompany,c=DE
</para>
                  </listitem>
                  <listitem>
                    <para>Base DN: for ex: ou=Accounts,o=MyCompany,c=DE
</para>
                  </listitem>
                  <listitem>
                    <para>UID field: uid
</para>
                  </listitem>
                  <listitem>
                    <para>Account: for ex: joe
</para>
                  </listitem>
                  <listitem>
                    <para>Password: *******
</para>
                  </listitem>
                  <listitem>
                    <para>LDAP version: choose for ex. 3
</para>
                  </listitem>
                </orderedlist>
              </listitem>
              <listitem>
                <para>Check the connection by pressing "Test":
	   </para>
                <figure xml:id="ldap2" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap2.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
              <listitem>
                <para>If the test connection is successful, click "Add".
	   </para>
                <figure xml:id="ldap3" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap3.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
              <listitem>
                <para>Next you can import various data from your LDAP server.</para>
              </listitem>
              <listitem>
                <para>Go to System Admin -&gt; User Accounts -&gt; LDAP Import
   	</para>
                <figure xml:id="ldap3a" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap3a.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
              <listitem>
                <para>Select the LDAP server added from above:
   	 </para>
                <figure xml:id="ldap4" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap4.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
              <listitem>
                <para>Click "Search".
   	 </para>
                <figure xml:id="ldap5" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap5.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
              <listitem>
                <para>Click "Next".
   	 </para>
                <figure xml:id="ldap6" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap6.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
              <listitem>
                <para>Select the desired profiles to be imported and set prefered "LDAP Authentication" for selected user:
     </para>
                <itemizedlist mark="bullet">
                  <listitem>
                    <para>If set to "enabled", then on an attempt to log in into Virtuoso, the system tries to
       log in into the LDAP server with the given username and password. If this succeeds, then the user logs
       in successfully in Virtuoso. </para>
                  </listitem>
                  <listitem>
                    <para>If set to "account check",  then on an attempt to log in into Virtuoso, the system performs a
       check if there is such an user on the LDAP server. If yes, then the user logs in successfully in
       Virtuoso.</para>
                  </listitem>
                </itemizedlist>
                <figure xml:id="ldap7" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap7.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
              <listitem>
                <para>Click "Import".
</para>
                <para>Note: By default an importing LDAP user has "User type" set to "WebDAV". To log in into iSQL with
     an imported LDAP user credentials you should:</para>
                <orderedlist>
                  <listitem>
                    <para>Make sure you have set in Virtuoso ini the SQL_ENCRYPTION_ON_PASSWORD parameter to 1 in the [Client] section, i.e.:
</para>
                    <programlisting>
;virtuoso.ini
....
[Client]
SQL_ENCRYPTION_ON_PASSWORD  = 1
...
</programlisting>
                  </listitem>
                  <listitem>
                    <para>Set the "User type" of the imported LDAP user to be "SQL/ODBC" by going to Virtuoso Conductor -&gt;
       System Admin -&gt; User Accounts -&gt; user -&gt; Edit -&gt; field "User type".</para>
                  </listitem>
                  <listitem>
                    <para>Log in into iSQL:
</para>
                    <programlisting>
isql host:port ldap-user-name ldap-user-password
</programlisting>
                  </listitem>
                </orderedlist>
              </listitem>
              <listitem>
                <para>Click "Finish".</para>
              </listitem>
              <listitem>
                <para>The imported profile(s) should be displayed in the Users tab:
   	 </para>
                <figure xml:id="ldap8" floatstyle="1">
                  <title>LDAP Servers Configure and Import</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="ui/ldap8.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </listitem>
            </orderedlist>
          </section>
        </section>
        <section xml:id="databases">
          <title>Databases</title>
          <para>
Each catalog (database) within Virtuoso will be listed under the Databases /Schema Objects. For each
catalog you will be able to view and in some cases edit details about the tables, views, triggers,
and store procedures stored within that catalog.</para>
          <figure floatstyle="1">
            <title>Viewing Tables details for the Demo catalogue in the Demo Database</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admtables_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Viewing Views details for the Demo catalogue in the Demo Database</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admviews_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <section xml:id="demodbinstallsteps">
            <title>Demo Database Installation</title>
            <para>The Virtuoso Demonstration database can be installed with the Conductor by navigating to
the "System Admin" -&gt; "Packages" tab where a list of available Virtuoso applications are
displayed, one of which is for the "Demo" database package as shown below:
          </para>
            <figure floatstyle="1">
              <title>Install Demo db using Conductor UI: "System Admin" -&gt; "Packages"</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/demodbinstall_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Select the "Demo" package and click on the "Install" button to commence the
installation process:
          </para>
            <figure floatstyle="1">
              <title>Install Demo db: confirmation</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/demodbinstall_02.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Click on the "proceed" button to install the indicated "Demo Database"
application package:
          </para>
            <figure floatstyle="1">
              <title>Install Demo db: proceed</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/demodbinstall_03.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Once installed the demo database schema can be viewed from the
"Database" -&gt; "Schema Objects" tab of the Conductor:
          </para>
            <figure floatstyle="1">
              <title>Install Demo db: view schema objects</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/demodbinstall_04.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="triggers">
            <title>Editing Triggers</title>
            <para>
	For each table, Virtuoso gives you the ability to edit the
	triggers linked to that table, as well as adding new triggers.
	The link text "Triggers" is followed by a number in parentheses
	that tells you how many triggers exist associated with that
	table. If no number is shown, there are no triggers. Clicking on
	the text takes you to the trigger edit page.
	</para>
            <!--
need a screenshot  here
-->

            <para>
  The triggers page shows you the name of each trigger, an excerpt
  from the text of the trigger, and permits you to edit or drop the
  triggers. In the last column of the shown form there is a "New Trigger" link for creation of a new trigger.
  </para>
          </section>
          <section xml:id="storedprocedures">
            <title>Editing Stored Procedures</title>
            <para>
	The stored procedures link shows a page of information about
	existing stored procedures for the database you are viewing. If
	there are stored procedures, you can see their names and text
	excerpts, and you may edit or drop them. Adding new stored
	procedures can be done via the ISQL command-line interface or from the "Create Procedure" link shown
        above the list of objects for the relevant database.
	</para>
            <figure floatstyle="1">
              <title>Viewing Stored Procedures details for the DB catalogue</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/admprocedures_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>
	Stored procedures may also refer to modules that contain a group
	of related stored procedures. These are created and edited as a
	group, rather than individually. An example of this is the module
	DB.DBA.AmazonSearchService, which contains procedures such as
	KeywordSearchRequest() and BrowseNodeSearchRequest().</para>
            <!--
need a screenshot here of Edit Procedure DB.DBA.AmazonSearchService
-->

          </section>
        </section>
        <section xml:id="externaldatabases">
          <title>External Data Sources</title>
          <para>
		From Database / External Data Sources you will be able to manage the Virtual Database
                feature of Virtuoso. You are able to administer ODBC Data Sources, how to link remote
                tables and view, and already linked remote connections.</para>
          <section xml:id="connecteddsns">
            <title>Data Sources</title>
            <para>
			This tab shows you the available Data Sources. For these one, to which there is no
connection, will be shown the link"Connect". For the datasource for which there is already established
connection, will be shown the links "Link objects", "Change Credentials" and "Disconnect".</para>
            <figure floatstyle="1">
              <title>Remote Datasources connected to Virtuoso</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/rmtconnected_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>
			If you need to alter the authentication details of a particular Data
			Source then select the "Change Credentials" link. If you want to link new objects,
select the "Link objects" link.</para>
          </section>
          <section xml:id="configureddsns">
            <title>Configure Data Sources</title>
            <para>
			This section will allow you to configure the data sources themselves on
			the remote machine. The table that will be presented to you will
			contain both User and System data sources. You will be able to edit
			and create either User or System data sources, however, Virtuoso will
			only be able to use the User data sources that belong to the user that
			started the Virtuoso Server.</para>
            <figure floatstyle="1">
              <title>Configuring ODBC Datasources</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/odbcadm_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Follow the buttons on the screen as to how you want to manage a data
			source. You can create new, edit or remove existing data sources.</para>
            <figure floatstyle="1">
              <title>Configuring A Virtuoso ODBC Datasources</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/virtdsn_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>The Virtuoso Server can make use of File Data Sources too. This
      provides the usual associated conveniences. These enable you to migrate
      a Virtuoso database to another machine hosting the same ODBC Driver,
      Virtuoso then has enough information to connect using the installed
      driver to a remote data source, the tables would not need to be
      relinked. File DSN's are read from server's root directory. File DSN's can
      only be read if this directory is contained in the Virtuoso INI file parameter
      DirsAllows.</para>
            <note>
              <title>Note:</title>
              <para>Windows NT or 2000 services by default start as the LocalSystem
      special user account. This account will not contain the same User DSNs
      as your own user. The Virtuoso service can be started with other users
      but you must be aware of any possible system permission problems. It is
      recommended that Virtuoso make use of System or File DSNs wherever
      possible.</para>
            </note>
          </section>
          <section xml:id="remotetables">
            <title>External Linked Objects</title>
            <para>
			This page will allow you to manage the remote objects that are linked
			into Virtuoso. You can unlink objects by selecting them and pressing the
			"Unlink selected" button. </para>
            <figure floatstyle="1">
              <title>Linking Tables from Remote Datasources</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/admrmttbls_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>
			To link new tables into Virtuoso select "Link objects" link or go to
                        the "Data Sources" tab.
			Click the "Connect" link for a data source. If this data source has been used
                        before then the existing authentication details will automatically be provided.
                        Otherwise you will have to provide these details in the username and password fields provided.
			When you are ready press the "Link objects" link.</para>
            <para>
			As results you should be presented with list of available
			remote tables and optionally views and procedures. If the connection fails then an
			error will be returned to the top of the page instead. You should be
			able to link any of the listed tables or views into Virtuoso. In order
			for Virtuoso to be able to correctly query the underlying table it needs
			to be able to uniquely identify each row (record) within the table or
			view. Tables should always be created with a primary key, and details
			of which should be available from the data source. With a primary key
			available Virtuoso will be able to link the table in to the server easily.
			In some cases and certainly in the case of views Virtuoso may not be
			able to determine a primary key or what constitutes uniqueness in the
			table. On the right most column will be an action link to a page that
			allows you to alter the primary key information about the table or view
			that is to be linked. Some primary key information is italized to indicate
			the explicit definition of a primary key.</para>
            <para>
			You will be required to enter primary key information for views before
			they can be linked.</para>
            <para>Select the tables that you want to link into the Virtuoso Server
			by checking the check box on the left most column of the list for table
			or view in question. When you are ready press the <emphasis>Link ...
			</emphasis>

   button at the bottom of the page.</para>
            <para>
			As result the selected tables will be linked and
			listed in the first list as Currently Linked.</para>
          </section>
          <section xml:id="remoteprocedures">
            <title>Remote Procedures</title>
            <para>
			In order to view the list of remote procedures, you should check the "Stored Procedures" check-box and click the button "Apply".
                        As result the procedures that are already connected to
			Virtuoso will be shown with checked check-box. You can unlink these by selecting them and pressing the
			<emphasis>Unlink</emphasis>

   button.</para>
            <para>To link new procedures into Virtuoso select the Data Source from
      the list of available n t ab "Data Sources". If this data source has been used before then the existing
      authentication details will automatically be provided. Otherwise you
      will have to provide these details in the username and password fields
      provided. When you are ready press the <emphasis>Link Objects</emphasis>

   link.
      The page will next require you to select the catalog/owner combination
      to refine the search list of procedures on the remote datasource. Check the
      check-box "Stored procedures" and click the "Apply" button to list the available stored procedures.</para>
            <figure floatstyle="1">
              <title>Linking Procedures from Remote Datasources</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/admrmtprocs002.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>When the page returns you will be presented with a list of
      available remote procedures. You should be able to link any of the listed
      procedures into Virtuoso.</para>
            <figure floatstyle="1">
              <title>Linking Procedures from Remote Datasources</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/admrmtprocs003.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Select the procedures that you want to link into the Virtuoso Server
			by checking the check box on the left most column of the list for the
			procedure in question. When you are ready press the <emphasis>Link ...
			</emphasis>

   button at the bottom of the page.</para>
            <para>You will be presented with a new page that lists the procedures chosen
      and the data type information regarding them. This gives you an opportunity
      to alter the  data type mappings that Virtuoso will use both internally and
      for any future interactions with the SOAP server. If you do not want to
      specify any special type information the details can be left as default.</para>
            <figure floatstyle="1">
              <title>Linking Procedures from Remote Datasources</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/admrmtprocs004.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>For each remote procedure you have the option to change how they
      will be referenced within Virtuoso by making changes to the fields for
      <emphasis>Local Name</emphasis>

  , <emphasis>Database</emphasis>

  , and
      <emphasis>Schema</emphasis>

  . These fields define how you will find the
      linked procedure locally to Virtuoso only and do not affect the remote
      data source.</para>
            <para>For each procedure there are radio buttons for selecting the
      <emphasis>PL Wrapper Requirements</emphasis>

  . This option is of particular
      importance for remote procedures capable of returning a resultset. Remote
      procedures can be linked using a Virtuoso PL wrapper meaning that Virtuoso
      procedure language code provides a mechanism for negotiating the result set.
      The available options are:</para>
            <simplelist type="vert">
              <member><emphasis>Soap Execution</emphasis>

   - Generates a PL wrapper
          that can be published to Web Services.</member>
              <member><emphasis>SQL Execution</emphasis>

   - Generates a PL Wrapper
          that is more suitable for general SQL use.</member>
              <member><emphasis>None</emphasis>

   - Does not generate and PL Wrapper
          code and simply links the procedure by reference.</member>
            </simplelist>
            <para>There is a description input box for you to write a description or
      comment for the linked procedure. This comment will only be applicable to
      procedures that are linked using a PL Wrapper, and is only directly
      applicable for PL Wrappers for SOAP execution.</para>
          </section>
        </section>
        <section xml:id="eventscheduler">
          <title>Event Scheduler</title>
          <para>
		The System Admin / Scheduler tab allows you to view, edit and remove events that
		can be scheduled to run from a particular time at a defined interval.</para>
          <figure floatstyle="1">
            <title>Event Scheduler</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admevt_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>
		To add a new scheduled event click the "Create New Event" link in tha last column of the shown form.
		The Event Name is a unique name required to uniquely identify each event. Start
		Time is when the event will be run for the first time and takes the form
		of a normal SQL timestamp value. Interval(minutes) is the length of time in minutes
		to wait to run the event again. SQL is a valid piece of SQL that you want
		to schedule to run. You can also check for "Enable Error Notification" and enter E-Mail for
                error notification.</para>
          <figure floatstyle="1">
            <title>Event Scheduler</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/admevt_01a.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>
		Events write possible error messages into the Virtuoso log file.</para>
        </section>
        <!-- ################## dbpump ################ -->

        <!-- sect2
xml:id="dbpump"><title>DB Pump</title>

<section
xml:id="dbpumpintro"><title>Introduction</title>
    <para>DBPUMP is a reincarnation of the existing DBDUMP utility. DBDUMP was
		a RDBMS-independent application for managing data and schema within the
		database for backup and restore purposes in particular. Its successor now
		incorporates a web based interface to make the
		application more appealing to the end user. Due to Virtuoso's extended support
		DBPump has been updated to include the more uncommon data types and schema
		features Virtuoso has to offer as well as all plain RDBMS features. DBPUMP
		has three parts:
		</para>
      <itemizedlist mark="bullet" spacing="compact">
		    <listitem>Single command-line program with ability to be run via CGI</listitem>
			<listitem>A set of VSP-pages to provide user interface for the mentioned program</listitem>
			<listitem>A set of PL-SQL procedures in 'PUMP' qualifier to support interaction as above</listitem>
		  </itemizedlist>
	</section>

<section
xml:id="dbpumppages"><title>VSP - Pages</title>
    <para>Currently there are nine basic pages:</para>

<section
xml:id="dbpumpdumppg"><title>Dump Page</title>
      <para>enables you to make a dump of selected tables.</para>
      <para><emphasis>Available Tables</emphasis> listbox provided a list of tables
      which satisfy the filter conditions specified below</para>
      <para><emphasis>Select All</emphasis> lets you select all available tables automatically</para>
      <para><emphasis>Deselect All</emphasis> automatically releases all selected tables</para>
      <para><emphasis>Filter</emphasis> lets you choose the type of filter you
      require. It has the following options:</para>

      <simplelist>
        <member><emphasis>none</emphasis> (default) all existing non-system tables will be available</member>
        <member><emphasis>advanced</emphasis> advanced options will be used</member>
        <member>all existing sub-schemas also will be represented</member>
      </simplelist>

      <para>The <emphasis>Advanced Filter</emphasis> button will direct you to the
      Advanced Filter page.</para>
      <para><emphasis>Dump Type</emphasis> allows you to define what should be
      included in dump from the following options:</para>

      <simplelist>
        <member><emphasis>everything</emphasis> (default) all possible data will be saved</member>
        <member><emphasis>schema-only</emphasis> will only dump the schema and ignore the data residing</member>
        <member><emphasis>data-only</emphasis> only table data will be processed</member>
        <member><emphasis>custom</emphasis> specifies that your settings from Dump Options will be used</member>
      </simplelist>

      <para><emphasis>More Options</emphasis> is where you can define which objects
      should be processed during the dump.</para>
      <para><emphasis>Sql-Binary</emphasis> lets you choose the type of dump required.
      Sql type means plain sql text. In some cases this can be inconvenient e.g.
      when the table contains blobs which in any case will be dumped separately
      with absolute path. The binary type corresponds to dbpump's default binary format.</para>
      <para><emphasis>Dump Directory</emphasis> dump location specified as a relative
      path from the server's root directory to the root directory of dump.</para>
      <para><emphasis>Browse</emphasis> lets you browse to the desired location</para>
      <para><emphasis>Dump Name</emphasis> is the name of the dump file name, hence
      'dump_1' will be converted to 'dump_1.dbk' and will reside in the specified directory</para>
      <para><emphasis>Dump</emphasis> performs dump with current options.</para>
      <para><emphasis>Restore Defaults</emphasis> restores default values of the page.</para>
    </section>

<section
xml:id="dbpumpfilteropt"><title>Filter Options</title>
      <para>This page lets you set the filtering options such as:</para>
      <para><emphasis>Match Qualifier</emphasis> (default &apos;%&apos;)lets
      you define filter for qualifier as it would be used in SQL like operator.</para>
      <para><emphasis>Match User</emphasis> filter based on table owner.</para>
      <para><emphasis>Match Table</emphasis> filter based table name.</para>
      <para><emphasis>Restore Defaults</emphasis> restores defaults.</para>
      <para><emphasis>Apply</emphasis> saves above values. If any of these values
      is not equal to '%', this will change the value of parent's filter-type listbox
      to 'Advanced'.</para>
      <para><emphasis>Cancel</emphasis> discards changes.</para>
    </section>

<section
xml:id="dbpumpbrowsepg"><title>Browse</title>
      <para>The Browse page allows you to select the path for objects to dump</para>
      <para><emphasis>Directory Listing</emphasis> provides a tree-like list of
      existing directory on the server root.</para>
      <para>The root directory for dbpump's backup tree is the <emphasis>backup</emphasis>
      directory found the server's root directory. Directories with dbpump's
      special extension '.dbk' are not taken into account.</para>
      <para><emphasis>Dir Content</emphasis> shows the current dumps stored in the
      current directory. The dump itself is a subtree, of which the root directory
      has the extension .dbk. The list shows the dump name and its creation
      date and time.</para>
      <para><emphasis>Current Directory</emphasis> displays the current dump
      directory</para>
      <para><emphasis>Change Directory</emphasis> will refresh the content of
      selected directory. To change your current directory select it in
      <emphasis>Directory Listing</emphasis> and press this <emphasis>Change
      Directory</emphasis> button.</para>
      <para><emphasis>Directory Listing</emphasis> lets you choose what to view
      in the Dir Content listbox. Possible values are:</para>

      <simplelist>
        <member><emphasis>Schema</emphasis> lists schema dumps only</member>
        <member><emphasis>Data</emphasis> displays table data dumps only</member>
        <member><emphasis>Both</emphasis> (default) will display both types.</member>
      </simplelist>

      <para><emphasis>Show Manifest</emphasis> will open a new window of the
      Dump's Manifest. The Manifest is an xml file placed in dump's root directory
      containing information about its content with name of creator and creation date/time.
      The Manifest window will display an appropriate transformation rather than raw XML.</para>
      <para><emphasis>Select</emphasis> saves the actual value of Current Dir and passes
      it to Dump Page</para>
    </section>

<section
xml:id="dbpumpadvdmpopt"><title>Advanced Dump Options</title>
      <para>The Advanced Dump Options page allows you to select objects to dump</para>
      <para><emphasis>Dump Type</emphasis> displays the dump type as in the prior page.</para>
      <para><emphasis>Table Definitions</emphasis> checkbox instructs DBPUMP to
      output table definitions. This only applies to plain SQL dumps.</para>
      <para><emphasis>Triggers</emphasis> checkbox indicates whether to include trigger
      bodies in the dump.</para>
      <para><emphasis>Stored Procedures</emphasis> checkbox for including stored procedures
      in the dump.</para>
      <para><emphasis>Constraints</emphasis> checkbox for including constraints such as
      indices, procedures ... in the dump.</para>
      <para><emphasis>FK Constraints</emphasis> includes foreign key constraint
      information in dump.</para>
      <para><emphasis>Views</emphasis> includes view declarations.</para>
      <para><emphasis>Users</emphasis> includes users.</para>
      <para><emphasis>Grants</emphasis> includes grants.</para>
      <para><emphasis>Table Data</emphasis> includes the data within the tables selected.</para>
      <para><emphasis>Insert Mode</emphasis> defines the method for returning
      the data to the database during a restore. Possible options are:</para>

      <simplelist>
        <member><emphasis>Regular</emphasis> corresponds to &apos;insert into ...&apos;</member>
        <member><emphasis>Soft</emphasis> corresponds to &apos;insert soft into ...&apos;</member>
        <member><emphasis>Replacing</emphasis> corresponds to &apos;insert replacing ...&apos;</member>
      </simplelist>

      <para><emphasis>Change Qualifier</emphasis> when checked all qualifiers in saved
      data will be changed to pointed.</para>
      <para><emphasis>Change User</emphasis> when checked all owners in saved data
      will be changed to pointed. </para>
      <para><emphasis>Restore</emphasis> restores the default values of the page.</para>
      <para><emphasis>Apply</emphasis> saves page values.</para>
      <para><emphasis>Cancel</emphasis> discards changes to the page.</para>
    </section>

<section
xml:id="dbpumprestore"><title>Restore</title>
      <para>The Restore page lets you restore previously dumped data</para>

      <para><emphasis>Directory Listing</emphasis>this is the same as in 'Browse' page tree-like list of existing folders on server root.
The root folder for dbpump's backup tree is also 'backup'.
Folders with dbpump's special extension '.dbk' are not been taken into account.</para>
      <para><emphasis>Dir Content</emphasis>here you can see a list of dumps placed in current folder.</para>
      <para><emphasis>Current Directory</emphasis>this is the same as 'Dump Directory' in 'Dump Page'.
The value of this field will be changed with every click in 'Directory Listing'</para>
      <para><emphasis>Change Directory</emphasis> will refresh the content of
      selected directory. To change your current directory select it in
      <emphasis>Directory Listing</emphasis> and press this <emphasis>Change
      Directory</emphasis> button.</para>
      <para><emphasis>Directory Listing</emphasis> lets you choose what to view
      in the Dir Content listbox. Possible values are:</para>

      <simplelist>
        <member><emphasis>Schema</emphasis> lists schema dumps only</member>
        <member><emphasis>Data</emphasis> displays table data dumps only</member>
        <member><emphasis>Both</emphasis> (default) will display both types.</member>
      </simplelist>

      <para><emphasis>Show Manifest</emphasis> will open a new window of the
      Dump's Manifest. The Manifest is an XML file placed in dump's root directory
      containing information about its content with name of creator and creation date/time.
      The Manifest window will display an appropriate transformation rather than raw XML.</para>
      <para><emphasis>Select</emphasis> saves the actual value of Current Dir and passes
      it to Dump Page</para>
      <para><emphasis>More Options</emphasis> goes to the Advanced Restore Options page.</para>
      <para><emphasis>Restore</emphasis> starts the restoration.</para>
    </section>

<section
xml:id="dbpumpadvrestoreopt"><title>Advanced Restore Options</title>
      <para>The Advanced Restore Options page lets you change some aspects of
      the restoration process.</para>
      <para><emphasis>Restore Users</emphasis> includes users.</para>
      <para><emphasis>Grants</emphasis> includes grants.</para>
      <para><emphasis>Table Data</emphasis> includes the data within the tables selected.</para>
      <para><emphasis>Insert Mode</emphasis> defines the method for returning
      the data to the database during a restore. Possible options are:</para>

      <simplelist>
        <member><emphasis>Regular</emphasis> (default) corresponds to &apos;insert into ...&apos;</member>
        <member><emphasis>Soft</emphasis> corresponds to &apos;insert soft into ...&apos;</member>
        <member><emphasis>Replacing</emphasis> corresponds to &apos;insert replacing ...&apos;</member>
      </simplelist>

      <para><emphasis></emphasis></para>

      <para><emphasis>Change Qualifier</emphasis> when checked all qualifiers in saved
      data will be changed to pointed.</para>
      <para><emphasis>Change User</emphasis> when checked all owners in saved data
      will be changed to pointed. </para>
      <para><emphasis>Apply</emphasis> saves page values.</para>
      <para><emphasis>Cancel</emphasis> discards changes to the page.</para>
    </section>

<section
xml:id="dbpumppasswdpg"><title>Password Page</title>
      <para>You will arrive at this page from the Dump and Restore pages when you
      try to dump or restore respectively.</para>
      <para><emphasis>User</emphasis> the user name.</para>
      <para><emphasis>Password</emphasis> the password from that user.</para>
      <para><emphasis>Start</emphasis> to begin the operation.</para>
    </section>

<section
xml:id="dbpumpdumpres"><title>Tables Dump Results</title>
      <para>The Tables Dump Results page displays the results of the last
      dump. The <emphasis>OK</emphasis> button returns you back to the Dump
      page.</para>
    </section>

<section
xml:id="dbpumptabrestres"><title>Tables Restore Results</title>
      <para>The Tables Restore Results page displays the results of the last restore
      including the output from the stderr of isql. The <emphasis>OK</emphasis>
      button will return you to the restore page.</para>
    </section>
  </section>

<section
xml:id="activities"><title>Example scenarios.</title>

<section
xml:id="savingschema"><title>Saving Schema</title>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem>Go to 'Dump' page</listitem>
        <listitem>Press 'More Options</listitem>
        <listitem>Select 'Dump Type' = 'Schema only'</listitem>
        <listitem>Press 'Apply'</listitem>
        <listitem>Press 'Dump' button and confirm your action</listitem>
        <listitem>Enter password and press 'Start'</listitem>
        <listitem>Press 'OK' button after getting results</listitem>
      </itemizedlist>
    </section>

<section
xml:id="dumpingtables"><title>Dumping Tables</title>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem>Go to 'Dump' page</listitem>
        <listitem>Press 'More Options'</listitem>
        <listitem>Select 'Dump Type' = 'Data only'</listitem>
        <listitem>Press 'Apply'</listitem>
        <listitem>Select 'UDDI' in 'Filter' listbox</listitem>
        <listitem>Press 'Dump' button and confirm your action</listitem>
        <listitem>Enter password and press 'Start'</listitem>
        <listitem>Press 'OK' button after getting results</listitem>
      </itemizedlist>
    </section>

<section
xml:id="restoreschemadata"><title>Restoring Schema and Data</title>
      <itemizedlist mark="bullet" spacing="compact">
        <listitem>Go to 'Restore' page</listitem>
        <listitem>Define restore directory where you have stored schema (tables),
        you can ensure that by selecting interesting dump in listbox and
        pressing 'Show manifest'.</listitem>
        <listitem>Press 'Restore' button</listitem>
        <listitem>Enter password and press 'Start'</listitem>
        <listitem>Press 'OK' button after getting results</listitem>
      </itemizedlist>
    </section>
  </section>
</section -->

        <section xml:id="virtiniadm">
          <title>Virtuoso Configuration Editor</title>
          <para>From System Admin/Parameters you can change the Virtuoso Configuration settings:
     </para>
          <figure floatstyle="1">
            <title>Virtuoso (virtuoso.ini) Configuration File Editor</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/db_strtp_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Virtuoso (virtuoso.ini) Configuration File Editor</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/db_strtp_02.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Virtuoso (virtuoso.ini) Configuration File Editor</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/db_strtp_03.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Virtuoso (virtuoso.ini) Configuration File Editor</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/db_strtp_04.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Virtuoso (virtuoso.ini) Configuration File Editor</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/db_strtp_05.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Virtuoso (virtuoso.ini) Configuration File Editor</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/db_strtp_06.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Virtuoso (virtuoso.ini) Configuration File Editor</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/db_strtp_07.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="statistics">
          <title>Dashboard and Monitor</title>
          <para>The System Admin/Dashboard consists of a collection of statistical information about
your Virtuoso server. This includes general licensing information, locking, webserver hits statistics and more.
     </para>
          <figure floatstyle="1">
            <title>Dashboard</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/sts_dsk_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>The System Admin/Monitor shows in details statistical information about your server.
     </para>
          <figure floatstyle="1">
            <title>Monitor - General Information</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/sts_gen_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Monitor - HTTP Usage</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/sts_httpsvr_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Monitor - Index Usage</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/sts_idx_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure floatstyle="1">
            <title>Monitor - Profiling</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/sts_profile_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
      </section>
      <!--&adminui.mailsrvadm;-->

      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="rdfadm">
        <title>Conductor Linked Data Administration</title>
        <para>From Conductor the "Linked Data" tab allows you to execute/save/load SPARQL queries,
	to add/edit RDF Mapping, to perform statistics and manage graphs,
	to import schemas and define namespaces, to generated Linked Data Views and to upload to the Quad Store.
	</para>
        <section xml:id="rdfadmsparql">
          <title>SPARQL</title>
          <section xml:id="rdfadmsparqlex">
            <title>Query</title>
            <para>"SPARQL -&gt; Query" offers form form SPARQL query execution:</para>
            <figure xml:id="adminuirdf1" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>Also you can save the results in a query or load such:</para>
            <figure xml:id="adminuirdf2" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf1.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="rdfadmsparqlqr">
            <title>Saved Queries</title>
            <para>"SPARQL -&gt; Saved Queries" offers list of saved queries, which can be opened in the "Query" tab
	    	in order to be executed:</para>
            <figure xml:id="adminuirdf3" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf2.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
        </section>
        <section xml:id="rdfadmsponger">
          <title>Sponger</title>
          <para> 
  </para>
          <section xml:id="rdfadmspongerexcatr">
            <title>Extractor Cartridges</title>
            <para>Shows list of available extractor cartridges. They can be re-ordered by place
	    of appearance, edit or deleted:</para>
            <figure xml:id="adminuirdf4" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf3.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>You can also add a new extractor cartridge:</para>
            <figure xml:id="adminuirdf5" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf4.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="rdfadmspongermtcatr">
            <title>Meta Cartridges</title>
            <para>Shows list of available meta cartridges. They can be re-ordered by place
	    of appearance, edit or deleted:</para>
            <figure xml:id="adminuirdf6" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf5.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>You can also add a new meta cartridge:</para>
            <figure xml:id="adminuirdf7" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf6.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="rdfadmspongerstsh">
            <title>Stylesheets</title>
            <para>Shows list of available stylesheets for processing cartridges. From here you
	    	can manage these stylesheets by adding new, editing existing ones or deleting them:</para>
            <figure xml:id="adminuirdf8" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf7.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="rdfadmspongercons">
            <title>Console</title>
            <para>Offers tracking cartridges exection. By default is off. When enabled, shows list of
	     	sessions per cartridge:</para>
            <figure xml:id="adminuirdf9" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf8.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="rdfadmspongerconf">
            <title>Configuration</title>
            <para>Offers creation of secure endpoints for pre-defiend vitual host:</para>
            <figure xml:id="adminuirdf10" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf9.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
        </section>
        <section xml:id="rdfadmstatst">
          <title>Statistics</title>
          <para>Offers interface for <link linkend="fn_rdf_void_store"><function>DB.DBA.RDF_VOID_STORE(graph, to_graph)</function></link>

  . In the new graph ( field "Publish to")
	  	will be saved the VoID statistics data when generated:</para>
          <figure xml:id="adminuirdf11" floatstyle="1">
            <title>RDF</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="rdf14.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <figure xml:id="adminuirdf12" floatstyle="1">
            <title>RDF</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="rdf15.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="rdfadmgraphs">
          <title>Graphs</title>
          <para>"Graphs" tab shows list of current graphs in the RDF Quad Store. From here
	  day can be renamed or deleted:</para>
          <figure xml:id="adminuirdf13" floatstyle="1">
            <title>RDF</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="rdf10.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="rdfadmschemas">
          <title>Schemas</title>
          <para>Shows list of available schemas IRI-s and offers a new schema IRI to be imported:</para>
          <figure xml:id="adminuirdf14" floatstyle="1">
            <title>RDF</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="rdf11.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="rdfadmnamesp">
          <title>Namespaces</title>
          <para>Shows list of namespace prefixes and offers a new namespace prefix to be imported:</para>
          <figure xml:id="adminuirdf15" floatstyle="1">
            <title>RDF</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="rdf12.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="rdfadmacl">
          <title>Access Control</title>
          <section xml:id="rdfadmaclsponger">
            <title>Sponger</title>
            <para>Manage Sponger rules by adding new ones, deleting, re-ordering, etc.</para>
            <para>This tab is available only when the
	    <link xlink:href="http://s3.amazonaws.com/opldownload/uda/vad-packages/6.3/virtuoso/cartridges_dav.vad">cartridges_dav.vad</link>

	    is installed.</para>
            <figure xml:id="adminuirdf15_01" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf19.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="rdfadmaclsparqlssl">
            <title>SPARQL-WebID</title>
            <para>Here you can manage different WebID Protocol ACLs WebID ACL by granting
	  	SPARQL Roles such as "SELECT", "UPDATE", "SPONGE":</para>
            <para>This tab is available only when the
	    <link xlink:href="http://s3.amazonaws.com/opldownload/uda/vad-packages/6.3/virtuoso/policy_manager_dav.vad">policy__manager_dav.vad</link>

	    is installed.</para>
            <figure xml:id="adminuirdf15_02" floatstyle="1">
              <title>RDF</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="rdf18.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <tip>
              <title>See Also:</title>
              <para>
                <link linkend="sparqwebservicetbl">Managing a SPARQL Web Service Endpoint</link>
              </para>
              <para>
                <link linkend="sparqloauthendpointfoafssl">WebID Protocol ACLs</link>
              </para>
              <para>
                <link linkend="sparqloauthendpointfoafsslsparql">Creating and Using a SPARQL-WebID based Endpoint</link>
              </para>
              <para>
                <link linkend="rdfsparqlendpointexamples3">Example with curl and SPARQL-WebID endpoint</link>
              </para>
            </tip>
          </section>
        </section>
        <section xml:id="rdfadmviews">
          <title>Views</title>
          <para>Virtuoso uses a SPARQL-based Meta Schema Language to provide RDBMS-to-RDF mapping
	  	functionality (also described as, Linked Data Views of SQL data). The language is an extension of the
	  	SPARQL query language meshed with Virtuoso's SPASQL (SPARQL-inside-SQL) functionality. The
	  	language enables you to declaratively map relational database schema tables, columns, rows,
	  	and foreign key relationships to Classes, Attributes, Relationships, and Instances
	  	(Objects/Entities/Individuals) defined by RDF Schemas or OWL Ontologies. The mapping
	  	process uses a special built-in Virtuoso function to generate IRIs / URIs in "Subject"
	  	or "Object" position of a SPARQL graph pattern, en route to building a set of SQL compiler
	  	rules and optimizations for translating SPARQL queries into SQL on the fly.</para>
          <figure xml:id="adminuirdf16" floatstyle="1">
            <title>RDF</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="rdf13.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <tip>
            <title>See Also:</title>
            <para>
              <link xlink:href="http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VOSSQL2RDF#Mapping%20Process">Mapping Process steps.</link>
            </para>
            <para>
              <link xlink:href="http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VOSSQL2RDF#Mapping%20Example">Mapping Example.</link>
            </para>
            <para>
              <link xlink:href="http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VOSSQL2RDF">Mapping SQL Data to RDF.</link>
            </para>
            <para>
              <link xlink:href="http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtRdb2RDFViewsGeneration">Automated Generation of Linked Data Views over Relational Data Sources with Virtuoso.</link>
            </para>
          </tip>
        </section>
        <section xml:id="rdfadm_01">
          <title>Quad Store Upoload</title>
          <para>Offers upload to Quad Store from file or Resource URL:</para>
          <figure xml:id="adminuirdf17" floatstyle="1">
            <title>RDF</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="rdf16.png"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
        <section xml:id="rdfadm_02">
          <title>Subscriptions (PHSB)</title>
          <para>This tab is available only when the
	    <link xlink:href="http://s3.amazonaws.com/opldownload/uda/vad-packages/6.1/virtuoso/pubsubhub_dav.vad">pubsubhub_dav.vad</link>

	    is installed.</para>
          <para>Offers Virtuoso's implementation of the <link xlink:href="http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html">PubSubHubBub Protocol</link>

   to handle Linked Data
	  	by subscribing to Linked Data resource URIs.</para>
          <figure xml:id="adminuirdf17_01" floatstyle="1">
            <title>Subscriptions (PHSB)</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="rdf17.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Note: the Hub endpoint should be defined ACL in System Admin -&gt; Security -&gt; Access Control -&gt; PSH-SLL</para>
          <tip>
            <title>See Also:</title>
            <para>
              <link xlink:href="http://ods.openlinksw.com/wiki/ODS/VirtPubSubHub">Example of Linked Data Usage of PubSubHubbub Implementation.</link>
            </para>
            <para>
              <link xlink:href="http://ods.openlinksw.com/wiki/ODS/VirtFeedPubSubHub">Feed subscription via PubSubHub Protocol.</link>
            </para>
            <para>
              <link xlink:href="http://ods.openlinksw.com/wiki/ODS/VirtODSPubSubHub">Setting up PubSubHub in ODS.</link>
            </para>
            <para>
              <link xlink:href="http://ods.openlinksw.com/wiki/ODS/VirtSPARQLSecurityWebID">Securing your SPARQL Endpoint via WebID.</link>
            </para>
          </tip>
        </section>
      </section>
      <!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2024 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->

      <section xml:id="newssrvadm">
        <title>Conductor News Server Administration</title>
        <section xml:id="newsgrpsadm">
          <title>Conductor Newsgroups Administration</title>
          <para>
	From Conductor the NNTP tab allows you to view and configure Newsgroups associated with the
	Virtuoso News Server. Like Virtuoso's virtual database, Virtuoso can "link" in
	newsgroups from remote news servers. This interface allows you to view the
	configuration and control the newsgroups both local and remote.</para>
          <para>
	The Virtuoso News server component will need to be enabled in
	the <link linkend="virtini">Virtuoso.ini</link>

   file by specifying
	the NewsServerPort number.</para>
          <para>The tab "NNTP Servers" shows list of the registered News servers.</para>
          <figure floatstyle="1">
            <title>News Server Administration</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/news_adm_01.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Click the "Edit" link to change the news server settings, or click the "Delete"
link to remove the news server.</para>
          <figure floatstyle="1">
            <title>Edit News Server Properties</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/news_adm_01a.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>Click the "Edit Groups" link for a current News Server in order to manage
the list of available newsgroups.</para>
          <figure floatstyle="1">
            <title>News Groups List</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/news_adm_01b.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>
	You can also <emphasis>update</emphasis>

	the cache list of newsgroups. Newsgroup names are (re)fetched in a batch
	background scheduled task. This is because the list can be very long
	or the connection to the news server could be slow. The status of the fetch
	is indicated in the grey bar at the foot of the newsgroup list table.</para>
          <para>
	For each newsgroup listed for a news server you can <emphasis>update</emphasis>

	the messages fetched, view and edit the <emphasis>Properties</emphasis>

   of the
	group, or <emphasis>Remove</emphasis>

   the group from the list. Also you can get
        previous 500 messages or to get new messages by clicking the links at the bottom
        of the form shown below.</para>
          <figure floatstyle="1">
            <title>Manage subscribed for Newsgroup</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="ui/news_adm_01c.png"/>
              </imageobject>
            </mediaobject>
          </figure>
          <section xml:id="newsaddgrp">
            <title>Add Newsgroup</title>
            <para>
	From the "NNTP Servers" tab click on the "Edit Groups" link for a registered News Server.
        Then click the <emphasis>Subscribe to newsgroups</emphasis>

   link to subscribe to newsgroups
	on the server.</para>
            <figure floatstyle="1">
              <title>Add Newsgroup</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/news_addgrp_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
            <para>
		  Once groups are selected you can use the <emphasis>Subscribe Selected</emphasis>

		  button to add the groups.
		  </para>
            <para>Use the <emphasis>Back to servers list</emphasis>

   link to return to the News Servers
		  List page.</para>
          </section>
          <section xml:id="newssrvadd">
            <title>Adding New News Server</title>
            <para>
		From Conductor NNTP/NNTP Servers you can add remote servers. The values you need to provide in
                the form are as follows:</para>
            <para><emphasis>Server Address</emphasis>

   is the IP address or hostname of the
		external news server.</para>
            <para><emphasis>Server Port</emphasis>

   is the port number that the news server
		is listening on. By default news servers listen on port 119.</para>
            <para><emphasis>Username</emphasis>

   and <emphasis>Password</emphasis>

		allow you to provide login credentials if the server requires them.</para>
            <figure floatstyle="1">
              <title>News Server Administration</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/news_add_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
          <section xml:id="newscliui">
            <title>Viewing Newsgroups</title>
            <para>
        You can view the messages of a newsgroup either using the Conductor UI going to
NNTP/NNTP Servers/News Server/News Group, or using the ODS Framework UI. In the second case you need to
have the ods_framework_dav.vad package and the ods_discussion_dav.vad package installed. Then you can go
from ODS to tab "Discussions" where will be shown the list of available newsgroups. Each one has shown as
link its name, which leads to page where are listed its messages.
        </para>
            <figure floatstyle="1">
              <title>View of messages in a newsgroup in ODS Discussions.</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="ui/news_lclsrvr_01.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </section>
        </section>
        <section xml:id="newsmsgft">
          <title>News Message Free Text Search</title>
          <para>You can perform Free Text Search using the ODS search option.</para>
        </section>
      </section>
    </section>
