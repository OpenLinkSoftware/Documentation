<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="xpf_format_number">
      <refmeta>
        <refentrytitle>format-number
</refentrytitle>
        <refmiscinfo>XPATH
</refmiscinfo>
      </refmeta>
      <refnamediv>
        <refname>format-number
</refname>
        <refpurpose/>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis xml:id="xpf_syn_format_number">
          <funcprototype xml:id="xpf_proto_format_number">
            <funcdef>string 
<function>format-number
</function>

</funcdef>
            <paramdef choice="opt"><parameter>num
</parameter>

   number
</paramdef>
            <paramdef choice="opt"><parameter>format_pattern
</parameter>

   string
</paramdef>
            <paramdef choice="opt"><parameter>decimal_format
</parameter>

   string
</paramdef>
          </funcprototype>
        </funcsynopsis>
      </refsynopsisdiv>
      <refsect1 xml:id="xpf_desc_format_number">
        <title>Description
</title>
        <para>
The function converts the <parameter>num</parameter>

   argument to a string
using the format pattern string specified by the <parameter>format_pattern</parameter>

and the decimal-format named by the <parameter>decimal_format</parameter>

  ,
or the default decimal-format, if there is no third argument.
</para>
        <para>
The format pattern string is in the syntax specified by the JDK 1.1 DecimalFormat class.
The following describes the structure of the pattern.
<itemizedlist mark="bullet" spacing="compact"><listitem><para>The pattern consists of one or two subpatterns, first is for
positive numbers and zero, second is for negative numbers.
Two subpatterns are delimited by semicolon.
If there is only one subpattern, - is prefixed to the positive subpattern.
</para></listitem><listitem><para>Every subpattern consists of
optional prefix characters
followed by an integer part
followed by an optional fraction part
followed by an optional suffix characters.
</para></listitem><listitem><para>
Prefix and suffix characters are any Unicode characters except special formatting
characters described below, while integer and fraction part consist
only from that special formatting characters. (As an exception,
special characters may appear in prefix in suffix parts if enclosed in single quotes.
</para></listitem><listitem><para>
If fractional present, it starts from '.' character, and only one '.'
may occur in the subformat. Thus it is easy to find where each part begins.
</para></listitem></itemizedlist>

By default, the following characters are treated as special when used in the parts of the subpattern:

<table><title>
    Sub-pattern character substitutions
</title><tgroup cols="2"><thead><row><entry>Symbol
</entry><entry>Meaning
</entry></row></thead><tbody><row><entry>0
</entry><entry>A digit, zero will be printed. 0 must be the last character of integer part.
</entry></row><row><entry>#
</entry><entry>A digit, zero will not be printed.
</entry></row><row><entry>.
</entry><entry>Placeholder for decimal separator in the beginning of fraction part.
</entry></row><row><entry>,
</entry><entry>Placeholder for grouping separator. It may appear only in integer part. All commas except the last will be ignored.
</entry></row><row><entry>;
</entry><entry>Separates formats. It may appear only once in the pattern.
</entry></row><row><entry>-
</entry><entry>Placeholder for negative prefix.
</entry></row><row><entry>%
</entry><entry>Indicates that the value must be multiplied by 100 and shown as percentage.
</entry></row><row><entry>?
</entry><entry>Indicates that the value must be multiplied by 1000 and shown as per mille.
</entry></row></tbody></tgroup></table>

</para>
        <para>
Note that character '¤' have a special meaning in DecimalFormat of JDK 1.1, but not in XPATH.
</para>
        <para>
The format pattern string may be in a localized notation.
The <parameter>decimal_format</parameter>

   may determine what characters have a special meaning in the pattern
(with the exception of the quote character, which is not localized).
The <parameter>decimal_format</parameter>

   must be a QName,
and a search will be performed for top-level &lt;xsl:decimal-format&gt; key
whose "key" attribute is equal to <parameter>decimal_format</parameter>

  ;
all names will be expanded before the search.
It is an error if the stylesheet does not contain a declaration of the decimal-format with the specified expanded name.

</para>
      </refsect1>
      <refsect1 xml:id="xpf_params_format_number">
        <title>Parameters
</title>
        <refsect2>
          <title>num
</title>
          <para>Number to format.
</para>
        </refsect2>
        <refsect2>
          <title>format_pattern
</title>
          <para>Format pattern which must be applied to the number.
</para>
        </refsect2>
        <refsect2>
          <title>decimal_format
</title>
          <para>Name of &lt;xsl:decimal-format&gt; element which must be used to parse format pattern.
</para>
        </refsect2>
      </refsect1>
      <refsect1 xml:id="xpf_ret_format_number">
        <title>Return Types
</title>
        <para>String
</para>
      </refsect1>
      <refsect1 xml:id="xpf_errors_nnn">
        <title>Errors
</title>
        <table>
          <title>Errors signalled by
</title>
          <tgroup cols="4">
            <thead>
              <row>
                <entry>SQLState
</entry>
                <entry>Error Code
</entry>
                <entry>Error Text
</entry>
                <entry>Description
</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <errorcode>XS370
</errorcode>
                </entry>
                <entry>
                  <errorcode>XS036
</errorcode>
                </entry>
                <entry>
                  <errortext>Number format ... is not defined in XPath function format-number()
</errortext>
                </entry>
                <entry>The function is called outside an XSLT processor or the current stylesheet contains no format definition with the required name.
</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </refsect1>
      <refsect1 xml:id="xpf_examples_format_number">
        <title>Examples
</title>
        <example xml:id="xpf_ex_format_number">
          <title> 
  </title>
          <para>If the XSLT stylesheet defines format 'financial' as '###,###.00####', then the following returns '123,456.789':
</para>
          <screen>format(123456.789, "financial")
</screen>
        </example>
      </refsect1>
    </refentry>
