<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="virtuosospongercartridgesextractorusecases">
        <title>RDF Cartridges Use Cases</title>
        <para>This section contains examples of Web resources which can be transformed by RDF Cartridges.
It also states where additional setup for given cartridges is needed i.e. keys account names etc.
</para>
        <para>
          <emphasis>Service based:</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>amazon
</para>
            <programlisting>
needs: api key
example: http://www.amazon.com/gp/product/0553383043
</programlisting>
          </listitem>
          <listitem>
            <para>ebay
</para>
            <programlisting>
needs: account, api-key
example: http://cgi.ebay.com/RARE-DAY-IN-FAIRY-LAND-ELEPHANT-FOLIO-20-FULL-COLOR_W0QQitemZ140209597189QQihZ004QQcategoryZ29223QQssPageNameZWDVWQQrdZ1QQcmdZViewItem
</programlisting>
          </listitem>
          <listitem>
            <para>flickr
needs: api-key
example: http://farm1.static.flickr.com/212/496684670_7122c831ed.jpg
</para>
            <programlisting>
</programlisting>
          </listitem>
          <listitem>
            <para>mbz
</para>
            <programlisting>
example: http://musicbrainz.org/release/37e955d4-a53c-45aa-a812-1b23b88dbc13.html
</programlisting>
          </listitem>
          <listitem>
            <para>mql (freebase)
</para>
            <programlisting>
example: http://www.freebase.com/view/en/beta_ursae_majoris
</programlisting>
          </listitem>
          <listitem>
            <para>facebook
</para>
            <programlisting>
needs: api-key, secret, persistent-session-id
example: http://www.facebook.com/profile.php?id=841100003
</programlisting>
          </listitem>
          <listitem>
            <para>yahoo-stock
</para>
            <programlisting>
example: http://finance.yahoo.com/q?s=AAPL
</programlisting>
          </listitem>
          <listitem>
            <para>yahoo-traffic
</para>
            <programlisting>
example: http://local.yahooapis.com/MapsService/V1/trafficData?appid=YahooDemo&amp;street=701+First+Street&amp;city=Sunnyvale&amp;state=CA
</programlisting>
          </listitem>
          <listitem>
            <para>Bugzilla
</para>
            <programlisting>
example: https://bugzilla.mozilla.org/show_bug.cgi?id=251714
</programlisting>
          </listitem>
          <listitem>
            <para>SVG</para>
          </listitem>
          <listitem>
            <para>OO document
</para>
            <programlisting>
needs: unzip plugin
</programlisting>
          </listitem>
          <listitem>
            <para>Wikipedia
</para>
            <programlisting>
needs: php plugin &amp; dbpedia extractor
example: http://wikipedia.org/wiki/London
</programlisting>
          </listitem>
          <listitem>
            <para>Opencalais</para>
          </listitem>
          <listitem>
            <para>iCalendar</para>
          </listitem>
        </itemizedlist>
        <para>
          <emphasis>GRDDL</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>Google Base (google)
</para>
            <programlisting>
example: http://www.google.com/base/feeds/snippets/17891817243016304554
</programlisting>
          </listitem>
          <listitem>
            <para>eRDF</para>
          </listitem>
          <listitem>
            <para>RDFa</para>
          </listitem>
          <listitem>
            <para>hCard</para>
          </listitem>
          <listitem>
            <para>hCalendar</para>
          </listitem>
          <listitem>
            <para>hReview</para>
          </listitem>
          <listitem>
            <para>relLicense</para>
          </listitem>
          <listitem>
            <para>XBRL</para>
          </listitem>
          <listitem>
            <para>HR-XML</para>
          </listitem>
          <listitem>
            <para>DC</para>
          </listitem>
          <listitem>
            <para>geoURL</para>
          </listitem>
          <listitem>
            <para>Ning</para>
          </listitem>
          <listitem>
            <para>XFN</para>
          </listitem>
          <listitem>
            <para>xFolk</para>
          </listitem>
        </itemizedlist>
        <para>
          <emphasis>URN handlers</emphasis>
        </para>
        <table colsep="1" frame="all" rowsep="0" shortentry="0" tocentry="1" tabstyle="decimalstyle" orient="land" pgwide="0">
          <title>URN handlers List</title>
          <tgroup align="char" charoff="50" char="." cols="6">
            <colspec align="left" colnum="1" colsep="0" colwidth="20pc"/>
            <thead>
              <row>
                <entry>URN handler</entry>
                <entry>Sample URI</entry>
                <entry>Resource Description</entry>
                <entry>Linked Data View</entry>
                <entry>Linked Data Graph</entry>
                <entry>Needs</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>LSID</entry>
                <entry>urn:lsid:ubio.org:namebank:12292</entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/about/html/urn:lsid:ubio.org:namebank:12292">HTML Representation</link>
                </entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/describe/?url=urn:lsid:ubio.org:namebank:12292">Linked Data View</link>
                </entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/ode/?uri=urn:lsid:ubio.org:namebank:12292">Data Explorer View</link>
                </entry>
                <entry>none</entry>
              </row>
              <row>
                <entry>DOI</entry>
                <entry>doi:10.1038/35057062</entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/about/html/doi:10.1038/35057062">HTML Representation</link>
                </entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/describe/?url=doi:10.1038/35057062">Linked Data View</link>
                </entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/ode/?uri=doi:10.1038/35057062">Data Explorer View</link>
                </entry>
                <entry>Needs hslookup plugin, relevant html, pdf, xml etc. mappers enabled.</entry>
              </row>
              <row>
                <entry>OAI</entry>
                <entry>oai:dcmi.ischool.washington.edu:article/8</entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/about/html/oai:dcmi.ischool.washington.edu:article/8">HTML Representation</link>
                </entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/describe/?url=oai:dcmi.ischool.washington.edu:article/8">Linked Data View</link>
                </entry>
                <entry>
                  <link xlink:href="http://demo.openlinksw.com/ode/?uri=oai:dcmi.ischool.washington.edu:article/8">Data Explorer View</link>
                </entry>
                <entry>none</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
        <section xml:id="virtuosospongerrdfmappers">
          <title>SPARQL IRI Dereferencing</title>
          <para>The Virtuoso SPARQL engine (called for brevity just SPARQL below) supports IRI Dereferencing,
however it understands only RDF data, that is it can retrieve only files containing RDF/XML, turtle
or N3 serialized RDF data, if format is unknown it will try mapping with built-in WebDAV metadata
extractor. In order to extend this feature with dereferencing web or file resources which naturally
don't have RDF data (like PDF, JPEG files for example) is provided a special mechanism in SPARQL
engine. This mechanism is called RDF mappers for translation of non-RDF data files to RDF.</para>
          <para>In order to instruct the SPARQL to call a RDF mapper it needs to be registered and it will
be called for a given URL or MIME type pattern. In other words, when unknown for SPARQL format is
received during URL dereferencing process, it will look into a special registry (a table) to match
either the MIME type or IRI using a regular expression, if match is found the mapper function will
be called.</para>
          <section xml:id="virtuosospongerproxy">
            <title>Sponger Proxy service</title>
            <para>Sponger functionality is also exposed via Virtuoso's "/proxy/rdf/" endpoint, as an in-built
REST style Web service available in any Virtuoso standard installation. This web service takes
a target URL and either returns the content "as is" or tries to transform (by sponging) to RDF.
Thus, the proxy service can be used as a 'pipe' for RDF browsers to browse non-RDF sources.
</para>
            <para>For more information see <link linkend="rdfproxyservice">RDF Sponger Proxy service</link>

  </para>
          </section>
          <section xml:id="virtuosospongercache">
            <title>Cache Invalidation</title>
            <para>To clear cache on all values of HS_LOCAL_IRI of the SYS_HTTP_SPONGE table use:</para>
            <programlisting>
SPARQL clear graph &lt;A-Named-Graph&gt;;
</programlisting>
          </section>
        </section>
      </section>
