<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="vc_login_form">
          <refmeta>
            <refentrytitle>login-form</refentrytitle>
            <refmiscinfo>vspx_control</refmiscinfo>
          </refmeta>
          <refnamediv>
            <refname>login-form</refname>
            <refpurpose>A form to be shown if the user is not logged in.</refpurpose>
          </refnamediv>
          <refsynopsisdiv>
            <funcsynopsis xml:id="vc_syn_login_form">
              <funcprototype xml:id="vc_proto_login_form">
                <funcdef>
            &lt;<function>login-form</function>

 /&gt;</funcdef>
                <paramdef choice="req"><parameter>name</parameter>

   (required) </paramdef>
                <paramdef choice="opt"><parameter>annotation</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>initial-enable</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>enabled</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>instantiate</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>control-udt</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>xsd-stub-xhtml</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>width</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>height</parameter>

   (optional) </paramdef>
                <paramdef choice="req"><parameter>required</parameter>

   (required) </paramdef>
                <paramdef choice="opt"><parameter>title</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>user-title</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>password-title</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>submit-title</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-srcfile</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-srcline</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-log</parameter>

   (optional) </paramdef>
              </funcprototype>
            </funcsynopsis>
          </refsynopsisdiv>
          <refsect1 xml:id="vc_desc_login_form">
            <title>Description</title>
            <para>
login-form is the control for getting login information.  This may only appear inside a login.
Its function will depend on the type of login being attempted.  If the type is digest, this is a button which, when submitted, will send the digest challenge.
			</para>
            <para>
If the url or cookie session mode is chosen, this will be a form of 2 fields with user name and password and a submit button.
			</para>
            <para>
if the standard form is not suitable, this can be an arbitrary form.  This must post  buttons values named "username" and "password" and a submit button named "login".  No children need be specified if the default form is OK.
			</para>
            <para>
If the redirect attribute of template[@type=if-no-login] is not specified,
the contents of this child are instantiated and shown in the place of the login control.
This can be arbitrary content.
			</para>
          </refsect1>
          <refsect1 xml:id="vc_attrs_login_form">
            <title>Attributes</title>
            <formalpara>
              <title>name = <link linkend="vc_type_sqlname">SqlName</link>

   </title>
              <para>A page level unique name identifying a control.</para>
            </formalpara>
            <formalpara>
              <title>annotation</title>
              <para>A human readable comment.</para>
            </formalpara>
            <formalpara>
              <title>initial-enable = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines  whether  a control is initially visible. True by default. Could be data-bound to an SQL expression.</para>
            </formalpara>
            <formalpara>
              <title>enabled = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines  whether  a control is visible. True by default. Could be data-bound to an SQL expression.</para>
            </formalpara>
            <formalpara>
              <title>instantiate = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines whether a control instantiate its children. It is true by default. It could be data-bound to an SQL expression. Unlike most of calcucateable attributes, the value of this attribute for a control is calcluated before calling 'on-init' event handler of the control; other values are calculated before calling 'before-data-bind' event handler.</para>
            </formalpara>
            <formalpara>
              <title>control-udt = <link linkend="vc_type_sqlname">SqlName</link>

   </title>
              <para>At run time every control is represented as an instance of some user-defined type (UDT). VSPX compiles selects the UDT to use depending on name of the XML element that represents the control and maybe some of its attributes. In some specific cases the application developer may instruct VSPX compiler to use some other UDT, e.g. an application-specific UDT that is derived from the preset one. If specified, the value of 'control-udt' attribute should be equal to the name of the desired target UDT.</para>
            </formalpara>
            <formalpara>
              <title>xsd-stub-xhtml</title>
              <para>This attribute is for internal use only. It has no effect if added to the source VSPX file.</para>
            </formalpara>
            <formalpara>
              <title>width</title>
              <para>Visible width of the control when it is displayed in WYSIWYG tools when the source VSPX text is edited.
The value of this attribute will not be used when the resulting HTML is rendered.</para>
            </formalpara>
            <formalpara>
              <title>height</title>
              <para>Visible width of the control when it is displayed in WYSIWYG tools when the source VSPX text is edited.
The value of this attribute will not be used when the resulting HTML is rendered.</para>
            </formalpara>
            <formalpara>
              <title>required</title>
              <para>
If digest is the mode, then this means that the login is mandatory and that instead of displaying the login button which will send the challenge if pressed, the challenge will be sent automatically.
			   </para>
            </formalpara>
            <formalpara>
              <title>title</title>
              <para>Title of login button if digest is attempted.
			   </para>
            </formalpara>
            <formalpara>
              <title>user-title</title>
              <para>Title of user name field
			   </para>
            </formalpara>
            <formalpara>
              <title>password-title</title>
              <para>Title of password field
			   </para>
            </formalpara>
            <formalpara>
              <title>submit-title</title>
              <para>Title of submit button
			   </para>
            </formalpara>
            <formalpara>
              <title>debug-srcfile</title>
              <para>URI of the source document where the tag comes from.</para>
            </formalpara>
            <formalpara>
              <title>debug-srcline</title>
              <para>Line number in the source document where the tag comes from.</para>
            </formalpara>
            <formalpara>
              <title>debug-log</title>
              <para>This defines what sort of data are saved to the debugging log.
</para>
            </formalpara>
          </refsect1>
          <refsect1 xml:id="vc_udt_login_form">
            <title>Declaration of type vspx_login_form</title>
            <para> 
  </para>
            <screen>
create type vspx_login_form under vspx_form
as
  (
   vlf_title varchar,
   vlf_user_title varchar,
   vlf_password_title varchar,
   vlf_submit_title varchar,
   vlf_login vspx_login
  ) temporary self as ref
constructor method vspx_login_form (name varchar,  parent vspx_control),
constructor method vspx_login_form (name varchar, title varchar, user_title varchar, password_title varchar, submit_tile varchar, login vspx_login),
overriding method vc_render () returns any
</screen>
          </refsect1>
          <refsect1 xml:id="vc_ex_login_form">
            <title>Examples</title>
            <example xml:id="vc_ex_login_form__0">
              <title>
  A simple default login-form
</title>
              <para>This example will render just a login form:</para>
              <screen>
&lt;v:page name="login_form__0" xmlns:v="http://http://example.com/vspx/"&gt;
  &lt;html&gt;
    &lt;head&gt;&lt;title&gt;VSPX samples | v:login-form&lt;/title&gt;&lt;/head&gt;
    &lt;body&gt;
      &lt;v:login name="login_0" mode="url" user-password-check="sql_user_password_check" realm="vspx"&gt;
        &lt;v:login-form name="login_form_0"
          required="1"
          title="Login"
          user-title="User Name"
          password-title="Password"
          submit-title="Login"/&gt;
        &lt;/v:login&gt;
    &lt;/body&gt;
  &lt;/html&gt;
&lt;/v:page&gt;
</screen>
            </example>
          </refsect1>
        </refentry>
