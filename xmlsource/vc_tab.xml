<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="vc_tab">
          <refmeta>
            <refentrytitle>tab</refentrytitle>
            <refmiscinfo>vspx_control</refmiscinfo>
          </refmeta>
          <refnamediv>
            <refname>tab</refname>
            <refpurpose>Selects one of its children to be active at any one time.</refpurpose>
          </refnamediv>
          <refsynopsisdiv>
            <funcsynopsis xml:id="vc_syn_tab">
              <funcprototype xml:id="vc_proto_tab">
                <funcdef>
            &lt;<function>tab</function>

 /&gt;</funcdef>
                <paramdef choice="req"><parameter>name</parameter>

   (required) </paramdef>
                <paramdef choice="opt"><parameter>annotation</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>initial-enable</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>enabled</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>instantiate</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>control-udt</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>xsd-stub-xhtml</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>width</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>height</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>initial-active</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>style</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>active</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>is-input</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-srcfile</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-srcline</parameter>

   (optional) </paramdef>
                <paramdef choice="opt"><parameter>debug-log</parameter>

   (optional) </paramdef>
              </funcprototype>
            </funcsynopsis>
          </refsynopsisdiv>
          <refsect1 xml:id="vc_desc_tab">
            <title>Description</title>
            <para>
A container that contains some number of pages and displays them one by one.
This can be used for multi-page forms or Windows style tabbed decks or making multi-part forms, alternative visualizations of the same data etc.
</para>
          </refsect1>
          <refsect1 xml:id="vc_attrs_tab">
            <title>Attributes</title>
            <formalpara>
              <title>name = <link linkend="vc_type_sqlname">SqlName</link>

   </title>
              <para>A page level unique name identifying a control.</para>
            </formalpara>
            <formalpara>
              <title>annotation</title>
              <para>A human readable comment.</para>
            </formalpara>
            <formalpara>
              <title>initial-enable = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines  whether  a control is initially visible. True by default. Could be data-bound to an SQL expression.</para>
            </formalpara>
            <formalpara>
              <title>enabled = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines  whether  a control is visible. True by default. Could be data-bound to an SQL expression.</para>
            </formalpara>
            <formalpara>
              <title>instantiate = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>Determines whether a control instantiate its children. It is true by default. It could be data-bound to an SQL expression. Unlike most of calcucateable attributes, the value of this attribute for a control is calcluated before calling 'on-init' event handler of the control; other values are calculated before calling 'before-data-bind' event handler.</para>
            </formalpara>
            <formalpara>
              <title>control-udt = <link linkend="vc_type_sqlname">SqlName</link>

   </title>
              <para>At run time every control is represented as an instance of some user-defined type (UDT). VSPX compiles selects the UDT to use depending on name of the XML element that represents the control and maybe some of its attributes. In some specific cases the application developer may instruct VSPX compiler to use some other UDT, e.g. an application-specific UDT that is derived from the preset one. If specified, the value of 'control-udt' attribute should be equal to the name of the desired target UDT.</para>
            </formalpara>
            <formalpara>
              <title>xsd-stub-xhtml</title>
              <para>This attribute is for internal use only. It has no effect if added to the source VSPX file.</para>
            </formalpara>
            <formalpara>
              <title>width</title>
              <para>Visible width of the control when it is displayed in WYSIWYG tools when the source VSPX text is edited.
The value of this attribute will not be used when the resulting HTML is rendered.</para>
            </formalpara>
            <formalpara>
              <title>height</title>
              <para>Visible width of the control when it is displayed in WYSIWYG tools when the source VSPX text is edited.
The value of this attribute will not be used when the resulting HTML is rendered.</para>
            </formalpara>
            <formalpara>
              <title>initial-active = <link linkend="vc_type_sqlname">SqlName</link>

   </title>
              <para>
This is the name of the child template which is active at the time and
which thus will be rendered.  Whether inactive templates are
instantiated and keep state is controlled by is-input.  The active
attribute initializes the tb_active member of the vspx_tab instance.
This is preserved in the view state. Data bindable.
			    </para>
            </formalpara>
            <formalpara>
              <title>style</title>
              <para>
This determines what HTML control is used to select which child is shown.
If unspecified, there will be no such control and the program logic is responsible for flipping the pages.  Otherwise  "list" means there is a HTML select control showing the titles  of the tabs.  "radio" means the titles of the tabs are shown as a radio group.  If there is a tab selector widget, it is always above the tabs.
			    </para>
            </formalpara>
            <formalpara>
              <title>active = <link linkend="vc_type_calculateablevalue">CalculateableValue</link>

   </title>
              <para>A data bound value to enable or disable the tab switch.
	    The default is '1' meaning 'enable'.</para>
            </formalpara>
            <formalpara>
              <title>is-input</title>
              <para>If true, all the children are considered to be collectively a
	    multipart form and each will be instantiated when the page is made and
	    will get to retain a view state.  Although only one page of the form
	    is shown at a time, the state of all is kept. Not data bindable.
	    The default is '1' meaning 'template contains input'.</para>
            </formalpara>
            <formalpara>
              <title>debug-srcfile</title>
              <para>URI of the source document where the tag comes from.</para>
            </formalpara>
            <formalpara>
              <title>debug-srcline</title>
              <para>Line number in the source document where the tag comes from.</para>
            </formalpara>
            <formalpara>
              <title>debug-log</title>
              <para>This defines what sort of data are saved to the debugging log.
</para>
            </formalpara>
          </refsect1>
          <refsect1 xml:id="vc_udt_tab">
            <title>Declaration of type vspx_tab</title>
            <para>
Tab Deck
</para>
            <screen>
create type vspx_tab under vspx_form
as
   (
     tb_active vspx_template,
     tb_is_input int default 0,
     tb_style varchar
   )
    temporary self as ref
   constructor method vspx_tab (name varchar, parent vspx_control),
   --overriding method vc_render () returns any,
   overriding method vc_set_view_state (e vspx_event) returns any,
   overriding method vc_view_state (stream any, n int) returns any
</screen>
          </refsect1>
          <refsect1 xml:id="vc_ex_tab">
            <title>Examples</title>
            <example xml:id="vc_ex_tab__0">
              <title>Switching of page content</title>
              <para>The sample page contains three templates; only one of three is shown and user can switch them to change the visible content of the page.</para>
              <screen>
&lt;v:page name="tab__0" xmlns:v="http://http://example.com/vspx/"&gt;
  &lt;html&gt;
    &lt;head&gt;&lt;title&gt;VSPX samples | v:tab&lt;/title&gt;&lt;/head&gt;
    &lt;body&gt;
      &lt;v:tab name="tab" initial-active="template1" style="list" is-input="0"&gt;
        &lt;v:template name="template1" type="simple"&gt;This is a first template&lt;/v:template&gt;
        &lt;v:template name="template2" type="simple"&gt;This is a second template&lt;/v:template&gt;
        &lt;v:template name="template3" type="simple"&gt;This is a third template&lt;/v:template&gt;
      &lt;/v:tab&gt;
    &lt;/body&gt;
  &lt;/html&gt;
&lt;/v:page&gt;
</screen>
            </example>
            <tip>
              <title>See Also: Reference Material in the Tutorial:</title>
              <para>
                <link xlink:href="http://demo.openlinksw.com/tutorial/web/vx_s_5/tab.vspx">VX-S-5</link>
              </para>
            </tip>
          </refsect1>
        </refentry>
