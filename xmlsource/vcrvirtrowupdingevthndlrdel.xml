<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="vcrvirtrowupdingevthndlrdel">
          <title>VirtuosoRowUpdatingEventHandler Delegate</title>
          <para>Represents the method that will handle the RowUpdating event of a VirtuosoDataAdapter.</para>
          <methodsynopsis>
            <modifier>public</modifier>
            <modifier>delegate</modifier>
            <void/>
            <methodname>VirtuosoRowUpdatingEventHandler</methodname>
            <methodparam rep="norepeat" choice="req">
              <type>object</type>
              <parameter>sender</parameter>
            </methodparam>
            <methodparam rep="norepeat" choice="req">
              <type>VirtuosoRowUpdatingEventArgs</type>
              <parameter>e</parameter>
            </methodparam>
          </methodsynopsis>
          <section>
            <title>Parameters</title>
            <para>The declaration of your event handler must have the same parameters as the VirtuosoRowUpdatingEventHandler
delegate declaration. </para>
            <variablelist>
              <varlistentry>
                <term>sender</term>
                <listitem>
                  <para>
		The source of the event.
	      </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>e</term>
                <listitem>
                  <para>
		A VirtuosoRowUpdatingEventArgs object that contains the event data.
	      </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section>
            <title>Remarks</title>
            <para>The handler is not required perform any action, and your code should avoid generating exceptions or
allowing exceptions to propagate to the calling method. Any exceptions that do reach the caller are ignored. When you
create a VirtuosoRowUpdatingEventHandler delegate, you identify the method that will handle the event. To associate
the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever
the event occurs, unless you remove the delegate. For more information about event handler delegates,
see "Events and Delegates" in the .NET Framework SDK documentation.</para>
          </section>
        </section>
