<docbook><section><title>OATDOCsoap</title><para> </para>
<title> soap.js</title> soap.js
<para>Provides basic asynchronous XML call (AJAX) routines for use with SOAP requests.</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h2"> Functions</bridgehead>
<bridgehead class="http://www.w3.org/1999/xhtml:h3"> OAT.Soap.command(url, data, callback, customHeaders)</bridgehead>
<para>Sends an HTTP request to a page <computeroutput>url</computeroutput>.
 Data to be contained in request are specified in <computeroutput>data</computeroutput>.
 When response arrives, <computeroutput>callback(response)</computeroutput> will be executed.
 You may specify the following <computeroutput>customHeaders</computeroutput>:</para>
<para>This function is similar to its <computeroutput><ulink url="OATDOCajax2">OAT.AJAX.*</ulink></computeroutput> counterpart, except that you don&#39;t have to specify method (HTTP <computeroutput>GET</computeroutput> with SOAP headers is always used) and sent data are automatically put into the SOAP envelope.</para>
<para>Using this call replaces this:</para>
<programlisting>var options = {
    type:OAT.AJAX.TYPE_XML,
    auth:OAT.AJAX.AUTH_BASIC,
    async:true
    noSecurityCookie:false
    user:&quot;username&quot;,
    password:&quot;top_secret&quot;,
    headers: ToBeDone -- put some headers in! 
    onerror:function(request) { alert(request.getStatus()); }
    onstart:
    onend:
}
var callback = function(data) { alert(data); };
OAT.AJAX.SOAP(&quot;/myfile.xml&quot;, false, callback, options);
</programlisting><para> -- with this --</para>
<programlisting>var customHeaders = ToBeDone -- put some headers in! ; 
var callback = function(data) { alert(data); };
OAT.Soap.command(&quot;/myfile.xml&quot;, false, callback, customHeaders);
</programlisting><para> <emphasis> <ulink url="ToBeDone">ToBeDone</ulink> - correct the code snippets above to reflect the actual effective replacement...</emphasis></para>
<para><ulink url="ToBeDone">ToBeDone</ulink> - add Constants, Messages, Properties, <computeroutput>OAT.Soap.abortAll()</computeroutput>, borrowing from <computeroutput><ulink url="OATDOCajax2">OAT.AJAX.*</ulink></computeroutput> as relevant</para>
<para><ulink url="CategoryDocumentation">CategoryDocumentation</ulink> <ulink url="CategoryOAT">CategoryOAT</ulink> <ulink url="CategoryOpenSource">CategoryOpenSource</ulink> <ulink url="CategoryToBeDone">CategoryToBeDone</ulink></para>
</section></docbook>