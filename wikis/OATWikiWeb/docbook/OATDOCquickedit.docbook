<docbook><section><title>OATDOCquickedit</title><para> </para>
<title> quickedit.js</title> quickedit.js
<para>Provides edit-in-place functionality.</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h2"> Functions</bridgehead>
<bridgehead class="http://www.w3.org/1999/xhtml:h3"> OAT.QuickEdit.assign(element, type, [options])</bridgehead>
<para>Marks element as <computeroutput>QuickEdit</computeroutput>, i.e., when user clicks it, it transforms into input.
 <computeroutput>type</computeroutput> specifies input type: </para>
<itemizedlist mark="bullet" spacing="compact"><listitem><computeroutput>QuickEdit.STRING</computeroutput> =&gt; input </listitem>
<listitem><computeroutput>QuickEdit.SELECT</computeroutput> =&gt; select.</listitem>
</itemizedlist><para>If <computeroutput>QuickEdit.SELECT</computeroutput> type is chosen, values are specified as an array in <computeroutput>options</computeroutput>.</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h2"> Constants</bridgehead>
<bridgehead class="http://www.w3.org/1999/xhtml:h3"> OAT.QuickEdit.STRING</bridgehead>
<para>string value</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h3"> OAT.QuickEdit.SELECT</bridgehead>
<para>predefined values from the select element</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h2"> Example</bridgehead>
<programlisting>var text = OAT.Dom.create(&quot;span&quot;);
text.innerHTML = &quot;hello&quot;;
OAT.QuickEdit.assign(text, OAT.QuickEdit.SELECT, [&quot;hello&quot;,&quot;hi&quot;,&quot;goodbye&quot;]);
</programlisting><para> <ulink url="CategoryDocumentation">CategoryDocumentation</ulink> <ulink url="CategoryOAT">CategoryOAT</ulink> <ulink url="CategoryOpenSource">CategoryOpenSource</ulink></para>
</section></docbook>