%META:TOPICPARENT{name="OATDOCIndex"}%
---+ Event handling basics

Event handling is very simple in this toolkit. There are two routines that accomplish this:

%TOC%

---++ OAT.Event.attach(element, event, functionReference)
      
First argument specifies an element which should detect the event. Second is the event (without the 'on' prefix). Last argument is a valid function reference, i.e., the name of an existing function or Anonymous function.

---+++ Examples

<verbatim>
var div = OAT.Dom.create("div");
OAT.Event.attach(div, "mouseover", function() { alert('Hi!'); });
</verbatim>

or

<verbatim>
OAT.Event.attach("some_id", "click", genericFunctionReference);
</verbatim>

---++ OAT.Event.detach(element, event, functionReference)

Use the same syntax as inOAT.Event.attach().: ThefunctionReferenceargument must exist in the current scope, so it is not possible to remove aneventhandled by anonymous function.

---+++ Example

<verbatim>
OAT.Event.detach(element, "click", functionReference);
</verbatim>

CategoryDocumentation CategoryOAT CategoryOpenSource
