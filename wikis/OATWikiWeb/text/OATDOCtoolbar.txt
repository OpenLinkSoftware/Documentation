%META:TOPICPARENT{name="OATDOCIndex"}%
---+ toolbar.js

Basic Toolbar control.

%TOC%

---++ Objects

---+++ OAT.Toolbar(div, options)

Creates a <tt>Toolbar</tt>. Its main <tt>div</tt> is accessible as toolbar. <tt>div</tt>. You can use the following <tt>options</tt>:

   * <tt>*labels*</tt> - use labels (default <tt>false</tt>)

---++ Methods

---+++ OAT.Toolbar.addIcon(twoStates, imagePath, tooltip, callback)

Adds a new icon to Toolbar. If <tt>twoStates</tt> is true, then this icon will have two states (otherwise 1). This icon will have image located at <tt>imagePath</tt>; onHoverit will display <tt>tooltip</tt>; and clicking it will execute <tt>callback</tt> (with state #, 0 or 1, as an argument).

---+++ OAT.Toolbar.addSeparator()

Adds a separator.

---+++ OAT.Toolbar.removeIcon(icon)

Remove <tt>icon</tt>.

---+++ OAT.Toolbar.removeSeparator(separator)

Remove <tt>separator</tt>.

---++ CSS classes

---+++ OAT.Toolbar.toolbar

ToBeDone

---+++ OAT.Toolbar.toolbar_icon

ToBeDone

---+++ OAT.Toolbar.toolbar icon_down

ToBeDone

---+++ OAT.Toolbar.toolbar_separator

ToBeDone

---++ Example

<verbatim>
var callback = function(state) { alert(state); }
var t = new OAT.Toolbar();
t.addIcon(true, "", "some tooltip", callback);
document.body.appendChild(t.div);
</verbatim>

CategoryDocumentation CategoryOAT CategoryOpenSource CategoryToBeDone
