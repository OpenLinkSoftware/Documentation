%META:TOPICPARENT{name="OATDOCIndex"}%
---+ ghostdrag.js

Provides drag'n'drop functionality.

%TOC%

---++ Objects

---+++ OAT.GhostDrag()

Creates a <tt>GhostDrag</tt> object.

---++ Methods

---+++ OAT.GhostDrag::addSource(element, process, callback)

Mark <tt>selement</tt> as draggable. When user drags it, a "ghost" clone is created. Then, the <tt>process</tt> function is called with this clone as argument. If user drags the clone to one of marked target zones, a <tt>callback</tt> is performed with three arguments <tt>-x,y</tt> and <tt>target</tt> element.

---+++ OAT.GhostDrag::delSource(element)

Marks <tt>element</tt> as not draggable.

---+++ OAT.GhostDrag::clearSources()

Removes all draggable elements from this <tt>GhostDrag</tt> object.

---+++ OAT.GhostDrag::addTarget(element)

Mark <tt>selement</tt> as a valid ending zone for drag'n'drop.

---+++ OAT.GhostDrag::delTarget(element)

Mark <tt>selement</tt> as not a target zone.

---+++ OAT.GhostDrag::clearTargets()

Removes all target zones from this <tt>GhostDrag</tt> object.

---++ Example

<verbatim>
var product = Dom.create("img");
var shopping_cart = Dom.create("div");
var gd = new OAT.GhostDrag();
var dummyReference = function() {};
var successReference = function(target, x, y) { alert("Success!"); }
gd.addTarget(shopping_cart);
gr.addSource(product, dummyReference, successReference);
</verbatim>

CategoryOAT CategoryDocumentation CategoryOpenSource
