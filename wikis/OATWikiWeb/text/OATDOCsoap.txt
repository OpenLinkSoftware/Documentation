%META:TOPICPARENT{name="OATDOCIndex"}%
---+ soap.js

Provides basic asynchronous XML call (AJAX) routines for use with SOAP requests.

%TOC%

---++ Functions

---+++ OAT.Soap.command(url, data, callback, customHeaders)

Sends an HTTP request to a page <tt>url</tt>. Data to be contained in request are specified in <tt>data</tt>. When response arrives, <tt>callback(response)</tt> will be executed. You may specify the following <tt>customHeaders</tt>:

This function is similar to its <tt>[[OATDOCajax2][OAT.AJAX.*]]</tt> 
counterpart, except that you don't have to specify method (HTTP 
<tt>GET</tt> with SOAP headers is always used) and sent data are 
automatically put into the SOAP envelope.  

Using this call replaces this:

<verbatim>
var options = {
    type:OAT.AJAX.TYPE_XML,
    auth:OAT.AJAX.AUTH_BASIC,
    async:true
    noSecurityCookie:false
    user:"username",
    password:"top_secret",
    headers: ToBeDone -- put some headers in! 
    onerror:function(request) { alert(request.getStatus()); }
    onstart:
    onend:
}
var callback = function(data) { alert(data); };
OAT.AJAX.SOAP("/myfile.xml", false, callback, options);
</verbatim>

-- with this --

<verbatim>
var customHeaders = ToBeDone -- put some headers in! ; 
var callback = function(data) { alert(data); };
OAT.Soap.command("/myfile.xml", false, callback, customHeaders);
</verbatim>

<i> ToBeDone - correct the code snippets above to reflect the 
actual effective replacement...</i>

ToBeDone - add Constants, Messages, Properties, <tt>OAT.Soap.abortAll()</tt>, borrowing from <tt>[[OATDOCajax2][OAT.AJAX.*]]</tt> as relevant</i>

CategoryDocumentation CategoryOAT CategoryOpenSource CategoryToBeDone
