%META:TOPICPARENT{name="VirtAdoNet35Provider"}%

= Using Microsoft Entity Frameworks to Access Informix Schema Objects with Virtuoso=

This document details the steps required to provide Microsoft Entity Framework access to Informix Schema Objects using the <nop>OpenLink Virtuoso Universal Server. This is achieved by linking the required Informix Schema objects into Virtuoso using its built-in Virtual Database engine and then using the Virtuoso ADO.NET Entity Framework provider to query the remote Informix Schema objects linked into the Virtuoso Server.

%TOC%

==Prerequisites==

The following prerequisites must be in place for this solution to be possible.

=== Informix DBMS===

An Informix DBMS hosting the required Schema Objects needs to be available. In this document the <b>Informix stores_demo</b> sample database will be used to demonstrate the process.

=== ODBC Driver for Informix===

An Informix ODBC Driver is required for Linking the Informix Schema Objects into the Virtuoso Server. The <b><nop>OpenLink ODBC Driver for Informix</b> will be used in this document, for which a functional ODBC Data source name of **<code>inf10ma</code>** will be assumed to exist on the machine hosting the Virtuoso Server.

=== Virtuoso Universal Server ===

An Virtuoso installation including the Virtuoso Universal Server and ADO.NET Entity Framework Provider is required. The Virtuoso components used must be Release 5.10.x or above, this being the minimum version containing support for Microsoft Entity Frameworks.

=== Microsoft Visual Studio 2008 SP1 (or later)===

At minimum, Microsoft Visual Studio 2008 Service Pack 1 is required.  Later versions of Visual Studio may require some extra steps, e.g., [[http://virtuoso.openlinksw.com/dataspace/doc/dav/wiki/Main/VirtTipsAndTricksEnableAdoNetProviderInVS2010| VS2010]].

== Tasks==

=== Ensure Informix Primary Keys (PKs) are not nullable  ===

The Visual Studio 2008 Entity Data Model (EDM) requires that all primary keys are  **NOT** Nullable, and will fail to generate an EDM if any are. Thus ensure any tables to be used are defined as not nullable in the Informix database schema before attempting to generate an EDM. In the case of the Informix stores_demo database many tables have primary keys that are **are** nullable, so these will need to be redeclared.

This is possible using <b>dbaccess</b>. However, care needs to be taken, particularly with the following -

* Amending a PK field to be not nullable can result in the primary key constraint being removed.

* Amending a PK field to be not nullable--when the primary key is referenced by a foreign key constraint--results in the foreign key constraint being removed.

In both of the cases above, the primary key and foreign key constraints that are removed will have to be manually recreated.

 
=== Install and configure ODBC Driver for Informix===

The Virtuoso Virtual Database engine uses ODBC as the connectivity mechanism for linking remote database objects into its local schema. Thus, an Informix ODBC Driver must be available with a suitably configured DSN for connecting to the target database. The <nop>OpenLink ODBC Drivers for Informix have been used in this document, although in theory any Informix ODBC Driver can be used.

Installation instructions for the <nop>OpenLink ODBC Driver for Informix are available from:

* [[http://wikis.openlinksw.com/dataspace/owiki/wiki/UdaWikiWeb/InstallConfigODBC|Product Installation & Basic Configuration (ODBC)]] 

=== Install and configure Virtuoso Universal Server===

* [[VirtADOClientServInstall|Install and configure OpenLink Virtuoso Universal Server]]

=== Link Informix tables into Virtuoso===

* [[VirtINFLinkingObjects|Linking Informix tables into OpenLink Virtuoso]]

=== Create a Visual Studio hosted Entity Data Model (EDM)===

* [[VirtINFEDM|Creating an EDM in Visual Studio 2008]]

=== Use EDM to create Entity Framework based applications===

Now that a Microsoft Entity Data Model has been created for the Informix stores_demo database, Entity Framework applications can be created to make use of it.

==== Entity Frameworks based ADO.NET Data Service====

* [[VirtEntityFrameworkINFDatService|Entity Framework Data Service]]

==== Visual Studio Windows Form Application====

* [[VirtInformixVisualStudioDataGridFormsApp|Windows DataGrid Form Application]]

