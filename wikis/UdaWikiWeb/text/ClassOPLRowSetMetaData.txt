%META:TOPICPARENT{name="JDBC3DriverClasses"}%

11.11.9. Class OPLRowSetMetaData
OPLRowSetMetaData Classes OPLRowSetMetaData

The RowSetMetaData interface extends ResultSetMetaData with methods that allow a metadata object to be initialized.
11.11.9.1. Synopsis

public class OPLRowSetMetaData implements RowSetMetaData,Serializable {
  // Public Constructors
  public OPLRowSetMetaData(java.sql.ResultSetMetaData rsmd) 
      throws java.sql.SQLException;
  // Public Methods
  public void setAutoIncrement(int column, boolean property) 
      throws java.sql.SQLException;
  public void setCaseSensitive(int column, boolean property) 
      throws java.sql.SQLException;
  public void setCatalogName(int column, java.lang.String catalogName) 
      throws java.sql.SQLException;
  public void setColumnCount(int columnCount) throws java.sql.SQLException;
  public void setColumnDisplaySize(int column, int size) 
      throws java.sql.SQLException;
  public void setColumnLabel(int column, java.lang.String label) 
      throws java.sql.SQLException;
  public void setColumnName(int column, java.lang.String columnName) 
      throws java.sql.SQLException;
  public void setColumnType(int column, int SQLType) 
      throws java.sql.SQLException;
  public void setColumnTypeName(int column, java.lang.String typeName) 
      throws java.sql.SQLException;
  public void setCurrency(int column, boolean property) 
      throws java.sql.SQLException;
  public void setNullable(int column, int property) 
      throws java.sql.SQLException;
  public void setPrecision(int column, int precision) 
      throws java.sql.SQLException;
  public void setScale(int column, int scale) throws java.sql.SQLException;
  public void setSchemaName(int column, java.lang.String schemaName) 
      throws java.sql.SQLException;
  public void setSearchable(int column, boolean property) 
      throws java.sql.SQLException;
  public void setSigned(int column, boolean property) 
      throws java.sql.SQLException;
  public void setTableName(int column, java.lang.String tableName) 
      throws java.sql.SQLException;
  public int getColumnCount() throws java.sql.SQLException;
  public boolean isAutoIncrement(int column) throws java.sql.SQLException;
  public boolean isCaseSensitive(int column) throws java.sql.SQLException;
  public boolean isSearchable(int column) throws java.sql.SQLException;
  public boolean isCurrency(int column) throws java.sql.SQLException;
  public int isNullable(int column) throws java.sql.SQLException;
  public boolean isSigned(int column) throws java.sql.SQLException;
  public int getColumnDisplaySize(int column) throws java.sql.SQLException;
  public String getColumnLabel(int column) throws java.sql.SQLException;
  public String getColumnName(int column) throws java.sql.SQLException;
  public String getSchemaName(int column) throws java.sql.SQLException;
  public int getPrecision(int column) throws java.sql.SQLException;
  public int getScale(int column) throws java.sql.SQLException;
  public String getTableName(int column) throws java.sql.SQLException;
  public String getCatalogName(int column) throws java.sql.SQLException;
  public int getColumnType(int column) throws java.sql.SQLException;
  public String getColumnTypeName(int column) throws java.sql.SQLException;
  public boolean isReadOnly(int column) throws java.sql.SQLException;
  public boolean isWritable(int column) throws java.sql.SQLException;
  public boolean isDefinitelyWritable(int column) throws java.sql.SQLException;
  public String getColumnClassName(int column) throws java.sql.SQLException;
}
      

Inheritance Path
java.lang.Object

|
openlink.javax.OPLRowSetMetaData


11.11.9.2. Members
11.11.9.2.1. Method getCatalogName(int)
getCatalogName Methods getCatalogName

Synopsis: public String getCatalogName(int column) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - column name or "" if not applicable

Exceptions

SQLException

if a database access error occurs

Gets the designated column's table's catalog name.

11.11.9.2.2. Method getColumnClassName(int)
getColumnClassName Methods getColumnClassName

Synopsis: public String getColumnClassName(int column) 
              throws java.sql.SQLException;
          

Exceptions

SQLException

if a database access error occurs

Additional Information

Since

    * 1.2

See Also

    * What Is in the JDBC 2.0 API


Returns the fully-qualified name of the Java class whose instances are manufactured if the method ResultSet.getObject is called to retrieve a value from the column. ResultSet.getObject may return a subclass of the class returned by this method.

11.11.9.2.3. Method getColumnCount()
getColumnCount Methods getColumnCount

Synopsis: public int getColumnCount() throws java.sql.SQLException;
          

Exceptions

SQLException

if a database access error occurs

Returns the number of columns in this RowSet

11.11.9.2.4. Method getColumnDisplaySize(int)
getColumnDisplaySize Methods getColumnDisplaySize

Synopsis: public int getColumnDisplaySize(int column) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - the normal maximum number of characters allowed as the width of the designated column

Exceptions

SQLException

if a database access error occurs

Indicates the designated column's normal maximum width in characters.

11.11.9.2.5. Method getColumnLabel(int)
getColumnLabel Methods getColumnLabel

Synopsis: public String getColumnLabel(int column) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - the suggested column title

Exceptions

SQLException

if a database access error occurs

Gets the designated column's suggested title for use in printouts and displays.

11.11.9.2.6. Method getColumnName(int)
getColumnName Methods getColumnName

Synopsis: public String getColumnName(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - column name

Exceptions

SQLException

if a database access error occurs

Get the designated column's name.

11.11.9.2.7. Method getColumnType(int)
getColumnType Methods getColumnType

Synopsis: public int getColumnType(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - SQL type from java.sql.Types

Exceptions

SQLException

if a database access error occurs

Additional Information

See Also

    * java.sql.Types


Retrieves the designated column's SQL type.

11.11.9.2.8. Method getColumnTypeName(int)
getColumnTypeName Methods getColumnTypeName

Synopsis: public String getColumnTypeName(int column) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - type name used by the database. If the column type is a user-defined type, then a fully-qualified type name is returned.

Exceptions

SQLException

if a database access error occurs

Retrieves the designated column's database-specific type name.

11.11.9.2.9. Method getPrecision(int)
getPrecision Methods getPrecision

Synopsis: public int getPrecision(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - precision

Exceptions

SQLException

if a database access error occurs

Get the designated column's number of decimal digits.

11.11.9.2.10. Method getScale(int)
getScale Methods getScale

Synopsis: public int getScale(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - scale

Exceptions

SQLException

if a database access error occurs

Gets the designated column's number of digits to right of the decimal point.

11.11.9.2.11. Method getSchemaName(int)
getSchemaName Methods getSchemaName

Synopsis: public String getSchemaName(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - schema name or "" if not applicable

Exceptions

SQLException

if a database access error occurs

Get the designated column's table's schema.

11.11.9.2.12. Method getTableName(int)
getTableName Methods getTableName

Synopsis: public String getTableName(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - table name or "" if not applicable

Exceptions

SQLException

if a database access error occurs

Gets the designated column's table name.

11.11.9.2.13. Method isAutoIncrement(int)
isAutoIncrement Methods isAutoIncrement

Synopsis: public boolean isAutoIncrement(int column) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - true if so

Exceptions

SQLException

if a database access error occurs

Indicates whether the column is automatically numbered, thus read-only.

11.11.9.2.14. Method isCaseSensitive(int)
isCaseSensitive Methods isCaseSensitive

Synopsis: public boolean isCaseSensitive(int column) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - true if so; false otherwise

Exceptions

SQLException

if a database access error occurs

Indicates whether a column's case matters.

11.11.9.2.15. Method isCurrency(int)
isCurrency Methods isCurrency

Synopsis: public boolean isCurrency(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - true if so; false otherwise

Exceptions

SQLException

if a database access error occurs

Indicates whether the designated column is a cash value.

11.11.9.2.16. Method isDefinitelyWritable(int)
isDefinitelyWritable Methods isDefinitelyWritable

Synopsis: public boolean isDefinitelyWritable(int column) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - true if so; false otherwise

Exceptions

SQLException

if a database access error occurs

Indicates whether a write on the designated column will definitely succeed.

11.11.9.2.17. Method isNullable(int)
isNullable Methods isNullable

Synopsis: public int isNullable(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - the nullability status of the given column; one of columnNoNulls, columnNullable or columnNullableUnknown

Exceptions

SQLException

if a database access error occurs

Indicates the nullability of values in the designated column.

11.11.9.2.18. Method isReadOnly(int)
isReadOnly Methods isReadOnly

Synopsis: public boolean isReadOnly(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - true if so; false otherwise

Exceptions

SQLException

if a database access error occurs

Indicates whether the designated column is definitely not writable.

11.11.9.2.19. Method isSearchable(int)
isSearchable Methods isSearchable

Synopsis: public boolean isSearchable(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - true if so; false otherwise

Exceptions

SQLException

if a database access error occurs

Indicates whether the designated column can be used in a where clause.

11.11.9.2.20. Method isSigned(int)
isSigned Methods isSigned

Synopsis: public boolean isSigned(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - true if so; false otherwise

Exceptions

SQLException

if a database access error occurs

Indicates whether values in the designated column are signed numbers.

11.11.9.2.21. Method isWritable(int)
isWritable Methods isWritable

Synopsis: public boolean isWritable(int column) throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

return - true if so; false otherwise

Exceptions

SQLException

if a database access error occurs

Indicates whether it is possible for a write on the designated column to succeed.

11.11.9.2.22. Method setAutoIncrement(int, boolean)
setAutoIncrement Methods setAutoIncrement

Synopsis: public void setAutoIncrement(int column, boolean property) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

property - is either true or false (default is false).

Exceptions

SQLException

if a database-access error occurs.

Specify whether the is column automatically numbered, thus read-only.

11.11.9.2.23. Method setCaseSensitive(int, boolean)
setCaseSensitive Methods setCaseSensitive

Synopsis: public void setCaseSensitive(int column, boolean property) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

property - is either true or false (default is false).

Exceptions

SQLException

if a database-access error occurs.

Specify whether the column is case sensitive.

11.11.9.2.24. Method setCatalogName(int, String)
setCatalogName Methods setCatalogName

Synopsis: public void setCatalogName(int column, java.lang.String catalogName) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

catalogName - column's catalog name.

Exceptions

SQLException

if a database-access error occurs.

Specify the column's table's catalog name, if any.

11.11.9.2.25. Method setColumnCount(int)
setColumnCount Methods setColumnCount

Synopsis: public void setColumnCount(int columnCount) 
              throws java.sql.SQLException;
          

Parameters

columnCount - number of columns.

Exceptions

SQLException

if a database-access error occurs.

Set the number of columns in the RowSet.

11.11.9.2.26. Method setColumnDisplaySize(int, int)
setColumnDisplaySize Methods setColumnDisplaySize

Synopsis: public void setColumnDisplaySize(int column, int size) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

size - size of the column

Exceptions

SQLException

if a database-access error occurs.

Specify the column's normal max width in chars.

11.11.9.2.27. Method setColumnLabel(int, String)
setColumnLabel Methods setColumnLabel

Synopsis: public void setColumnLabel(int column, java.lang.String label) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

label - the column title

Exceptions

SQLException

if a database-access error occurs.

Specify the suggested column title for use in printouts and displays, if any.

11.11.9.2.28. Method setColumnName(int, String)
setColumnName Methods setColumnName

Synopsis: public void setColumnName(int column, java.lang.String columnName) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

columnName - the column name

Exceptions

SQLException

if a database-access error occurs.

Specify the column name.

11.11.9.2.29. Method setColumnType(int, int)
setColumnType Methods setColumnType

Synopsis: public void setColumnType(int column, int SQLType) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

SQLType - column's SQL type.

Exceptions

SQLException

if a database-access error occurs.

Additional Information

See Also

    * java.sql.Types


Specify the column's SQL type.

11.11.9.2.30. Method setColumnTypeName(int, String)
setColumnTypeName Methods setColumnTypeName

Synopsis: public void setColumnTypeName(int column, java.lang.String typeName) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

typeName - data source specific type name.

Exceptions

SQLException

if a database-access error occurs.

Specify the column's data source specific type name, if any.

11.11.9.2.31. Method setCurrency(int, boolean)
setCurrency Methods setCurrency

Synopsis: public void setCurrency(int column, boolean property) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

property - is either true or false (default is false).

Exceptions

SQLException

if a database-access error occurs.

Specify whether the column is a cash value.

11.11.9.2.32. Method setNullable(int, int)
setNullable Methods setNullable

Synopsis: public void setNullable(int column, int property) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

property - is either one of columnNoNulls, columnNullable or columnNullableUnknown (default is columnNullableUnknown).

Exceptions

SQLException

if a database-access error occurs.

Specify whether the column's value can be set to NULL.

11.11.9.2.33. Method setPrecision(int, int)
setPrecision Methods setPrecision

Synopsis: public void setPrecision(int column, int precision) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

precision - number of decimal digits.

Exceptions

SQLException

if a database-access error occurs.

Specify the column's number of decimal digits.

11.11.9.2.34. Method setScale(int, int)
setScale Methods setScale

Synopsis: public void setScale(int column, int scale) 
              throws java.sql.SQLException;
          

Parameters

column - the first column is 1, the second is 2, ...

scale - number of digits to right of decimal point.

Exceptions