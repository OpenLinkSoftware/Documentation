%META:TOPICPARENT{name="ErrorMessagesM"}%

==Error Messages (M)==

[[UDAErrorMessages|A]] [[ErrorMessagesB|B]] [[ErrorMessagesC|C]] [[ErrorMessagesD|D]] [[ErrorMessagesE|E]] [[ErrorMessagesF|F]] [[ErrorMessagesG|G]] [[ErrorMessagesH|H]] [[ErrorMessagesI|I]] [[ErrorMessagesJ|J]] [[ErrorMessagesK|K]] [[ErrorMessagesL|L]] [[ErrorMessagesM|M]] [[ErrorMessagesN|N]] [[ErrorMessagesO|O]] [[ErrorMessagesP|P]] [[ErrorMessagesQ|Q]] [[ErrorMessagesR|R]] [[ErrorMessagesS|S]] [[ErrorMessagesT|T]] [[ErrorMessagesU|U]] [[ErrorMessagesV|V]] [[ErrorMessagesW|W]] [[ErrorMessagesX|X]] [[ErrorMessagesY|Y]] [[ErrorMessagesZ|Z]] [[ErrorMessagesSymbols|#]]
   
===Maximum number of dbprocesses already allocated===

The outdated Microsoft SQL Server DB-lib communications layer only supports up to 20 database processes by default. If you are using the default <nop>OpenLink setting of "Reuse=Always" within the [generic_sql6] Datatbase Agent section, then each Agent instance is masquerading as an additional database "process". You have a few options here:

1. Upgrade to use of <nop>OpenLink's TDS-based SQL Server database agents. This is the best course of action and should be pursued in virtually all cases. The remaining two fixes are documented for legacy purposes, and should only be pursued in highly unusual cases where an upgrade is impossible.

2. Change your application to use the "sql2k_mv.exe" Agent (via "<nop>SQLServer 2000" Domain alias / ODBC DSN's "<nop>Servertype"). This Agent was available from Release 4.1 on, and is built against the Microsoft SQL Server ODBC Driver layer, as opposed to the more dated DB-lib layer which is subject to the above restriction.

3. Change the "Reuse" rule in the oplrqb.ini for [generic_sql6] to the following:

{{{
Reuse= ifsame application, upto 20
}}}

What this will do is multi-thread multiple connections as separate "dbprocesses" only up to 20 connections, at which point it will spawn a brand new Database
Agent instance, thus coming into SQL Server as a new entity and thus separate database instance. This will avoid the "dbprocesses" error you are seeing.






    