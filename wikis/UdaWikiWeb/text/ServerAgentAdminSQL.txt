%META:TOPICPARENT{name="ServerAgentAdministration"}%

=TDS-Based Sybase and Microsoft SQL Server Database Agent Administration=

You can specify the following environment variables for this agent:

* **FREETDSCONF**: a path to the freetds.conf file to use.
* **DSQUERY**: the section to use within freetds.conf
* **TDSSERVER**: the IP address or alias name for the server running Microsoft SQL Server.
* **TDSPORT**: the TCP port number the Microsoft SQL Server instance is running on
* **TDSVER**: the TDS Protocol version for the type of Microsoft SQL Server instance being used.
* **TDSDBASE**: the name of the Microsoft SQL Server Database

The following Connection Options can be passed to the driver:

* **-H** - Hostname of the machine Microsoft SQL Server is running
* **-P** - Microsoft SQL Server TCP Port
* **-V** - Protocol version.  See [[ServerAgentAdminTDS|Table #2]]  for acceptable values.
* **-S** - Microsoft SQL Server name on the specified host. A Microsoft SQL Server instance can also be specified by appending "\<nop>InstanceName" to the <nop>HostName, i.e., "<nop>HostName\<nop>InstanceName"
* **-F** - Specify Fail over server name for Database Mirroring
* **-N** - Network Packet size, which is a value that determines the number of bytes per network packet transferred from the database server to the client. The correct setting of this attribute can improve performance. When set to 0, the initial default, the driver uses the default packet size as specified in the Sybase server configuration. When set to -1, the driver computes the maximum allowable packet size on the first connect to the data source and saves the value in the system information.
* **-O** Prepared Method, which is a value that determines whether stored procedures are created on the server for every call to <nop>SQLPrepare. When set to Full (2), stored procedures are created for every call to <nop>SQLPrepare, which can decrease performance when processing static statements. When set to Partial(1), the initial default, the driver creates stored procedures only if the statement contains parameters. Otherwise, the statement is cached and executed directly at <nop>SQLExecute time. When set to None (0), the driver never creates stored procedures.
* **-L** - The name of a Microsoft SQL Server supported national language. The default language is English.
* **-C** - The name of an installed character set on the server. By default it is the setting on the Microsoft SQL Server.
* **-A** - Turn Off ANSI NULL handling
* **-E** - Turn On SSL Strong Data Encryption
* **-R** - Turn On SSL Server Certificate Verification
* **-D** - Specify Name of Certificate Authority file to be used for SSL Certificate Verification
* **-Z** - Turn On Snapshot Serializable Isolation
* **-M** - Turn On Multiple Active Result Sets (MARS)

==Application Server & 3-Tier Architecture Configuration==

There may be situations in which you are unable to install your <nop>OpenLink Request Broker and Database Agents on the same machine as the one hosting your Microsoft SQL Server database server. Irrespective of the reasons that lead you to this scenario, it is possible to configure your <nop>OpenLink database agents hosted on your Application Server machine such that they connect to a remote Microsoft SQL Server database on your Database Server machine using Microsoft SQL Server database specific networking (NETLIB) as opposed to <nop>OpenLink's Database Independent Networking. The end result being a 3-tier distributed <nop>OpenLink architecture in which the communication between <nop>OpenLink clients and database agents use <nop>OpenLink Database independent Networking, while the communication between the Microsoft SQL Server database agent and the Microsoft SQL Server database server uses Microsoft SQL Server's NETLIB.

==Configuration Steps==

Assuming you have an Microsoft SQL Server Database Server machine called "oplwinnt" that has a Microsoft SQL Server Server named "oplwinntsql" up and running:
#  On your Application Server (the machine hosting your database agents) create a NETLIB Database Connection Alias named "oplwinntsql" (for purposes of this example only).
#  Ensure that you have a usable connection to the remote Microsoft SQL Server database server using the Open Client Database alias "oplwinntsql" (this the value you provide whenever you are prompted for a Server Name by native SQL Server utilities)
#  Add the following values to the "Server Options"field within the Admin Assistant Forms or Wizards used to configure your database agent. If you choose to set this value on the client simply enter the same value into to the "Database Name" Attribute associated with the configuration of your <nop>OpenLink client ODBC or JDBC or UDBC client configuration for more details):
{{{
      oplwinntsql
}}}
# You may also enter the following values into the "Database Server Options" field: -S oplwinntsql

==Unicode Configuration==

See the [[SQLServerUnicodeConfig|Unicode section]] for configuration details.