%META:TOPICPARENT{name="ProductPortfolioOverview"}%

==<nop>OpenLink Product Overview==

===Multi-Tier Drivers===

<nop>OpenLink's Multi-Tier drivers are client/server ODBC and JDBC drivers. They require both a client and server installation. They provide their own, independent communications layer. Consequently, Multi-Tier drivers do not need the database native client to connect. Moreover, Multi-Tier drivers are not database-specific. Instead, they provide a generic server component that can route requests to different databases.

Multi-Tier drivers are ideal for technical users who favor the advanced configuration and security features that this product provides. The Multi-Tier value proposition lies within the Session Rulebook. The Rulebook is a unique configuration file, which allows users to: 1) configure every aspect of ODBC data access, and 2) develop complex, rules-based security.

<nop>OpenLink Universal Data Access (UDA) Multi Tier consists of three main components of varying types:

**Generic Client** - One client driver connecting to a variety of data sources.
* ODBC
* UDBC
* JDBC
* OLE-DB
    
**Request Broker** - The Request Broker is responsible for brokering the services of <nop>OpenLink Data Access and Service Providing Agents. It is also the component responsible for coordinating and controlling your entire <nop>OpenLink Data Access session irrespective of Data Access mechanism being used. This is the heart and soul of the <nop>OpenLink Database Independent Communications Layer. It is the technology that enables the <nop>OpenLink Data Access drivers to communicate with your backend database engines alleviating the need to acquire additional database specific networking software from your backend database vendor(s). More than one Broker may exist on a system if each instance is defined separately.The Request Broker is completely configurable, and its responses to incoming requests from Clients  are controlled by the Sessions Rules Book (oplrqb.ini).

**Server Agents** - Task specific agents (i.e., applications) exclusively launched by the Request Broker for Generic Clients to communicate with applications.
          
* **Database Agents** - A database Agent is the only database-specific component in <nop>OpenLink's Multi-Tier architecture. In fact, these agents are built against a database's CLI. When the <nop>OpenLink Request Broker receives a connection request, it spawns the appropriate agent. Then, the agent retrieves data from the database and returns it to the calling client. 

* **JDBC Agent** - enabling <nop>OpenLink JDBC Drivers to connect local or remote <nop>OpenLink or non <nop>OpenLink ODBC or UDBC Drivers

* **ODBC Agent** - The Generic ODBC Agent enables users to connect to databases for which <nop>OpenLink does not provide an agent match. 

* **Proxy Agent** - The proxy agent assists users when firewalls prohibit external network access to the machine that contains the database.

The Request Broker and Server Agents are typical addressed as the server components. This is a logical distinction,because the client and server can be the same machine. In testing environments this is often the case.

An architectural overview of the <nop>OpenLink Multi-tier Data Access infrastructure is available [[http://support.openlinksw.com/supportweb/UDADeploymentDiagrams|here]]. Note that the <nop>OpenLink Request Broker is the core component that makes up the <nop>OpenLink Database Independent Communications Layer in this illustration.

The components listed above are presented to you for download at the end of your interaction with the <nop>OpenLink Software [[http://download.openlinksw.com|Download Wizard]]. 