%META:TOPICPARENT{name="ConfigureUDAFeatures"}%

= Force SSL Data Encryption on Database Connections to Microsoft SQL Server =

This setup is not necessary for connections to Microsoft SQL Server instances which are configured to demand SSL connections from clients; such demands are handled automatically by the drivers.

<i>Note that SSL connections are never supported by Microsoft SQL Server 7 or earlier, nor when using TDS Version 7.0 or 4.2.</i>

%TOC%

== Single-Tier (Express Edition) ODBC Drivers (Mac & Windows) ==

# Log in to the machine that hosts <nop>OpenLink's Single-Tier (Express) Drivers.
# Launch your ODBC or iODBC Data Sources Administrator.
# Locate your <nop>OpenLink DSN.
# Click the Configure button.
# Scroll through the configuration screens until you find the Advanced button.
# Click the Advanced button.
# Locate the SSL parameter.
# Set the SSL parameter to one of the following options:
#* <b><code>off</code></b> 足 - SSL is not request or used. This is the default. 
#* <b><code>request</code></b> 足-  SSL is requested; if the server does not support it then a plain connection is used. 
#* <b><code>require</code></b> 足 - SSL is requested; if the server does not support it then an  exception is thrown. 
#* <b><code>authenticate</code></b>  - 足 Same as require except the server's certificate must be signed by a trusted CA.

== Single-Tier (Lite Edition) ODBC Drivers ==

=== Single-Tier (Lite Edition) ODBC Drivers - Mac & Windows  ===

# Log in to the machine that hosts <nop>OpenLink's Single-Tier (Lite Drivers).
# Launch your ODBC or iODBC Data Sources Administrator.
# Locate your <nop>OpenLink DSN.
# Click the Configure button.
# Scroll through the configuration screens until you find the "Use strong encryption of data" checkbox.
# Tick the Encryption checkbox to make the driver demand an SSL encrypted connection to the Microsoft SQL Server instance. If the target instance is not configured for or capable of SSL connections, the connection will fail.
# Tick the "Verify Server Certificate" to verify the SSL Certificate presented by the database server against a local certificate. You must also specify the location of a Valid SSL Certificate for this verification.


=== Single-Tier (Lite Edition) ODBC Drivers - Unix ===

# Login to the machine that hosts <nop>OpenLink's Single-Tier client drivers.
# Use the Web-based iODBC Data Sources Administrator to access your DSN.
# Locate the Connection Options field of your DSN.
# Pass the following flags and applicable attributes in the Connection Options field:
#* <b><code>-E</code></b> - The driver will demand an SSL encrypted connection to the Microsoft SQL Server instance. If the target instance is not configured for or capable of SSL connections, the connection will fail.
#* <b><code>-R</code></b> - Verify the SSL Certificate presented by the database server against the one specified with the <code>-D</code> flag.
#* <b><code>-D &lt;/path/to/file&gt;</code></b> - Specify the location of a Valid SSL Certificate to be used for the verification triggered by the <code>-R</code> flag 


== Multi-Tier Drivers (all data access mechanisms) ==

# Login to the machine that hosts <nop>OpenLink's Multi-Tier Generic Client ODBC Driver, JDBC Driver, or ADO.NET Provider.
# Use the relevant Data Sources Administrator or Web-Based Admin Assistant to access your ODBC DSN, JDBC URL, or connect string.
# Locate the Connection Options field of your connect string.
# Pass the following flags and applicable attributes in the Connection Options field:
#* <b><code>-E</code></b> - The driver will demand an SSL encrypted connection to the Microsoft SQL Server instance. If the target instance is not configured for or capable of SSL connections, the connection will fail.
#* <b><code>-R</code></b> - Verify the SSL Certificate presented by the database server against the one specified with the <code>-D</code> flag.
#* <b><code>-D &lt;/path/to/file&gt;</code></b> - Specify the location of a Valid SSL Certificate to be used for the verification triggered by the <code>-R</code> flag 