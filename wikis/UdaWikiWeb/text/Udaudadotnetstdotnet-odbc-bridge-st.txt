
= uda.dotnet.st.dotnet-odbc-bridge-st

%TOC%

  
=  .NET Data Providers for ODBC

%TOC%

  .NET Data Providers for ODBC 

 |  Platform Support |  Support for client, server, and application server operating systems  |
  

|  32- and 64-bit components |  Enables the development and utilization of 32- or 64-Bit DBMS independent applications.   

 |  Database Engine Support |  Backend database engine support  |
  

|  Broad backend Database Support |  Enables DBMS independent application utilization and deployment across a vast array of industry leading DBMS engines that includes; Oracle (7.x - 10.x), SQL Server (6.x - 2005), DB2 (6.x - 8.x), Sybase (10.x - 12.x), Progress (7.x - 10.x), Ingres (6.4 - II family), Informix (5.x - 9.x & IDS 2000), [[MySQL]]  , and [[PostgreSQL]]  .   
 

 |  Performance  |
  

|  Blistering Performance |  Delivery of data access performance levels across ODBC, JDBC, ADO.NET and OLE DB that don't compromise viability of DBMS independent application development and deployment.  |  Network Aware Record Retrieval |  Enabling the retrieval and insertion of multiple DBMS records in batches over the network with a minimal number of network hops.  |
  
 

 |  Administration |  Configuration and Management  |
  

|  Single Component Installation Process |  In situations where DBMS vendor networking is already in place, Single-Tier Drivers provide ease of installation and configuration since you are only required to install a single client component that inherently depends on existing DBMS specific networking for remote data access.   
 

 |  Standards Compliance  |
  

|  International character support |  Enables the development and deployment of international applications that are independent of underlying database engine.   
 

 |  Performance  |
  

|  Multithreaded |  Enables exploitation of scalability benefits arising from the use of multiple CPUs or Clusters while developing or using DBMS independent applications.   

 |  Standards Compliance  |
  

|  Supports Advanced Data Access API functionality |  Enables the development and utilization of DBMS application with DBMS independent granularity that extends to challenging areas such as scalar function calls, dates and timestamps manipulation, outer join handling, and SQL stored procedure invocation etc.   
 

----
  