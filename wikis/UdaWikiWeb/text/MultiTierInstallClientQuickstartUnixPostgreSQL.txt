%META:TOPICPARENT{name="MultiTierInstallClientQuickstartUnix"}%

== <nop>OpenLink Multi-tier Client Side Components (*nix) (connecting to PostgreSQL)==

=== Aims and Intentions=== 

This guide is intended to enable competent system administrators to install and configure <nop>OpenLink Multi-tier client side components on *nix style operating systems in a few steps as possible.

This guide does not explain any of the non-pertinent features encountered along the way. Such explanations may be found in the full documentation.

===Prerequisites===

* You **MUST** be proficient in using a Unix shell.
* You **MUST** be proficient in using a Unix editor such as vi
* You **MUST** be in possession of relevant database connectivity details such as Database name, Username, password, etc.

===Installation===

# Log onto the machine and create a suitable <nop>OpenLink installation directory (<nop>OPENLINK_INSTALL)%BR%
# Copy all relevant components to <nop>OPENLINK_INSTALL%BR%%BR% At bare minimum, these will be the <nop>OpenLink Generic ODBC Driver and <nop>OpenLink Http Administration Assistant%BR%
# Install using the "install.sh" shell script --
{{{
#sh install.sh

}}}
# The installation should finish without error.

===Configuration===

# Open the file <nop>$OPENLINK_INSTALL/bin/odbc.ini with a suitable text editor such as vi%BR%
# Locate and edit the [<nop>OpenLink] section, which is a sample <nop>OpenLink Generic ODBC data source (DSN) created during the installation process--

====Sample DSN as created by installer====
{{{
[OpenLink]
Driver          = /OPENLINK_INSTALL/lib/oplodbc.so
Host            = localhost:5000
ServerType      = Oracle 8.1.x
Database        = 
Options         = 
Username        = 
Password        = 
FetchBufferSize = 99
ReadOnly        = no
DeferLongFetch  = no
JetFix          = no
Description     = Sample DSN
}}}

====Example PostgreSQL Data Source-====
{{{
[postgres]
Driver          = /OPENLINK_INSTALL/lib/oplodbc.so
Host            = requestbroker_hostname:5000
ServerType      = Postgres
Database        = test
Options         = -H postgres_hostname -P 5432
Username        = postgres
Password        = **********
FetchBufferSize = 99
ReadOnly        = no
DeferLongFetch  = no
JetFix          = no
Description     = Sample PostgreSQL Connection
}}}

===Testing===

Presuming the <nop>OpenLink Request Broker is already running on the target machine, you are now ready to test the connection.

Use the {{{iodbctest}}} tool which is packaged with the HTTP-based <nop>OpenLink ODBC Administrator as follows -- 
{{{
#cd OPENLINK_INSTALL
#. ./openlink.sh
# iodbctest postgres
iODBC Demonstration program
This program shows an interactive SQL processor
Driver Manager: 03.52.0507.0105
Driver: 06.02.1217 OpenLink Generic ODBC Driver (oplodbc.so)

SQL>
}}}

You should now be able to issue SQL statements directly against the target database.

====Additional Information====

* The bitness of the Generic ODBC Driver is determined by the bitness of your ODBC client application.%BR%%BR%That is, if your ODBC client application is 32-bit then the Generic ODBC Driver component **MUST** also be 32-bit.