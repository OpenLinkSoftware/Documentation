%META:TOPICPARENT{name="SingleTierInstallQuickstartUnix"}%

== <nop>OpenLink Single-tier Components (*nix) for <nop>Ingres==

=== Aims and Intentions=== 

This guide is intended to enable competent system administrators to install and configure <nop>OpenLink Multi-tier client side components on *nix style operating systems in a few steps as possible.

This guide does not explain any of the non-pertinent features encountered along the way. Such explanations may be found in the full documentation.

===Prerequisites===

* You **MUST** be proficient in using a Unix shell.
* You **MUST** be proficient in using a Unix editor such as vi
* You **MUST** be in possession of relevant database connectivity details such as Database name, Username, password, etc.
* You **MUST** have installed, and available; a full installation of <nop>Ingres Net and the <nop>Ingres Name Server Started.
* You **MUST** have configured an Ingres Net vNode (using netutil) if connectivity is to a remote database.

===Installation===

# Log onto the machine and create a suitable <nop>OpenLink installation directory &lt;<nop>OPENLINK_INSTALL&gt;%BR%
# Copy all relevant components to &lt;<nop>OPENLINK_INSTALL&gt;%BR%%BR% At bare minimum, these will be the <nop>OpenLink ODBC Driver for <nop>Ingres, <nop>OpenLink Http Administration Assistant%BR% and <nop>OpenLink license file.%BR%
# Install using the "install.sh" shell script --
{{{
 #sh install.sh

}}}
# You should take care to enter correct information when prompted pertaining to ports, passwords, etc and ensure that you note these down for future use.%BR%
# The installation should finish without error.

===Configuration===
====Environment====
Open the file &lt;<nop>OPENLINK_INSTALL&gt;/openlink.sh with a suitable text editor such as vi.%BR%
Locate the section that deals with the location of shared libraries pertaining to your system (LD_LIBRARY_PATH, LIBPATH or SHLIB_PATH) and add to it the location of your <nop>Ingres lib directory --
{{{
 
 LD_LIBRARY_PATH="&lt;OPENLINK_INSTALL&gt;/lib:/ingres/ingres/lib:$LD_LIBRARY_PATH"
  
}}}
====Driver Specific====
Open the file &lt;<nop>OPENLINK_INSTALL&gt;/openlink.ini with a suitable text editor such as vi.%BR%
Locate the [Environment <nop>Ingres II] section that deals with the driver specific <nop>Ingres configuration and edit to reflect your <nop>Ingres installation --
{{{
 
 [Environment Ingres II]
 II_SYSTEM          = /ingres/
 II_DATE_FORMAT     = US
 ING_SET            = set lockmode session where readlock=nolock
 CURSOR_SENSITIVITY = LOW        ; Set to HIGH after loading oplrvc.sql

}}}
====Data Souce====
Open the file &lt;<nop>OPENLINK_INSTALL&gt;/bin/odbc.ini with a suitable text editor such as vi.%BR%
Locate and edit the sample <nop>OpenLink ODBC data source (DSN) created during the installation process and edit as follows--

====Sample Ingres Data Source (database on same machine)====
{{{
 
 [ingres]
 Driver            = &lt;OPENLINK_INSTALL&gt;/lib/ingii_mt_lt.so
 ServerType        = Ingres II
 Username          = ingres
 Password          = **********
 Database          = database
 FetchBufferSize   = 99
 ReadOnly          = No
 JetFix            = No
 NoRowSetSizeLimit = No
 NoAutoCommit      = No
 NoLoginBox        = No
 Description       = Sample Ingres II Lite Connection

}}}
====Sample Ingres Data Source (remote database using vNode)====
{{{
 
 [ingres]
 Driver            = &lt;OPENLINK_INSTALL&gt;/lib/ingii_mt_lt.so
 ServerType        = Ingres II
 Username          = ingres
 Password          = **********
 Database          = vnode::database
 FetchBufferSize   = 99
 ReadOnly          = No
 JetFix            = No
 NoRowSetSizeLimit = No
 NoAutoCommit      = No
 NoLoginBox        = No
 Description       = Sample Ingres II Lite Connection

}}}

===Testing===
Use the {{{iodbctest}}} tool which is packaged with the HTTP-based <nop>OpenLink ODBC Administrator as follows -- 
{{{
 
 #cd &lt;OPENLINK_INSTALL&gt;
 #. ./openLink.sh
 # iodbctest ingres
 iODBC Demonstration program
 This program shows an interactive SQL processor
 Driver Manager: 03.52.0507.0105
 Driver: 06.02.1217 OpenLink Generic ODBC Driver (oplodbc.so) 

 SQL>

}}}

You should now be able to issue <nop>SQL statements directly against the target database.

====Additional Information====

* The bitness of the ODBC Driver for <nop>DB2 is determined by the bitness of your ODBC client application.%BR%%BR%That is, if your ODBC client application is 32-bit then the Generic ODBC Driver component **MUST** also be 32-bit.