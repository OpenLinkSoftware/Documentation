%META:TOPICPARENT{name="ServerAgentAdministration"}%

==Server Agent Administration==

=== Common Agent Configuration Options ===

The following parameters exist in all Agent Environment sections of the oplrqb.ini.

Table: 8.2.1.1. Default Rule Book settings

|**Rule Book Section & parameters**|**Default Rule Book Settings**|**Notes**|
|[Environment xyz]||Any agent section|
|CURSOR_SENSITIVITY=|LOW|Set to HIGH after loading oplrvc.sql|

 **High Cursor Sensitivity**

Enables or disables the row version cache used with dynamic cursors.

When dynamic cursor sensitivity is set high, the Cursor Library calculates checksums for each row in the current rowset and compares these with the checksums (if any) already stored in the row version cache for the same rows when fetched previously. If the checksums differ for a row, the row has been updated since it was last fetched and the row status flag is set to SQL_ROW_UPDATED. The row version cache is then updated with the latest checksums for the rowset.

From the user's point of view, the only visible difference between the two sensitivity settings is that a row status flag can never be set to SQL_ROW_UPDATED when the cursor sensitivity is low. (The row status is instead displayed as SQL_ROW_SUCCESS.) In all other respects, performance aside, the two settings are the same - deleted rows don't appear in the rowset, updates to the row since the row was last fetched are reflected in the row data, and inserted rows appear in the rowset if their keys fall within the span of the rowset.

If your application does not need to detect the row status SQL_ROW_UPDATED, you should leave the 'High Cursor Sensitivity' checkbox unchecked, as performance is improved. The calculation and comparison of checksums for each row fetched carries an overhead.

If this option is enabled, the table oplrvc must have been created beforehand using the appropriate oplrvc.sql script for the target database.