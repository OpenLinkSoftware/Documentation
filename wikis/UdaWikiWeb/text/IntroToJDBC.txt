%META:TOPICPARENT{name="DataAccessIntro"}%
==Introduction to Data Access==

===JDBC===

====About JDBC====

In 1996, Sun's Javasoft division introduced JDBC. JDBC stands for “Java Database Connectivity.” It is based on the X/Open SQL CLI, and it enables users to query relational and non-relation data stores with platform-independent Java applications, applets, and servlets.  JDBC was widely adopted by vendors such as IBM, Oracle, and Sybase. <nop>OpenLink noted this popularity and produced drivers, which conformed to the JDBC standard.

====How JDBC Works====

<nop>OpenLink Drivers for JDBC are available in three different driver formats that function in different ways.

* JDBC Type 1

      This driver is implemented as a bridge to ODBC Drivers, thereby implementing the JDBC Driver classes through native methods. This is due to the fact that ODBC is a 'C' language based data access application programming interface. Thus, this driver format is inherently part Java and part Native, implying that it is inherently platform specific rather than independent.
    
* JDBC Type 2

      This driver is implemented as a bridge to Native Database Call Level Interfaces, thereby implementing the JDBC Driver classes through native methods. This is due to the fact that Native Database Call Interfaces are either C/C++ language based data access application programming interfaces. Thus, this driver format is inherently part Java and part Native, implying that it is inherently platform specific rather than independent.

{{{
Note:

JDBC Lite can be JDBC Types 1 or 2 only because you have to address platform specific database vender software beneath.
}}}

JDBC Applets, Applications, Bean Components, and Servlets communicate with JDBC drivers through JDBC Uniform Resource Locators (URLs). Theses URLs are service request and binding formats implemented slightly differently for each <nop>OpenLink Driver for JDBC format. The general JDBC URL format is:

{{{
jdbc:<jdbc-subprotocol>:[jdbc implementation specific URL attributes]
}}}

The "sub-protocol" component of the URL above identifies each JDBC implementation and typically identifies the JDBC driver vendor, the actual URL attributes are vendor specific. Each <nop>OpenLink Driver for JDBC type has a different JDBC URL format, the sections that follow depict and provides examples of these formats.


====What You Can Do With JDBC====

The <nop>OpenLink Drivers for JDBC enable the development, deployment, and utilization of database independent Java Applications, Applets, Servlets, and Bean Components (collectively called JDBC Clients) that conform to the JDBC 1.0.2, JDBC 1.1.x, or JDBC 2.0.x specifications from <nop>JavaSoft.

====Finding Further Information About JDBC & Utilities====

Detailed information regarding JDBC is available from:

http://java.sun.com/products/jdbc/index.html