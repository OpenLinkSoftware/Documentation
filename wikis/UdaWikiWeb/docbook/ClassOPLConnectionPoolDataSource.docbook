<docbook><section><title>ClassOPLConnectionPoolDataSource</title><para>11.11.3.
 Class <ulink url="OPLConnectionPoolDataSource">OPLConnectionPoolDataSource</ulink> <ulink url="OPLConnectionPoolDataSource">OPLConnectionPoolDataSource</ulink> Classes <ulink url="OPLConnectionPoolDataSource">OPLConnectionPoolDataSource</ulink></para><para>A <ulink url="ConnectionPoolDataSource">ConnectionPoolDataSource</ulink> object is a factory for <ulink url="PooledConnection">PooledConnection</ulink> objects.
 An object that implements this interface will typically be registered with a JNDI service.
11.11.3.1.
 Synopsis</para><para>public class <ulink url="OPLConnectionPoolDataSource">OPLConnectionPoolDataSource</ulink> extends <ulink url="OPLDataSource">OPLDataSource</ulink> implements <ulink url="ConnectionPoolDataSource">ConnectionPoolDataSource</ulink>,Serializable,Referenceable,<ulink url="ConnectionEventListener">ConnectionEventListener</ulink> {   <emphasis> Public Constructors   public <ulink url="OPLConnectionPoolDataSource">OPLConnectionPoolDataSource</ulink>();   </emphasis> Public Methods   public void finalize() throws java.lang.Throwable;   public <ulink url="OPLPoolStatistic">OPLPoolStatistic</ulink> get_statistics();   public <ulink url="OPLPoolStatistic">OPLPoolStatistic</ulink>[] getAll_statistics();   public void close() throws java.sql.SQLException;   public void connectionClosed(javax.sql.ConnectionEvent event);   public void connectionErrorOccurred(javax.sql.ConnectionEvent event);   public Reference getReference() throws javax.naming.NamingException;   public void fill() throws java.sql.SQLException;   public <ulink url="PooledConnection">PooledConnection</ulink> getPooledConnection() throws java.sql.SQLException;   public <ulink url="PooledConnection">PooledConnection</ulink> getPooledConnection(java.lang.String _user,                                               java.lang.String _password)       throws java.sql.SQLException;   public int getMinPoolSize();   public void setMinPoolSize(int parm) throws java.sql.SQLException;   public int getMaxPoolSize();   public void setMaxPoolSize(int parm) throws java.sql.SQLException;   public int getInitialPoolSize();   public void setInitialPoolSize(int parm) throws java.sql.SQLException;   public int getMaxIdleTime();   public void setMaxIdleTime(int parm) throws java.sql.SQLException;   public int getPropertyCycle();   public void setPropertyCycle(int parm);   public int getMaxStatements();   public void setMaxStatements(int parm) throws java.sql.SQLException; }</para><para> Inheritance Path java.lang.Object
</para><table><title /><tgroup><thead /><tbody>
</tbody></tgroup></table>
<para> openlink.javax.OPLDataSource
</para><table><title /><tgroup><thead /><tbody>
</tbody></tgroup></table>
<para> openlink.javax.OPLConnectionPoolDataSource</para><para> 11.11.3.2.
 Members 11.11.3.2.1.
 Method close() close Methods close</para><para>Synopsis: public void close() throws java.sql.SQLException;</para><para> Exceptions</para><para>java.sql.SQLException</para><para>if a database-access error occurs</para><para>Physically close all the pooled connections in the cache and free all the resources</para><para>11.11.3.2.2.
 Method connectionClosed(<ulink url="ConnectionEvent">ConnectionEvent</ulink>) connectionClosed Methods connectionClosed</para><para>Synopsis: public void connectionClosed(javax.sql.ConnectionEvent event);</para><para> Parameters</para><para>event - an event object describing the source of the event</para><para>Invoked when the application calls close() on its representation of the connection.</para><para>11.11.3.2.3.
 Method connectionErrorOccurred(<ulink url="ConnectionEvent">ConnectionEvent</ulink>) connectionErrorOccurred Methods connectionErrorOccurred</para><para>Synopsis: public void connectionErrorOccurred(javax.sql.ConnectionEvent event);</para><para> Parameters</para><para>event - an event object describing the source of the event</para><para>Invoked when a fatal connection error occurs, just before an SQLException is thrown to the application.</para><para>11.11.3.2.4.
 Method fill() fill Methods fill</para><para>Synopsis: public void fill() throws java.sql.SQLException;</para><para> Exceptions</para><para>java.sql.SQLException</para><para>if a error occurs</para><para>Fills the cache with <ulink url="PooledConnections">PooledConnections</ulink> for later use.
 Ignored if the <ulink url="MinPoolSize">MinPoolSize</ulink> is 0.
 It is usually called when the <ulink url="OPLConnectionPoolDataSource">OPLConnectionPoolDataSource</ulink> is created via JNDI calls.</para><para>11.11.3.2.5.
 Method get_statistics() get_statistics Methods get_statistics</para><para>Synopsis: public <ulink url="OPLPoolStatistic">OPLPoolStatistic</ulink> get_statistics();</para><para> Return the cache statistics for the <ulink url="OPLConnectionPoolDataSource">OPLConnectionPoolDataSource</ulink></para><para>11.11.3.2.6.
 Method getAll_statistics() getAll_statistics Methods getAll_statistics</para><para>Synopsis: public <ulink url="OPLPoolStatistic">OPLPoolStatistic</ulink>[] getAll_statistics();</para><para> Return an array of the cache statistics for the all created <ulink url="OPLConnectionPoolDataSources">OPLConnectionPoolDataSources</ulink></para><para>11.11.3.2.7.
 Method getInitialPoolSize() getInitialPoolSize Methods getInitialPoolSize</para><para>Synopsis: public int getInitialPoolSize();</para><para> Get the number of physical connections the pool will contain when it is created</para><para>11.11.3.2.8.
 Method getMaxIdleTime() getMaxIdleTime Methods getMaxIdleTime</para><para>Synopsis: public int getMaxIdleTime();</para><para> Get the number of seconds that a physical connection will remain unused in the pool before the connection is closed.
 Zero ( 0 ) indicates no limit.</para><para>11.11.3.2.9.
 Method getMaxPoolSize() getMaxPoolSize Methods getMaxPoolSize</para><para>Synopsis: public int getMaxPoolSize();</para><para> Get the maximum number of physical connections the pool will be able contain.
 Zero ( 0 ) indicates no maximum size.</para><para>11.11.3.2.10.
 Method getMaxStatements() getMaxStatements Methods getMaxStatements</para><para>Synopsis: public int getMaxStatements();</para><para> Get the total number of statements that the pool will keep open.
 Zero ( 0 ) indicates that caching of statements is disabled.</para><para>11.11.3.2.11.
 Method getMinPoolSize() getMinPoolSize Methods getMinPoolSize</para><para>Synopsis: public int getMinPoolSize();</para><para> Get the minimum number of physical connections the pool will keep available at all times.
 Zero ( 0 ) indicates that connections will be created as needed.</para><para>11.11.3.2.12.
 Method getPooledConnection() getPooledConnection Methods getPooledConnection</para><para>Synopsis: public <ulink url="PooledConnection">PooledConnection</ulink> getPooledConnection() throws             java.sql.SQLException;</para><para> Exceptions</para><para>java.sql.SQLException</para><para>if a database-access error occurs</para><para>Attempt to establish a database connection.</para><para>11.11.3.2.13.
 Method getPooledConnection(String, String) getPooledConnection Methods getPooledConnection</para><para>Synopsis: public <ulink url="PooledConnection">PooledConnection</ulink> getPooledConnection(java.lang.String _user,                                                       java.lang.String _password)               throws java.sql.SQLException;</para><para> Parameters</para><para>user - the database user on whose behalf the Connection is being made</para><para>password - the user&#39;s password</para><para>return - a <ulink url="PooledConnection">PooledConnection</ulink> to the database</para><para>Exceptions</para><para>java.sql.SQLException</para><para>if a database-access error occurs</para><para>Attempt to establish a database connection.</para><para>11.11.3.2.14.
 Method getPropertyCycle() getPropertyCycle Methods getPropertyCycle</para><para>Synopsis: public int getPropertyCycle();</para><para> Get the interval, in seconds, that the pool will wait before enforcing the current policy defined by the values of the above connection pool properties</para><para>11.11.3.2.15.
 Method setInitialPoolSize(int) setInitialPoolSize Methods setInitialPoolSize</para><para>Synopsis: public void setInitialPoolSize(int parm)               throws java.sql.SQLException;</para><para> Parameters</para><para>parm - a number of physical connections</para><para>Exceptions</para><para>java.sql.SQLException</para><para>if an error occurs</para><para>Set the number of physical connections the pool should contain when it is created</para><para>11.11.3.2.16.
 Method setMaxIdleTime(int) setMaxIdleTime Methods setMaxIdleTime</para><para>Synopsis: public void setMaxIdleTime(int parm) throws java.sql.SQLException;</para><para> Parameters</para><para>parm - a number of seconds</para><para>Exceptions</para><para>java.sql.SQLException</para><para>if an error occurs</para><para>Set the number of seconds that a physical connection should remain unused in the pool before the connection is closed.
 Zero ( 0 ) indicates no limit.</para><para>11.11.3.2.17.
 Method setMaxPoolSize(int) setMaxPoolSize Methods setMaxPoolSize</para><para>Synopsis: public void setMaxPoolSize(int parm) throws java.sql.SQLException;</para><para> Parameters</para><para>parm - a maximum number of physical connections</para><para>Exceptions</para><para>java.sql.SQLException</para><para>if an error occurs</para><para>Set the maximum number of physical conections that the pool should contain.
 Zero ( 0 ) indicates no maximum size.
 The default value is 0 .</para><para>11.11.3.2.18.
 Method setMaxStatements(int) setMaxStatements Methods setMaxStatements</para><para>Synopsis: public void setMaxStatements(int parm) throws java.sql.SQLException;</para><para> Parameters</para><para>parm - a total number of statements</para><para>Exceptions</para><para>java.sql.SQLException</para><para>if an error occurs</para><para>Set the total number of statements that the pool should keep open.
 Zero ( 0 ) indicates that caching of statements is disabled.</para><para>11.11.3.2.19.
 Method setMinPoolSize(int) setMinPoolSize Methods setMinPoolSize</para><para>Synopsis: public void setMinPoolSize(int parm) throws java.sql.SQLException;</para><para> Parameters</para><para>parm - a minimum number of physical connections</para><para>Exceptions</para><para>java.sql.SQLException</para><para>if an error occurs</para><para>Set the number of physical connections the pool should keep available at all times.
 Zero ( 0 ) indicates that connections should be created as needed The default value is 0 .</para><para>11.11.3.2.20.
 Method setPropertyCycle(int) setPropertyCycle Methods setPropertyCycle</para><para>Synopsis: public void setPropertyCycle(int parm);</para><para> Parameters</para><para>parm - an interval (in seconds)</para><para>Set the interval, in seconds, that the pool should wait before enforcing the current policy defined by the values of the above connection pool properties</para></section></docbook>