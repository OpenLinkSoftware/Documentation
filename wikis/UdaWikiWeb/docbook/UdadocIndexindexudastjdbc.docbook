<docbook><section><title>UdadocIndexindexudastjdbc</title><para> </para><title> doc.Index.index.uda.stjdbc</title> doc.Index.index.uda.stjdbc
<para> Java developers have always enjoyed the freedom of being able to write cross-platform applications.
 To complement this, <ulink url="OpenLink">OpenLink</ulink>  Software provides Java built Single-Tier Drivers built using the Type A, B, and C call-level interface formats together with the Java JDBC technology.</para><para>The type of JDBC Single-Tier driver available depends on what is publicly available by the vendors of the respective database engines.
 Furthermore, on occasions when Java developers require access to ODBC-only databases, such as Microsoft Access, the Type C CLI bridge technology is available, thereby extending the reach of the developer looking to explore new avenues.
 Architectural diagrams showing the different representations of JDBC drivers based on Call-Level Interface types are available below.</para><para>These drivers are built using the Type-A call level interfaces of the relevant back-end database engine.
 Thus, these drivers implement the interfaces of the respective data-access mechanisms (JDBC) with inherent database specific networking, and a dependency on the database vendor-provided networking middleware products.
 At installation-time you simply install the driver with the underlying assumption that remote database connectivity is already in place (or will be put in place) via the installation of products such as Net8 and SQL*Net, Progress Client Networking, Informix Connect, Ingres Net, DB/2 Connect etc.</para><para>  [[/images/ajdbcst.gif|]]</para><para> /Type A Architectural Diagram for JDBC Image scaled down; Click to enlarge./</para><para> [[/images/ajdbcstprog.gif|]]</para><para> /Type A Architectural Diagram for Progress JDBC Image scaled down; Click to enlarge./</para><para> These drivers are built using the Type-B client networking interface to wire-protocols of the supported back-end database.
 These drivers are installed one time on a workstation/desktop or application server machine, and after installation are ready for direct communication with the supported backed database.
 This driver format is only currently available for; Microsoft SQL Server, SYBASE ASE, <ulink url="MySQL">MySQL</ulink>  , <ulink url="PostgreSQL">PostgreSQL</ulink>  , and <ulink url="OpenLink">OpenLink</ulink>  Virtuoso.
 Support for other databases will occur as and when unsupported database engine vendors make their RPC client interfaces available to third party developers.</para><para>  [[/images/bjdbcst.gif|]]</para><para> /Type B Architectural Diagram for JDBC Image scaled down; Click to enlarge./</para><para> These drivers are proxies that sit atop third-party implementations of the relevant data-access mechanisms.
 The prime purpose to integrate one data-access standard implementation with another, and there are a variety of scenarios where this is useful such as:</para><itemizedlist mark="bullet" spacing="compact"><listitem>JDBC access to back-end databases that are only accessible via ODBC</listitem>
</itemizedlist><para> [[/images/cjdbcst.gif|]]</para><para> /Type C Architectural Diagram for Progress JDBC Image scaled down; Click to enlarge./</para></section></docbook>