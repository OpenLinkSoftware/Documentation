<docbook><section><title>ZeroConfigRulesBookEdit</title><title> Configuring Multi-Tier ZeroConfig DSNs by Editing the Rulebook  </title> Configuring Multi-Tier <ulink url="ZeroConfig">ZeroConfig</ulink> DSNs by Editing the Rulebook  
<para>ZeroConf Support in the Request Broker is configured via the Rulebook, which (since Release 5.x) contains a section called [Zero Config].
 This section contains a list of DSN</para><para>&quot;Connect String&quot; pairs.
 The DSN is the name that will be presented to clients; the Connect String is a string of connection attributes necessary for making a connection, as the example below shows:</para><programlisting>[Zero Config]
ZJDBC3= &quot;ServerType=JDBC13;Database=virtuoso.jdbc2.Driver;UID=dba&quot;
ZSQL2K = &quot;ServerType=SQLServer 2000;Database=pubs;UID=sa&quot;
SQLServer 2000=&quot;Database=pubs;UID=sa&quot;
</programlisting><para>The syntax is -- </para><programlisting>&lt;Service_name&gt;=&quot;Connect String&quot;
</programlisting><para>-- or -- </para><programlisting>&lt;Server Type&gt;=&quot;Connect String&quot;
</programlisting><para> In the second case, there is no Server Type defined within the connect string itself.</para><itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>&lt;Service name&gt;</emphasis> -- The service name you want this specific ZeroConf service to be known as when discovered by any Multi-Tier ZeroConf clients on the network.</listitem>
</itemizedlist><itemizedlist mark="bullet" spacing="compact"><listitem>  <emphasis>&lt;Connect String&gt;</emphasis> -- A semi-colon (;) separated list of connection attributes that the Request Broker will supply to clients for automatically connecting the the requested DSN.
 Note that these attributes can be any of those used by a normal Multi-Tier client, since this is effectively making DSN-less connection string for clients to use.
 Host and Port cannot be specified, these are automatically supplied by the broker when the service is requested.
 <emphasis><emphasis>Note:</emphasis> The Host and Port number of the Request Broker are not specified here; the Broker will supply these to the services broadcasted automatically.
 This brings a huge saving on administration overhead -- if the circumstances of the networking infrastructure change, or the installation is moved to another machine, or a backup server activated, no modifications to the ZeroConf details are required -- the new host:port will be automatically supplied from then on.</emphasis></listitem>
</itemizedlist><para>The Connect String must be enclosed in double-quotes.</para><para>The list of available attributes are:
</para><table><title /><tgroup><thead /><tbody>
<row><entry> <emphasis>ServerType [SVT]</emphasis>  </entry><entry> Specify agent domain. This is used by the broker to determine which agent section to connect the client request to using mapping rules.  </entry></row>
<row><entry> <emphasis>ServerOptions</emphasis>  </entry><entry> Server startup options specific to agent/database.  </entry></row>
<row><entry> <emphasis>Database [DATABASE]</emphasis>  </entry><entry> Database to use. Agent/database specific.  </entry></row>
<row><entry> <emphasis>Options [OPTIONS]</emphasis>  </entry><entry> Database connect options. Agent/database specific.  </entry></row>
<row><entry> <emphasis>UserName [UID]</emphasis>  </entry><entry> Username to connect as.  </entry></row>
<row><entry> <emphasis>Password [PWD]</emphasis>  </entry><entry> Password for user.  </entry></row>
<row><entry> <emphasis>ReadOnly [READONLY]</emphasis>  </entry><entry> Specify Y(es) for read-only (ro) or N(o) for read-write (rw) connections. Read only connections are sometimes faster, but can never modify any database.  </entry></row>
<row><entry> <emphasis>FetchBufferSize [FBS]</emphasis>  </entry><entry> Number of rows (records) to be fetched per call from database agent. Values range from 1 to 99  </entry></row>
<row><entry> <emphasis>Persist</emphasis>  </entry><entry> Controls whether the Zero Config DSN attributes should be persisted on the client. If set to Yes/Y/True/T, then they will persist.  This may be deemed a security risk, so you may wish to set this to No/N/False/F, in which case they will be pulled from the Broker and used at connect time, not stored in the client.  </entry></row>
</tbody></tgroup></table>
</section></docbook>