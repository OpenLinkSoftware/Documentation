<docbook><section><title>ClassOPLRowSetMetaData</title><para>11.11.9.
 Class <ulink url="OPLRowSetMetaData">OPLRowSetMetaData</ulink> <ulink url="OPLRowSetMetaData">OPLRowSetMetaData</ulink> Classes <ulink url="OPLRowSetMetaData">OPLRowSetMetaData</ulink></para><para>The <ulink url="RowSetMetaData">RowSetMetaData</ulink> interface extends <ulink url="ResultSetMetaData">ResultSetMetaData</ulink> with methods that allow a metadata object to be initialized.
11.11.9.1.
 Synopsis</para><para>public class <ulink url="OPLRowSetMetaData">OPLRowSetMetaData</ulink> implements <ulink url="RowSetMetaData">RowSetMetaData</ulink>,Serializable {   <emphasis> Public Constructors   public <ulink url="OPLRowSetMetaData">OPLRowSetMetaData</ulink>(java.sql.ResultSetMetaData rsmd)       throws java.sql.SQLException;   </emphasis> Public Methods   public void setAutoIncrement(int column, boolean property)       throws java.sql.SQLException;   public void setCaseSensitive(int column, boolean property)       throws java.sql.SQLException;   public void setCatalogName(int column, java.lang.String catalogName)       throws java.sql.SQLException;   public void setColumnCount(int columnCount) throws java.sql.SQLException;   public void setColumnDisplaySize(int column, int size)       throws java.sql.SQLException;   public void setColumnLabel(int column, java.lang.String label)       throws java.sql.SQLException;   public void setColumnName(int column, java.lang.String columnName)       throws java.sql.SQLException;   public void setColumnType(int column, int SQLType)       throws java.sql.SQLException;   public void setColumnTypeName(int column, java.lang.String typeName)       throws java.sql.SQLException;   public void setCurrency(int column, boolean property)       throws java.sql.SQLException;   public void setNullable(int column, int property)       throws java.sql.SQLException;   public void setPrecision(int column, int precision)       throws java.sql.SQLException;   public void setScale(int column, int scale) throws java.sql.SQLException;   public void setSchemaName(int column, java.lang.String schemaName)       throws java.sql.SQLException;   public void setSearchable(int column, boolean property)       throws java.sql.SQLException;   public void setSigned(int column, boolean property)       throws java.sql.SQLException;   public void setTableName(int column, java.lang.String tableName)       throws java.sql.SQLException;   public int getColumnCount() throws java.sql.SQLException;   public boolean isAutoIncrement(int column) throws java.sql.SQLException;   public boolean isCaseSensitive(int column) throws java.sql.SQLException;   public boolean isSearchable(int column) throws java.sql.SQLException;   public boolean isCurrency(int column) throws java.sql.SQLException;   public int isNullable(int column) throws java.sql.SQLException;   public boolean isSigned(int column) throws java.sql.SQLException;   public int getColumnDisplaySize(int column) throws java.sql.SQLException;   public String getColumnLabel(int column) throws java.sql.SQLException;   public String getColumnName(int column) throws java.sql.SQLException;   public String getSchemaName(int column) throws java.sql.SQLException;   public int getPrecision(int column) throws java.sql.SQLException;   public int getScale(int column) throws java.sql.SQLException;   public String getTableName(int column) throws java.sql.SQLException;   public String getCatalogName(int column) throws java.sql.SQLException;   public int getColumnType(int column) throws java.sql.SQLException;   public String getColumnTypeName(int column) throws java.sql.SQLException;   public boolean isReadOnly(int column) throws java.sql.SQLException;   public boolean isWritable(int column) throws java.sql.SQLException;   public boolean isDefinitelyWritable(int column) throws java.sql.SQLException;   public String getColumnClassName(int column) throws java.sql.SQLException; }</para><para> Inheritance Path java.lang.Object
</para><table><title /><tgroup><thead /><tbody>
</tbody></tgroup></table>
<para> openlink.javax.OPLRowSetMetaData</para><para> 11.11.9.2.
 Members 11.11.9.2.1.
 Method getCatalogName(int) getCatalogName Methods getCatalogName</para><para>Synopsis: public String getCatalogName(int column)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - column name or &quot;&quot; if not applicable</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Gets the designated column&#39;s table&#39;s catalog name.</para><para>11.11.9.2.2.
 Method getColumnClassName(int) getColumnClassName Methods getColumnClassName</para><para>Synopsis: public String getColumnClassName(int column)               throws java.sql.SQLException;</para><para> Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Additional Information</para><para>Since</para><para>    * 1.2</para><para>See Also</para><para>    * What Is in the JDBC 2.0 API</para><para> Returns the fully-qualified name of the Java class whose instances are manufactured if the method ResultSet.getObject is called to retrieve a value from the column.
 ResultSet.getObject may return a subclass of the class returned by this method.</para><para>11.11.9.2.3.
 Method getColumnCount() getColumnCount Methods getColumnCount</para><para>Synopsis: public int getColumnCount() throws java.sql.SQLException;</para><para> Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Returns the number of columns in this <ulink url="RowSet">RowSet</ulink></para><para>11.11.9.2.4.
 Method getColumnDisplaySize(int) getColumnDisplaySize Methods getColumnDisplaySize</para><para>Synopsis: public int getColumnDisplaySize(int column)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - the normal maximum number of characters allowed as the width of the designated column</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates the designated column&#39;s normal maximum width in characters.</para><para>11.11.9.2.5.
 Method getColumnLabel(int) getColumnLabel Methods getColumnLabel</para><para>Synopsis: public String getColumnLabel(int column)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - the suggested column title</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Gets the designated column&#39;s suggested title for use in printouts and displays.</para><para>11.11.9.2.6.
 Method getColumnName(int) getColumnName Methods getColumnName</para><para>Synopsis: public String getColumnName(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - column name</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Get the designated column&#39;s name.</para><para>11.11.9.2.7.
 Method getColumnType(int) getColumnType Methods getColumnType</para><para>Synopsis: public int getColumnType(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - SQL type from java.sql.Types</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Additional Information</para><para>See Also</para><para>    * java.sql.Types</para><para> Retrieves the designated column&#39;s SQL type.</para><para>11.11.9.2.8.
 Method getColumnTypeName(int) getColumnTypeName Methods getColumnTypeName</para><para>Synopsis: public String getColumnTypeName(int column)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - type name used by the database.
 If the column type is a user-defined type, then a fully-qualified type name is returned.</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Retrieves the designated column&#39;s database-specific type name.</para><para>11.11.9.2.9.
 Method getPrecision(int) getPrecision Methods getPrecision</para><para>Synopsis: public int getPrecision(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - precision</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Get the designated column&#39;s number of decimal digits.</para><para>11.11.9.2.10.
 Method getScale(int) getScale Methods getScale</para><para>Synopsis: public int getScale(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - scale</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Gets the designated column&#39;s number of digits to right of the decimal point.</para><para>11.11.9.2.11.
 Method getSchemaName(int) getSchemaName Methods getSchemaName</para><para>Synopsis: public String getSchemaName(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - schema name or &quot;&quot; if not applicable</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Get the designated column&#39;s table&#39;s schema.</para><para>11.11.9.2.12.
 Method getTableName(int) getTableName Methods getTableName</para><para>Synopsis: public String getTableName(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - table name or &quot;&quot; if not applicable</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Gets the designated column&#39;s table name.</para><para>11.11.9.2.13.
 Method isAutoIncrement(int) isAutoIncrement Methods isAutoIncrement</para><para>Synopsis: public boolean isAutoIncrement(int column)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - true if so</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates whether the column is automatically numbered, thus read-only.</para><para>11.11.9.2.14.
 Method isCaseSensitive(int) isCaseSensitive Methods isCaseSensitive</para><para>Synopsis: public boolean isCaseSensitive(int column)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - true if so; false otherwise</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates whether a column&#39;s case matters.</para><para>11.11.9.2.15.
 Method isCurrency(int) isCurrency Methods isCurrency</para><para>Synopsis: public boolean isCurrency(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - true if so; false otherwise</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates whether the designated column is a cash value.</para><para>11.11.9.2.16.
 Method isDefinitelyWritable(int) isDefinitelyWritable Methods isDefinitelyWritable</para><para>Synopsis: public boolean isDefinitelyWritable(int column)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - true if so; false otherwise</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates whether a write on the designated column will definitely succeed.</para><para>11.11.9.2.17.
 Method isNullable(int) isNullable Methods isNullable</para><para>Synopsis: public int isNullable(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - the nullability status of the given column; one of columnNoNulls, columnNullable or columnNullableUnknown</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates the nullability of values in the designated column.</para><para>11.11.9.2.18.
 Method isReadOnly(int) isReadOnly Methods isReadOnly</para><para>Synopsis: public boolean isReadOnly(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - true if so; false otherwise</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates whether the designated column is definitely not writable.</para><para>11.11.9.2.19.
 Method isSearchable(int) isSearchable Methods isSearchable</para><para>Synopsis: public boolean isSearchable(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - true if so; false otherwise</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates whether the designated column can be used in a where clause.</para><para>11.11.9.2.20.
 Method isSigned(int) isSigned Methods isSigned</para><para>Synopsis: public boolean isSigned(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - true if so; false otherwise</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates whether values in the designated column are signed numbers.</para><para>11.11.9.2.21.
 Method isWritable(int) isWritable Methods isWritable</para><para>Synopsis: public boolean isWritable(int column) throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>return - true if so; false otherwise</para><para>Exceptions</para><para>SQLException</para><para>if a database access error occurs</para><para>Indicates whether it is possible for a write on the designated column to succeed.</para><para>11.11.9.2.22.
 Method setAutoIncrement(int, boolean) setAutoIncrement Methods setAutoIncrement</para><para>Synopsis: public void setAutoIncrement(int column, boolean property)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>property - is either true or false (default is false).</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify whether the is column automatically numbered, thus read-only.</para><para>11.11.9.2.23.
 Method setCaseSensitive(int, boolean) setCaseSensitive Methods setCaseSensitive</para><para>Synopsis: public void setCaseSensitive(int column, boolean property)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>property - is either true or false (default is false).</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify whether the column is case sensitive.</para><para>11.11.9.2.24.
 Method setCatalogName(int, String) setCatalogName Methods setCatalogName</para><para>Synopsis: public void setCatalogName(int column, java.lang.String catalogName)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>catalogName - column&#39;s catalog name.</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify the column&#39;s table&#39;s catalog name, if any.</para><para>11.11.9.2.25.
 Method setColumnCount(int) setColumnCount Methods setColumnCount</para><para>Synopsis: public void setColumnCount(int columnCount)               throws java.sql.SQLException;</para><para> Parameters</para><para>columnCount - number of columns.</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Set the number of columns in the <ulink url="RowSet">RowSet</ulink>.</para><para>11.11.9.2.26.
 Method setColumnDisplaySize(int, int) setColumnDisplaySize Methods setColumnDisplaySize</para><para>Synopsis: public void setColumnDisplaySize(int column, int size)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>size - size of the column</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify the column&#39;s normal max width in chars.</para><para>11.11.9.2.27.
 Method setColumnLabel(int, String) setColumnLabel Methods setColumnLabel</para><para>Synopsis: public void setColumnLabel(int column, java.lang.String label)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>label - the column title</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify the suggested column title for use in printouts and displays, if any.</para><para>11.11.9.2.28.
 Method setColumnName(int, String) setColumnName Methods setColumnName</para><para>Synopsis: public void setColumnName(int column, java.lang.String columnName)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>columnName - the column name</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify the column name.</para><para>11.11.9.2.29.
 Method setColumnType(int, int) setColumnType Methods setColumnType</para><para>Synopsis: public void setColumnType(int column, int SQLType)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>SQLType - column&#39;s SQL type.</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Additional Information</para><para>See Also</para><para>    * java.sql.Types</para><para> Specify the column&#39;s SQL type.</para><para>11.11.9.2.30.
 Method setColumnTypeName(int, String) setColumnTypeName Methods setColumnTypeName</para><para>Synopsis: public void setColumnTypeName(int column, java.lang.String typeName)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>typeName - data source specific type name.</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify the column&#39;s data source specific type name, if any.</para><para>11.11.9.2.31.
 Method setCurrency(int, boolean) setCurrency Methods setCurrency</para><para>Synopsis: public void setCurrency(int column, boolean property)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>property - is either true or false (default is false).</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify whether the column is a cash value.</para><para>11.11.9.2.32.
 Method setNullable(int, int) setNullable Methods setNullable</para><para>Synopsis: public void setNullable(int column, int property)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>property - is either one of columnNoNulls, columnNullable or columnNullableUnknown (default is columnNullableUnknown).</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify whether the column&#39;s value can be set to NULL.</para><para>11.11.9.2.33.
 Method setPrecision(int, int) setPrecision Methods setPrecision</para><para>Synopsis: public void setPrecision(int column, int precision)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>precision - number of decimal digits.</para><para>Exceptions</para><para>SQLException</para><para>if a database-access error occurs.</para><para>Specify the column&#39;s number of decimal digits.</para><para>11.11.9.2.34.
 Method setScale(int, int) setScale Methods setScale</para><para>Synopsis: public void setScale(int column, int scale)               throws java.sql.SQLException;</para><para> Parameters</para><para>column - the first column is 1, the second is 2, ...</para><para>scale - number of digits to right of decimal point.</para><para>Exceptions </para></section></docbook>