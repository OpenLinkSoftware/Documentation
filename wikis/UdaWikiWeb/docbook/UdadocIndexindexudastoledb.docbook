<docbook><section><title>UdadocIndexindexudastoledb</title><para> </para><title> doc.Index.index.uda.stoledb</title> doc.Index.index.uda.stoledb
<para>  <ulink url="OpenLink">OpenLink</ulink>  Single-Tier Drivers provide developers or users with <ulink url="OleDB">OleDB</ulink>  access to remote or local databases, and on a wider variety of operating systems.
 With the <ulink url="OpenLink">OpenLink</ulink>  drivers, technologies such as Microsoft Data Transformation Services (DTS) can be used to access and transform disparate database technologies running on remote systems that might not have been possible before.</para><para>The <ulink url="OpenLink">OpenLink</ulink>  OLEDB provider for ODBC is an OLEDB-ODBC Bridge provider, written in C++, exploiting ODBC to enable connectivity to an ODBC-compliant DSN (database).</para><para>If the underlying ODBC driver is the <ulink url="OpenLink">OpenLink</ulink>  driver, the possible driver-types depend on what is made publicly available by the vendors of the respective database engines.
 Below are architectural diagrams showing the different type representations for the OLE-DB drivers available.</para><para>These drivers are built using the Type-A call-level interfaces of the relevant back-end database engine.
 Thus, these drivers implement the interfaces of the respective data-access mechanisms (ODBC) with inherent database-specific networking, and a dependency on the database vendor-provided networking middleware products.
 At installation time you simply install the driver with the underlying assumption that remote database connectivity is already in place (or will be put in place) via the installation of products such as Net8 and SQL*Net, Progress Client Networking, Informix Connect, Ingres Net, DB/2 Connect etc.</para><para>  [[/images/|]]</para><para> /Type-A Architectural Diagram for OLE-DB Image scaled down; Click to enlarge./</para><para> [[/images/aoledbstprog.gif|]]</para><para> / Image scaled down; Click to enlarge./</para><para> These drivers are built using the Type-B client-networking interface to wire-protocols of the supported back-end database.
 These drivers are installed once on a workstation/desktop or application server machine, and after installation are ready for direct communication with the supported backed database.
 The driver format is only currently available for Microsoft SQL Server, SYBASE ASE, <ulink url="MySQL">MySQL</ulink>  , <ulink url="PostgreSQL">PostgreSQL</ulink>  , and <ulink url="OpenLink">OpenLink</ulink>  Virtuoso.
 Support for other databases will occur as and when unsupported database engine vendors make their RPC client interfaces available to third party developers.</para><para>  [[/images/boledbst.gif|]]</para><para> / Image scaled down; Click to enlarge./</para><para> These drivers are proxies that sit atop third-party implementations of the relevant data-access mechanisms (ODBC, JDBC etc).
 The prime purpose is to integrate one data-access standard implementation with another.
 There are a variety of scenarios where this is useful such as:</para><itemizedlist mark="bullet" spacing="compact"><listitem>access to back-end databases that are only accessible via ODBC </listitem>
<listitem>access to back-end databases that are only accessible via JDBC</listitem>
</itemizedlist><para> [[/images/coledbst.gif|]]</para><para> / Image scaled down; Click to enlarge./</para></section></docbook>