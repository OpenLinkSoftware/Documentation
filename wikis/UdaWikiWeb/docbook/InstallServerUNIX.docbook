<docbook><section><title>InstallServerUNIX</title><para> </para><title> OpenLink Multi-Tier Server Components Installation and Configuration</title> OpenLink Multi-Tier Server Components Installation and Configuration
<para><emphasis>Review Preinstallation Documentation:</emphasis> <ulink url="PreInstallServerComponentsUNIX">Multi-Tier Server Components</ulink></para><bridgehead class="http://www.w3.org/1999/xhtml:h2">Installation</bridgehead>
<orderedlist spacing="compact"><listitem> Log in to your Unix or Linux server machine.
<figure><graphic fileref="InstallServerUNIX/ST_BROKER_Login.png" /></figure> </listitem>
<listitem> Create and navigate to the intended OpenLink installation directory, e.g., <programlisting>mkdir /opt/openlink
cd /opt/openlink
</programlisting><figure><graphic fileref="InstallServerUNIX/ST_BROKER_CD_Demos.png" /></figure> </listitem>
<listitem> The installation files ship as an installation shell script (<computeroutput>install.sh</computeroutput>), a Request Broker archive (<computeroutput>oplrqb.taz</computeroutput>), and an agent archive (name varies, e.g., <computeroutput>sql_mv.tgz</computeroutput>).
 All files should be transferred using binary-preserving methods (e.g., <computeroutput>ftp</computeroutput> in <computeroutput>BIN</computeroutput> mode, or <computeroutput>scp</computeroutput>).
<figure><graphic fileref="InstallServerUNIX/ST_BROKER_LS_Files.png" /></figure> </listitem>
<listitem> Use the <emphasis><computeroutput>su - &lt;username&gt;</computeroutput></emphasis> command to switch to your DBMS or DBMS native client user, <ulink url="MTServerInstallRequirements">where appropriate</ulink>: <figure><graphic fileref="InstallServerUNIX/MT_BROKER_su.png" /></figure> </listitem>
<listitem> Execute the <computeroutput>.profile</computeroutput> associated with the DBMS user: <figure><graphic fileref="InstallServerUNIX/MT_BROKER_profile.png" /></figure> </listitem>
<listitem> Use the <computeroutput>echo</computeroutput> command to confirm that <ulink url="MTServerComponentsInstallVariables">relevant DBMS-specific environment variables</ulink> are set: <figure><graphic fileref="InstallServerUNIX/MT_BROKER_variables.png" /></figure> </listitem>
<listitem> Run the following command to start the installation: <programlisting>sh install.sh
</programlisting><figure><graphic fileref="InstallServerUNIX/MT_BROKER_Install.png" /></figure> </listitem>
<listitem> You must choose a TCP port at which on which the OpenLink Request Broker will listen for requests.
 The default is 5000.
 You will need to know this port number and the Broker host&#39;s IP address or hostname when configuring ODBC Data Source Names (DSNs).
<figure><graphic fileref="InstallServerUNIX/MT_BROKER_Install_5000.png" /></figure> </listitem>
<listitem> You must choose a TCP port at which the OpenLink Request Broker&#39;s HTTP-based Admin Assistant will listen for requests.
 The default is 8000.
 You will need to know this port number and the Broker host&#39;s IP address or hostname to access your Admistrator in a Web browser.
 The URL will look like this: <programlisting>http://broker-host.example.com:8000/
</programlisting><figure><graphic fileref="InstallServerUNIX/MT_BROKER_Install_8000.png" /></figure> </listitem>
<listitem> <computeroutput>Log file?</computeroutput> enables you to specify the name and location of the OpenLink Request Broker&#39;s HTTP-based Admin Assistant&#39;s log file.
 It is best to go with the default.
<figure><graphic fileref="InstallServerUNIX/MT_BROKER_Install_log.png" /></figure> </listitem>
<listitem> You can choose to log all requests made to the OpenLink Request Broker&#39;s HTTP-based Admin Assistant.
 This is not diagnostic-level ODBC tracing nor multi-tier connection logging.
 The default is no, and this is generally appropriate.
<figure><graphic fileref="InstallServerUNIX/MT_BROKER_Install_Requests.png" /></figure> </listitem>
<listitem> You can change the OpenLink Request Broker&#39;s HTTP-based Admin Assistant&#39;s default username from &quot;<computeroutput>admin</computeroutput>.&quot; This is the username you will use when working with the OpenLink Request Broker&#39;s HTTP-based Admin Assistant.
 (You can set up other usernames later; consider this one similar to &quot;<computeroutput>root</computeroutput>&quot;.) <figure><graphic fileref="InstallServerUNIX/MT_BROKER_Install_Admin.png" /></figure> </listitem>
<listitem> You can change the OpenLink Request Broker&#39;s HTTP-based Admin Assistant&#39;s default password from &quot;<computeroutput>admin</computeroutput>.&quot; This is the password associated with the username you just set.
<figure><graphic fileref="InstallServerUNIX/MT_BROKER_Admin_PWD.png" /></figure> </listitem>
<listitem> The installation is complete.
<figure><graphic fileref="InstallServerUNIX/MT_BROKER_Install_End.png" /></figure></listitem>
</orderedlist><bridgehead class="http://www.w3.org/1999/xhtml:h2"> Configuration </bridgehead>
<para>OpenLink&#39;s server components require minimal configuration.
 In most instances, the installation process includes steps to ensure that the primary configuration file (<computeroutput>oplrqb.ini</computeroutput>) is configured for basic connectivity.
 Use the following steps to check and enhance your individual agent settings.
</para><orderedlist spacing="compact"><listitem> Navigate to the root of the OpenLink server components installation, e.g., <programlisting>cd /opt/openlink/
</programlisting></listitem>
<listitem> Use the <computeroutput>bash</computeroutput> or <computeroutput>sh</computeroutput> command to open a bash or bourne shell.
 Other shells may be used, but these are the most predictable.
</listitem>
<listitem> In <computeroutput>bash</computeroutput> or <computeroutput>sh</computeroutput>, execute this command to set the necessary environment variables, and start the <ulink url="OpenLink">OpenLink</ulink> License Manager: <programlisting>. ./openlink.sh
</programlisting>(If using a different shell, the command may be <computeroutput>source ./openlink.sh</computeroutput> or <computeroutput>source ./openlink.csh</computeroutput>.) </listitem>
<listitem> Navigate to the <computeroutput>bin</computeroutput> sub-directory of the OpenLink installation <programlisting>cd bin
</programlisting></listitem>
<listitem> Execute this command: <programlisting>./oplrqb +debug
</programlisting></listitem>
<listitem> The OpenLink Request Broker will start, and its <computeroutput>stdout</computeroutput> output will take over the terminal session.
 This debug output is useful when testing and troubleshooting a new installation.
 Once connections are confirmed to be working properly, stop the Broker with <computeroutput>ctrl-C</computeroutput>, and then restart with <programlisting>./oplrqb
</programlisting></listitem>
<listitem> Connect to the OpenLink Request Broker&#39;s HTTP-based Admin Assistant with a Web browser.
 As noted above, the URL convention is: <programlisting>http://broker-hostname.example.com:mt_admin_port/
</programlisting><figure><graphic fileref="InstallServerUNIX/Open_Admin.png" /></figure> </listitem>
<listitem> Click the <emphasis>Server Components Administration</emphasis> link.
<figure><graphic fileref="InstallServerUNIX/ServerComponents.png" /></figure> </listitem>
<listitem> Click the <emphasis>Database Agent Administration</emphasis> link.
<figure><graphic fileref="InstallServerUNIX/AgentAdministration.png" /></figure> </listitem>
<listitem> Click the <emphasis>Database Settings by Wizard</emphasis> link.
<figure><graphic fileref="InstallServerUNIX/DatabaseWizard.png" /></figure> </listitem>
<listitem> Login with the Administrator username and password you set up earlier.
 As noted above, both default to &quot;<computeroutput>admin</computeroutput>&quot;.
<figure><graphic fileref="InstallServerUNIX/AdminLogin.png" /></figure> </listitem>
<listitem> Select the configuration section that you want to review.
 The naming convention for default database agent configuration sections is <emphasis><computeroutput>generic_</computeroutput></emphasis> followed by an abbreviation for the OpenLink agent.
<figure><graphic fileref="InstallServerUNIX/AgentConfiguration.png" /></figure> </listitem>
<listitem> The <emphasis>Agent Details</emphasis> dialog allows you to rename the default agent configuration section and provide an optional comment.
 This is an advanced feature that should not be pursued for basic connectivity.
<figure><graphic fileref="InstallServerUNIX/AgentDetails1.png" /></figure> </listitem>
<listitem> Click <emphasis>Edit</emphasis> to continue.
</listitem>
<listitem> The first <emphasis>Connection Parameters</emphasis> dialog allows you to hard-code a single username and password for all connections that use this agent configuration section for ODBC connectivity.
<figure><graphic fileref="InstallServerUNIX/ConnectionParameters.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>User Name</emphasis> — A valid database user name.
</listitem>
<listitem> <emphasis>Password</emphasis> — A valid database password.
</listitem>
</itemizedlist></listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
</listitem>
<listitem>The second <emphasis>Connection Parameters</emphasis> dialog allows you to hard-code a Database/schema, Read/Write access mode, and Connection Options string for <emphasis>all</emphasis> connections that use this agent configuration section for ODBC connectivity.
<figure><graphic fileref="InstallServerUNIX/ConnectionParameters2.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Database Name</emphasis> — Takes a database name or Oracle SID.
</listitem>
<listitem> <emphasis>Read Only specifier</emphasis> — Specifies whether the connection is Read-only or Read/Write.
</listitem>
<listitem> <emphasis>Connect Options</emphasis> — This field passes network connection parameters for TCP/IP sockets-based connections to target DBMS instances, whether those reside on the Broker host or not.
 <ulink url="MTServerConfigConnectOptions">Review Complete Settings and Usage for Connect Options</ulink> </listitem>
</itemizedlist></listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
</listitem>
<listitem> The second <emphasis>Connection Parameters</emphasis> dialog allows you to hardcode Server Options, a Domain, and a Host Name for all connections that use this agent configuration section for ODBC connectivity.
<figure><graphic fileref="InstallServerUNIX/ConnectionParameters3.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Server Options</emphasis> — Server Options are typically Progress specific options which are passed to the database at startup.
 You want to ensure that the options passed to the actual database match the options passed in the Server Options field or ServerOptions parameter.
 These options must also match actual options passed to the database at startup time.
</listitem>
<listitem> <emphasis>Domain</emphasis> — The value must match a <computeroutput>[Domain Alias]</computeroutput>, which is contained in the Request Broker&#39;s Session Rulebook.
 This <computeroutput>Domain Alias</computeroutput> typically represents the name and version of an OpenLink Agent, by default.
 The agent&#39;s visible versioning may differ from the DBMS version to which it connects.
 Note that advanced users may create custom domain names that follow their own conventions.
</listitem>
<listitem> <emphasis>Host Name</emphasis> — Host name or IP address of the machine that contains the OpenLink Request Broker.
</listitem>
</itemizedlist></listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
</listitem>
<listitem> The <emphasis>Secure SSL Connection</emphasis> dialog allows you to designate an SSL certificate.
 It also allows you to enforce SSL-only connectivity.
<figure><graphic fileref="InstallServerUNIX/SecureSSL.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>SSL Key File</emphasis> — Passes the path to an SSL certificate file.
</listitem>
<listitem> <emphasis>SSL Required</emphasis> — Check to force the broker to accept <emphasis>only</emphasis> SSL-based connections.
</listitem>
</itemizedlist></listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
</listitem>
<listitem> The first <emphasis>Application &amp; Database Specific Parameters</emphasis> dialog allows you to enable <computeroutput>opsyslogin</computeroutput>.
 <computeroutput>Opsyslogin</computeroutput> authenticates connection usernames and passwords against the operating system instead of the database.
<figure><graphic fileref="InstallServerUNIX/Specific1.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Require Operating System Identity</emphasis> — If checked, the Request Broker will test to see that the username and password which are supplied to it are valid for the machine.
 If the authentication parameters are valid, it will start the database agent under the identity of that user.
 If unchecked, the username and password are simply passed to the backend database for its internal authentication.
</listitem>
</itemizedlist></listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
</listitem>
<listitem> The second <emphasis>Application &amp; Database Specific Parameters</emphasis> dialog allows you to set <computeroutput>autocommit</computeroutput> and Jet data type mapping behaviors <figure><graphic fileref="InstallServerUNIX/Specific2.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>No auto commit on startup</emphasis> — Changes the default commit behaviour of the OpenLink driver.
 The default mode is AutoCommit (box unchecked).
</listitem>
<listitem> <emphasis>Jet engine catalogs</emphasis> — Check this box if you intend to use this driver with Microsoft Access or other Jet-based data consumers (e.g., Microsoft Excel, Microsoft SQL Server, Microsoft OLE DB Provider for ODBC, Microsoft ADO.NET Provider for ODBC, etc.).
 This option changes the handling of certain datatypes for the Microsoft Jet Engine.
 If you utilize MS applications, and you notice that money and other datatypes are mishandled, test with this feature enabled.
</listitem>
</itemizedlist></listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
</listitem>
<listitem> The third <emphasis>Application &amp; Database Specific Parameters</emphasis> dialog allows you to limit your rowset size and pass an initial SQL script.
<figure><graphic fileref="InstallServerUNIX/Specific3.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Limit result set to <emphasis>n</emphasis> records</emphasis> — Allows you to define a limit on the maximum number of rows to be returned from a query.
 The default value of 0 means no limit.
</listitem>
<listitem> <emphasis>Initial SQL script</emphasis> — Lets you specify a file containing one or more SQL statements that will be automatically executed against the database upon each connection.
</listitem>
</itemizedlist></listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
</listitem>
<listitem> The <emphasis>Startup Parameters</emphasis> screen enables you to identify the OpenLink database agent to use for your ODBC connections.
 It also allows you to hardcode specific environment variables for the connection.
 Proper environment variables are essential for ODBC connectivity.
<figure><graphic fileref="InstallServerUNIX/Startup.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Executable name</emphasis> — Allows you to choose which OpenLink agent should serve all connections associated with this agent configuration section.
</listitem>
<listitem> <emphasis>Environment Variables</emphasis> — OpenLink&#39;s agents are written using the database native CLI.
 Consequently, they use the same environment variables that database native clients use to connect to the relevant DBMS.
 Use this box to set them.
 <ulink url="MTAgentConfigurationDBMSVariables">Complete List of Variables by Database</ulink> </listitem>
</itemizedlist></listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
<figure><graphic fileref="InstallServerUNIX/AgentParameters.png" /></figure> </listitem>
<listitem> The <emphasis>Process Mapping</emphasis> dialog enables you to set your agent reuse rules.
 These rules dictate whether or not an agent process instance will be re-used for subsequent connections.
 Reuse of agent instances reduces overhead associated with agent spawning and connection instantiation, but can have user authentication and other security implications.
<figure><graphic fileref="InstallServerUNIX/ProcessMapping.png" /></figure> </listitem>
<listitem> Click <emphasis>Next</emphasis> to continue.
</listitem>
<listitem> The <emphasis>Save Settings</emphasis> dialog allows you to save your new agent settings.
 Your new settings will not take effect until the Request Broker is restarted or reinitialized.
 Check the <emphasis>Reinitialize</emphasis> box to reinitialize the OpenLink Request Broker with these settings.
 Some setting changes require a full restart, which cannot be handled through the HTTP-based Admin Assistant.
<figure><graphic fileref="InstallServerUNIX/SaveSettings.png" /></figure> </listitem>
<listitem> Click <emphasis>Save</emphasis> to complete the agent configuration process.</listitem>
</orderedlist><bridgehead class="http://www.w3.org/1999/xhtml:h2">Proceed to Commercial Licensing Documentation</bridgehead>
<para>If you purchase a commercial license at the end of your evaluation period, be sure to consult our <ulink url="UDALicenseApplication">documentation which explains the placement and activation of commercial license files</ulink> and the use of the <emphasis>OpenLink License Manager</emphasis> technology.</para></section></docbook>