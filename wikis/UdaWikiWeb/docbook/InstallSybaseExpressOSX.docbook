<docbook><section><title>InstallSybaseExpressOSX</title><para> </para><title> Installation and Configuration of the Single-Tier &quot;Express&quot; Edition ODBC Driver for Sybase Data Sources, for Mac OS X</title> Installation and Configuration of the Single-Tier &quot;Express&quot; Edition ODBC Driver for Sybase Data Sources, for Mac OS X
<para> <emphasis>Review Preinstallation Documentation:</emphasis> <ulink url="PreInstallSybaseExpressOSX">Pre-Installation Requirements</ulink> </para><bridgehead class="http://www.w3.org/1999/xhtml:h2">Installation</bridgehead>
<emphasis>Note: The software must be installed as a user with Administrative privileges on the machine.</emphasis>
<para> </para><orderedlist spacing="compact"><listitem> The Single-Tier &quot;Express&quot; Edition ODBC Driver for Sybase Data Sources is distributed as a Disk Image (<computeroutput>.dmg</computeroutput>) file: </listitem>
<listitem> Double-click the disk image &#39;mul6esql.dmg&#39; to access the installer <computeroutput>.mpkg</computeroutput> file: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall1.png" /></figure> </listitem>
<listitem> Double-click the <computeroutput>.mpkg</computeroutput> file to run the installer and follow the instructions to complete the installation: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall2.png" /></figure> </listitem>
<listitem> This is the <emphasis>Welcome</emphasis> dialog for the OpenLink ODBC Driver for SQL Server (Express Edition): <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall4.png" /></figure> </listitem>
<listitem> Review the <emphasis>Read Me file for installation requirements and known issues: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseConfig5.png" /></figure> </emphasis></listitem>
<listitem> Read the <emphasis>Software License Agreement</emphasis>: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall6.png" /></figure> </listitem>
<listitem> Agree to the <emphasis>Software License Agreement</emphasis> before continuing your installation: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall7.png" /></figure> </listitem>
<listitem> Select a destination volume for the driver installation: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall8.png" /></figure> </listitem>
<listitem> Choose to perform a custom or default installation of the driver: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall9.png" /></figure> </listitem>
<listitem> If you chose the custom option, select which of the following components to install: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstallExtra.png" /></figure> </listitem>
<listitem> Note: The Software must be installed as a user with Administrative privileges on the machine: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall10.png" /></figure> </listitem>
<listitem> After the driver has been installed, you will be prompted for a license file.
 If a license file already exists on the machine, select the &#39;use existing file&#39; option.
 A trial (try) or full (buy) license can be obtained by selecting the &#39;try and buy&#39; option which loads the online try and buy web page: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall11.png" /></figure> </listitem>
<listitem> To obtain the trial license you must be a registered user on the OpenLink Web site and login with the username (e-mail address) and password for that user.
 Click on the &#39;Shop&#39; link to visit the online shop cart to purchase a full license, if required: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall12.png" /></figure> </listitem>
<listitem> Click on the &#39;download license&#39; button to obtain an immediate license file and save it to your desktop.
 Alternatively, mail can be sent to your e-mail address with a link to your OpenLink Data Space (ODS).
 Here, all trial and full license files will be stored in a specialized Briefcase for download at a later date.
<figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall13.png" /></figure> </listitem>
<listitem> Select the license file that you want to use for the installation: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall14.png" /></figure> </listitem>
<listitem> The installation is complete: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseInstall15.png" /></figure></listitem>
</orderedlist><para> </para><bridgehead class="http://www.w3.org/1999/xhtml:h2"> Configuration </bridgehead>
<orderedlist spacing="compact"><listitem> To configure an ODBC DSN, run the OpenLink iODBC Administrator located in the /Applications/iODBC folder: <figure><graphic fileref="InstallSybaseExpressOSX/ODBCadmin.png" /></figure> </listitem>
<listitem> Click the Add button: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseConfig1.png" /></figure> </listitem>
<listitem> Select the OpenLink SQL Server Driver (Express Edition) v6.0 from the list of available drivers.
 Select the Unicode version of the driver <emphasis>if and only if</emphasis> you are working with multi-byte character sets, as unnecessary translations can significantly affect ODBC performance: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseConfig2.png" /></figure> </listitem>
<listitem> Provide a suitable DSN name and optional description for the Data Source: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseConfig3.png" /></figure> </listitem>
<listitem> The Connection Tab takes the minimum parameters required to make a connection to the target database: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseConfig4.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Host</emphasis> - This is the fully qualified hostname or IP address of the machine hosting the DBMS you wish to access, e.g., <computeroutput>dbms-server.example.com</computeroutput> or <computeroutput>192.168.155.123</computeroutput>.
 Any hostname which can be resolved by your local DNS is acceptable.
</listitem>
<listitem> <emphasis>Port</emphasis> - This is the port on which SQL Server listens.
</listitem>
<listitem> <emphasis>Database</emphasis> - This is the SQL Server database to which you want to connect.
</listitem>
<listitem> <emphasis>User Name</emphasis> - This is a valid SQL Server user.
</listitem>
<listitem> The advanced button displays additional optional parameters that can be configured.

<table><title /><tgroup><thead /><tbody>
<row />
<row><entry> <emphasis>Tds </emphasis></entry><entry> The TDS version to be used. (default - &#39;<computeroutput>8.0</computeroutput>&#39;) </entry></row>
<row><entry> <emphasis>Cachemetadata </emphasis></entry><entry> When used with <computeroutput>prepareSQL=3</computeroutput>, causes the driver to cache column meta data for <computeroutput>SELECT</computeroutput> statements. Use with care. (default - <computeroutput>false</computeroutput>) </entry></row>
<row><entry> <emphasis>Charset </emphasis></entry><entry> Very important setting, determines the byte-value-to-character mapping for <computeroutput>CHAR/VARCHAR/TEXT</computeroutput> values. Applies for characters from the extended set (codes 128-255). Has no effect on <computeroutput>NCHAR/NVARCHAR/NTEXT</computeroutput> values since these are stored using Unicode. (default - the character set the server was installed with) </entry></row>
<row><entry> <emphasis>Language </emphasis></entry><entry> <ulink url="ToBeDone">ToBeDone</ulink> </entry></row>
<row><entry> <emphasis>Domain </emphasis></entry><entry> Specifies the Windows domain in which to authenticate. If present, Windows (NTLM) authentication will be used instead of SQL Server authentication (i.e., the user and password provided are the domain user and password). This allows non-Windows clients to log in to servers which are only configured to accept Windows authentication. </entry></row>
<row><entry> <emphasis>Instance </emphasis></entry><entry> Named instance. SQL Server can run multiple &#39;named instances&#39; (i.e., different server instances, running on different TCP ports) on the same machine. When using Microsoft tools, selecting one of these instances is made by using &#39;<computeroutput>[host_name]\[instance_name]</computeroutput>&#39; instead of the simple &#39;<computeroutput>[host_name]</computeroutput>&#39;. You must split the compound identifier, and use the instance name as a property. </entry></row>
<row><entry> <emphasis>AppName</emphasis> </entry><entry> Application name. No practical use. It&#39;s displayed by Enterprise Manager or Profiler associated with the connection.</entry></row>
<row><entry> <emphasis>ProgName</emphasis> </entry><entry> Client library name. No practical use. It&#39;s displayed by Enterprise Manager or Profiler associated with the connection. </entry></row>
<row><entry> <emphasis>Wsid</emphasis></entry><entry>Workstation ID. No practical use. it&#39;s displayed by Enterprise Manager or Profiler associated with the connection. (default - the client host name) </entry></row>
<row><entry> <emphasis>MacAddress</emphasis> </entry><entry> Network interface card MAC address. (default - &#39;<computeroutput>000000000000</computeroutput>&#39;) </entry></row>
<row><entry> <emphasis>SendStringParametersAsUnicode</emphasis> </entry><entry> Determines whether string parameters are sent to the SQL Server database in Unicode or in the default character encoding of the database. (default - <computeroutput>true</computeroutput>) </entry></row>
<row><entry> <emphasis>LastUpdateCount</emphasis> </entry><entry> If true, only the last update count will be returned by <computeroutput>executeUpdate()</computeroutput>. This is useful in case you are updating or inserting into tables that have triggers (such as replicated tables); there&#39;s no way to make the difference between an update count returned by a trigger and the actual update count, but the actual update count is always the last, as the triggers execute first. If false, all update counts are returned; use <computeroutput>getMoreResults()</computeroutput> to loop through them. (default - <computeroutput>true</computeroutput>) </entry></row>
<row><entry> <emphasis>PrepareSQL</emphasis> </entry><entry> This parameter specifies the mechanism used for Prepared Statements. (default - <computeroutput>3</computeroutput> for SQL Server) </entry></row>
<row><entry> <emphasis>PacketSize</emphasis> </entry><entry> The network packet size (a multiple of 512). (default - <computeroutput>4096</computeroutput> when TDS is set to 7.0 or greater (Microsoft SQL Server 7.x and later); <computeroutput>512</computeroutput> when TDS is set to 4.2 or 5.0 (any Sybase version or Microsoft SQL Server 6.x and earlier) </entry></row>
<row><entry> <emphasis>TcpNoDelay</emphasis> </entry><entry> <computeroutput>true</computeroutput> to enable <computeroutput>TCP_NODELAY</computeroutput> on the socket; <computeroutput>false</computeroutput> to disable it. (default - <computeroutput>true</computeroutput>) </entry></row>
<row><entry> <emphasis>LobBuffer</emphasis> </entry><entry> The amount of <computeroutput>LOB</computeroutput> data to buffer in memory before caching to disk. The value is in bytes for <computeroutput>BLOB</computeroutput> data and chars for <computeroutput>CLOB</computeroutput> data. (default - <computeroutput>32768</computeroutput>) </entry></row>
<row><entry> <emphasis>MaxStatements</emphasis> </entry><entry> The number of statement prepares each connection should cache. A value of <computeroutput>0</computeroutput> will disable statement caching. (default - <computeroutput>500</computeroutput>) </entry></row>
<row><entry> <emphasis>LoginTimeout</emphasis> </entry><entry> The time to wait (in seconds) for a successful connection before timing out. If <computeroutput>namedPipe</computeroutput> is true and <computeroutput>loginTimeout</computeroutput> is non-zero, the value of <computeroutput>loginTimeout</computeroutput> is used for the retry timeout when &#39;All pipe instances are busy&#39; error messages are received while attempting to connect to the server. If <computeroutput>namedPipe</computeroutput> is true and <computeroutput>loginTimeout</computeroutput> is zero (the default), a value of 20 seconds is used for the named pipe retry timeout. (default - <computeroutput>0</computeroutput>) </entry></row>
<row><entry> <emphasis>SocketTimeout<emphasis> </emphasis></emphasis></entry><entry> The time to wait (in seconds) for network activity before timing out. <emphasis>Use with care!</emphasis> If a non-zero value is supplied, this must be greater than the maximum time that the server will take to answer any query. Once the timeout value is exceeded, the network connection will be closed. This parameter may be useful for detecting dead network connections in a pooled environment.(default - <computeroutput>0</computeroutput>) </entry></row>
<row><entry> <emphasis>NamedPipe</emphasis> </entry><entry> When set to true, named pipe communication is used to connect to the database instead of TCP/IP sockets. When the <computeroutput>os.name</computeroutput> system property starts with &#39;<computeroutput>windows</computeroutput>&#39; (case-insensitive), named pipes (both local and remote) are accessed through the Windows filesystem by opening a RandomAccessFile to the path. When the SQL Server and the client are on the same machine, a named pipe will usually have better performance than TCP/IP sockets since the network layer is eliminated. </entry></row>
<row><entry> <emphasis>Ssl </emphasis></entry><entry> Specifies if and how to use SSL for secure communication. (default - <computeroutput>off</computeroutput>)</entry></row>
<row><entry> <emphasis>BatchSize</emphasis> </entry><entry> Controls how many statements are sent to the server in a batch. The actual batch is broken up into pieces this large that are sent separately.(default - 0[unlimited] for SQL Server) </entry></row>
<row><entry> <emphasis>UseCursors</emphasis> </entry><entry> Instructs the driver to use server side cursors instead of direct selects (also known as &quot;firehose cursors&quot;) for forward-only, read-only result sets. (With other types of result sets, server- or client-side cursors are always used.) (default - <computeroutput>false</computeroutput>) </entry></row>
<row><entry> <emphasis>BufferMaxMemory</emphasis> </entry><entry> Controls the global buffer memory limit for all connections (in kilobytes). When the amount of buffered server response packets reaches this limit, additional packets are buffered to disk; there is however one exception: each Statement gets to buffer at least &#39;<computeroutput>[bufferMinPackets]</computeroutput>&#39; to memory before this limit is enforced. This means that this limit can and will usually be exceeded. (default - <computeroutput>1024</computeroutput>) </entry></row>
<row><entry> <emphasis>BufferMinPackets</emphasis> </entry><entry> Controls the minimum number of packets per statement to buffer to memory. Each Statement will buffer at least this many packets before being forced to use a temporary file if the [bufferMaxMemory] is reached, to ensure good performance even when one Statement caches a very large amount of data. (default - <computeroutput>8</computeroutput>) </entry></row>
<row><entry> <emphasis>UseLOBs</emphasis> </entry><entry> Controls whether large types (IMAGE and TEXT/NTEXT) should be mapped to LOBs by default when using getObject(). The default type constant returned is also controlled by this property: Types.BLOB for IMAGE and Types.CLOB for TEXT/NTEXT when true; Types.LONGVARBINARY for IMAGE and Types.LONGVARCHAR for TEXT/NTEXT when false. (default - true) </entry></row>
</tbody></tgroup></table>
 </listitem>
</itemizedlist></listitem>
<listitem> Click continue to proceed to the Options tab.
 This tab contains optional parameters that are not required for basic ODBC connectivity: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseConfig6.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Row Buffer Size</emphasis> - This attribute specifies the number of records to be transported over the network in a single network hop.
 Values can range from 1 to 99.
</listitem>
<listitem> <emphasis>Hide Login Dialog</emphasis> - Suppresses the ODBC &quot;Username&quot; and &quot;Password&quot; login dialog boxes when interacting with your ODBC DSN from within an ODBC compliant application.
</listitem>
<listitem> <emphasis>Read Only connection</emphasis> - Specifies whether the connection is &quot;Read-only.&quot; Make sure the check-box is unchecked to request a &quot;Read/Write&quot; connection.
</listitem>
<listitem> <emphasis>Drop Catalog from Meta calls</emphasis> - Enable this option to have the catalog name not appear for tables, views, and procedures when requesting database meta-data.
</listitem>
<listitem> <emphasis>No support of quoted identifier</emphasis> - If set, the call <computeroutput>SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR)</computeroutput> will return a space (&quot;<computeroutput> </computeroutput>&quot;).
 It can be used if the DBMS doesn&#39;t support quoted SQL like select * from &quot;account.&quot; </listitem>
<listitem> <emphasis>Drop Schema from Meta calls</emphasis> - Enable this option to have the schema-name not appear for tables, views, and procedures when requesting database meta-data.
</listitem>
<listitem> <emphasis>SQLStatistics disabled</emphasis> - Check this box to have <computeroutput>SQLStatistics()</computeroutput> return an empty result set.
 Use this if the underlying database does not support retrieval of statistics about a table (e.g., what indexes it has).
</listitem>
<listitem> <emphasis>No support of search string escape</emphasis> - If set, the call <computeroutput>SQLGetInfo(SQL_LIKE_ESCAPE_CLAUSE)</computeroutput> will return a space (&quot;<computeroutput> </computeroutput>&quot;).
 It can be used if the DBMS doesn&#39;t support SQL escape patterns.
</listitem>
<listitem> <emphasis>Patch of NULL size of SQL_CHAR</emphasis> - If set, this option overrides the size of <computeroutput>SQL_CHAR</computeroutput> column type returned by the database with the value set in the text box (in bytes).
 With a default value of 0, the driver uses the size returned by the database.
</listitem>
<listitem> <emphasis>SQL_DBMS Name</emphasis> - Manually overrides the <computeroutput>SQLGetInfo(SQL_DBMS_NAME)</computeroutput> response returned by the driver.
 This is required for products like Microsoft InfoPath for which the return the value should be &quot;SQL Server&quot;.
</listitem>
</itemizedlist></listitem>
<listitem> Click continue to proceed to the Preferences tab.
 This tab contains optional parameters that are not required for basic ODBC connectivity: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseConfig7.png" /></figure> <itemizedlist mark="bullet" spacing="compact"><listitem> <emphasis>Initialization SQL</emphasis> - Lets you specify a file containing SQL statements that will be run automatically against the database upon connection.
</listitem>
<listitem> <emphasis>Cursor Sensitivity</emphasis> - Enables or disables the row version cache used with dynamic cursors.
 When dynamic cursor sensitivity is set high, the Cursor Library calculates checksums for each row in the current rowset and compares these with the checksums (if any) already stored in the row version cache for the same rows when fetched previously.
 If the checksums differ for a row, the row has been updated since it was last fetched and the row status flag is set to SQL_ROW_UPDATED.
 The row version cache is then updated with the latest checksums for the rowset.
 From the user&#39;s point of view, the only visible difference between the two sensitivity settings is that a row status flag can never be set to SQL_ROW_UPDATED when the cursor sensitivity is low.
 (The row status is instead displayed as SQL_ROW_SUCCESS.) In all other respects, performance aside, the two settings are the same.
 Deleted rows don&#39;t appear in the rowset.
 Updates to the row since the row was last fetched are reflected in the row data, and inserted rows appear in the rowset, if their keys fall within the span of the rowset.
 If your application does not need to detect the row status SQL_ROW_UPDATED, you should leave the &#39;High Cursor Sensitivity&#39; checkbox unchecked, as performance is improved.
 The calculation and comparison of checksums for each row fetched carries an overhead.
 If this option is enabled, the table oplrvc must have been created beforehand using the appropriate script for the target database.
</listitem>
<listitem> <emphasis>Max Rows Override</emphasis> - Allows you to define a limit on the maximum number of rows to be returned from a query.
 The default value of 0 means no limit.
</listitem>
<listitem> <emphasis>Disable Autocommit</emphasis> - Changes the default commit behaviour of the OpenLink driver.
 The default mode is AutoCommit (box unchecked).
</listitem>
<listitem> <emphasis>Disable Rowset Size Limit</emphasis> - Disables a limitation enforced by the cursor library.
 This limitation is enforced by default.
 It prevents the driver from claiming all available memory in the event that a resultset generated from an erroneous query is very large.
 The limit is normally never reached.
</listitem>
<listitem> <emphasis>Defer fetching of long data</emphasis> - Defers fetching of LONG (BINARY, BLOB etc.) data unless explicitly requested in a query.
 This provides significant performance increases when fields in query do not include LONG data fields.
</listitem>
<listitem> <emphasis>Multiple Active Statements Emulation</emphasis> - Enables use of Multiple Active statements in an ODBC application even if the underlying database does not allow this, as it is emulated in the driver.
</listitem>
</itemizedlist></listitem>
<listitem> Click on the &#39;Test Data Source&#39; button to make a connection to the database to verify connectivity: <figure><graphic fileref="InstallSybaseExpressOSX/SybaseConfig8.png" /></figure></listitem>
</orderedlist><para> </para><bridgehead class="http://www.w3.org/1999/xhtml:h2">Next...</bridgehead>
<itemizedlist mark="bullet" spacing="compact"><listitem> <ulink url="TestingMacODBCDSNs">Test your DSNs with our sample program</ulink>. </listitem>
<listitem> If anything isn&#39;t working as you expect, including errors resulting from the test above, <ulink url="UDATroubleshootingResources">see our Troubleshooting Resources</ulink>. </listitem>
<listitem> Should you decide to purchase a commercial license at the end of your evaluation period, be sure to consult our documentation which explains the placement and uptake of commercial license files and the use of our <emphasis>OpenLink License Manager</emphasis> technology: <ulink url="UDALicenseApplication">License Technology &amp; Application</ulink>.</listitem>
</itemizedlist><para> </para></section></docbook>