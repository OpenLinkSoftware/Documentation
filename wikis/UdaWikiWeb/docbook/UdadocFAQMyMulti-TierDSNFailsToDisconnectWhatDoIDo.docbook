<docbook><section><title>UdadocFAQMyMulti-TierDSNFailsToDisconnectWhatDoIDo</title><para> </para><title> doc.FAQ.MyMulti-TierDSNFailsToDisconnectWhatDoIDo</title> doc.FAQ.MyMulti-<ulink url="TierDSNFailsToDisconnectWhatDoIDo">TierDSNFailsToDisconnectWhatDoIDo</ulink>
<para> </para><itemizedlist mark="bullet" spacing="compact"><listitem>Use your database native transaction monitor to see if <ulink url="OpenLink">OpenLink</ulink>  drivers are locked in pending transactions.
 <ulink url="OpenLink">OpenLink</ulink>  drivers cannot disconnect from a database while they are still engaged in transactions.
</listitem>
<listitem>Ensure that your application does not enforce manual commits.
 Use of manual commit may encourage the behavior described above.
</listitem>
<listitem>Check the database native error logs for failures that may contribute to this problem.
</listitem>
<listitem>Create a client-side ODBC trace.
 Examine the trace to ensure that the application sends the proper sequence of SQLFree()s and SQLDisconnect()s to the driver.
</listitem>
<listitem>Perform the following test: </listitem>
<listitem>Recreate the problem.
</listitem>
<listitem>Run oplshut -s on a command line.
</listitem>
<listitem>Observe the number of <ulink url="OpenLink">OpenLink</ulink>  database agent processes.
</listitem>
<listitem>Compare the output of oplshut -s with a Unix ps -ef or Windows Task Manager.
</listitem>
<listitem>Upgrade if oplshut -s or the Windows Task Manager shows more agent processes.
</listitem>
<listitem>Connect to Progress databases in sockets mode.
 A Progress shared memory library bug causes <ulink url="OpenLink">OpenLink</ulink>  &#39;s database agents to linger.
</listitem>
<listitem>Contact <ulink url="OpenLink">OpenLink</ulink>  Product Support, if you use Progress 91C or 91D.
 <ulink url="OpenLink">OpenLink</ulink>  is working to resolve occurrences of lingering agents that are not associated with the shared memory bug.</listitem>
</itemizedlist></section></docbook>