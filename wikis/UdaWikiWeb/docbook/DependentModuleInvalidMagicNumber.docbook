<docbook><section><title>DependentModuleInvalidMagicNumber</title><title> Error Message: Dependent module ___ could not be loaded.
 The module has an invalid magic number.
 </title> Error Message: Dependent module ___ could not be loaded.
 The module has an invalid magic number.
 
<para>&quot;Invalid magic number&quot; errors indicate a &quot;bitness&quot; mismatch -- a 32-bit application trying to load a 64-bit library, or a 64-bit application trying to load a 32-bit library.</para><para>On Mac OS X and most Unix-like OS, you can check the bitness of any file with a simple command -- </para><programlisting>file /path/to/file
</programlisting><para> On 64-bit Windows, 32-bit components are generally installed within the <computeroutput>Programs (x86)</computeroutput> or (counterintuitively) the <computeroutput>SysWow64</computeroutput> directories.
 64-bit components are generally installed within the <computeroutput>Programs</computeroutput> or (counterintuitively) the <computeroutput>System32</computeroutput> directories.</para><para>On a client host (whether Single-Tier or Multi-Tier), the bitness of the client application (e.g., HSODBC, DG4ODBC, Crystal Reports, Microsoft Excel) forces the bitness of the data access driver and/or driver manager.
 On Single-Tier client hosts, the bitness of the client application also mandates the bitness of the DBMS client libraries (e.g., <computeroutput>libesql92.so</computeroutput>, <computeroutput>libifsql.so</computeroutput>).</para><para>On a Multi-Tier Broker host, the bitness of the DBMS client libraries (e.g., <computeroutput>libesql92.so</computeroutput>, <computeroutput>libifsql.so</computeroutput>) forces the bitness of the Request Broker and Database Agent.</para><para>If you have both 32-bit and 64-bit components present, this error can be resolved by ensuring that all executable and shared library path (e.g., <computeroutput>PATH</computeroutput>, <computeroutput>LD_LIBRARY_PATH</computeroutput>, <computeroutput>SHLIB_PATH</computeroutput>, <computeroutput>LIBPATH</computeroutput>) variables are set to target components of the same bitness.</para><para>If you do not have both 32-bit and 64-bit components present, determine the bitness of the &quot;controlling&quot; components, and acquire and/or install the other components to match.
</para></section></docbook>