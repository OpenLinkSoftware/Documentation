---+Polls OAuth REST API Example performed with the Virtuoso OAuth Testing Tool

The following example demonstrates adding and getting poll by the ODS REST APIs *poll.new* and *poll.get* using the OAuth Test Tool. Full list of the ODS REST APIs for ODS Polls you can find [[VirtuosoOdsControllersPolls][here]].

   1. Go to http://demo.openlinksw.com/ods
   1. Log in as user demo with password demo
   1. Go to Settings->OAuth Keys
      * <img src="%ATTACHURLPATH%/o1.png" style="wikiautogen"/>
   1. Copy the Token value for an Polls instance or create such in not existing. For ex.: cb0c9e0335fa088f7c779b0fec826b5a6af120c4
   1. Go to http://demo.openlinksw.com/ods/oauth_test.vsp
   1. In the shown form enter for:
      1. *Server*: http://demo.openlinksw.com/ods/api
      1. *Consumer Key*: cb0c9e0335fa088f7c779b0fec826b5a6af120c4
      1. *API method*: poll.new
      1. *API parameters*: 
<verbatim>
inst_id=61&name=MyPoll
</verbatim>
         * An easy way to get the instance id is using the [[VirtuosoOdsControllers][ODS Framework Controller]]  <b>instance.get.id</b>:
<verbatim>
$ curl -i "http://demo.openlinksw.com/ods/api/instance.get.id?user_name=demo&password_hash=4627dhe23cb53f522eag32e09gs7fceaw2c523449bdfdf&instanceName=mypolls"
HTTP/1.1 200 OK
Server: Virtuoso/06.03.3131 (Linux) x86_64-generic-linux-glibc25-64  VDB
Connection: Keep-Alive
Date: Sun, 05 Feb 2012 21:01:20 GMT
Accept-Ranges: bytes
Content-Type: text/xml; charset="UTF-8"
Content-Length: 58

<result>
  <code>61</code>
  <message>Success</message>
</result>
</verbatim>
         * You can also get the instance id using the [[VirtuosoOdsUbiquity][ODS Ubiquity commands]] sequence:   
<verbatim>
ods-host http://demo.openlinksw.com/ods
ods-set-mode sid
ods-authenticate-user demo password demo
ods-get-instance-id mypolls
</verbatim>
      1. Select for *Query options*: "Generate URI and Submit".
      * <img src="%ATTACHURLPATH%/op1.png" style="wikiautogen"/>
   1. Click the "Execute" button.
   1. Enter the password for user demo and click the "Login" button.
   1. In the shown authorization form click the "Authorize" button.
      * <img src="%ATTACHURLPATH%/op2.png" style="wikiautogen"/>
   1. As result will be shown the generated URI and the output message of executing the ODS REST API. In our case, the id of the new created poll will be: 1012
      * <img src="%ATTACHURLPATH%/op3.png" style="wikiautogen"/>
   1. Now lets get the data for the created poll. In the form enter:
      1. *API method*: poll.get
      1. *API parameters*: poll_id=1012
      1. Select for *Query options*: "Generate URI and Submit".
   1. Click the "Execute" button.
   1. As result in the "Response Body" text-area will be shown the retrieved details for the poll with the given above id.
      * <img src="%ATTACHURLPATH%/op4.png" style="wikiautogen"/>  


---++Related

   * [[VirtuosoOdsControllersPolls][Polls REST Controllers]]
   * [[VirtOAuthTestTool][OAuth Test Tool for ODS Controllers]] - Examples:
      * [[VirtOAuthTestToolExampleBriefcase][ODS Briefcase]]
      * [[VirtOAuthTestToolExampleWeblog][ODS Weblog]]
      * [[VirtOAuthTestToolExampleAddressbook][ODS Addressbook]]
      * [[VirtOAuthTestToolExampleBookmarks][ODS Bookmarks]]
      * [[VirtOAuthTestToolExampleCalendar][ODS Calendar]]
      * [[VirtOAuthTestToolExampleFeeds][ODS Feed Manager]]
   * [[http://virtuoso.openlinksw.com/wiki/main/Main/OAuth][OpenLink's explanation of OAuth]]
   * [[http://virtuoso.openlinksw.com/wiki/main/Main/VirtuosoOAuthServer][Virtuoso OAuth server]]
   * [[VirtOAuthControllers][Using OAuth with ODS]]
   * [[VirtuosoOdsUbiquity][ODS Ubiquity Commands]]
   * [[http://virtuoso.openlinksw.com/wiki/main/Main/VirtOAuth][Virtuoso OAuth Implementation]]
   * [[VirtuosoOdsControllers][ODS Controllers]]      
   * [[VirtODSOAuthQA][Testing Virtuoso OAuth with 3rd Party OAuth Clients]]
   * [[VirtuosoOdsUbiquityTutorialsOAuth][OAuth Ubiquity Tutorial]]
   * [[http://virtuoso.openlinksw.com/wiki/main/Main/VirtOAuthSPARQL][Virtuoso SPARQL OAuth Tutorial]]
   * [[VirtuosoOdsUbiquityTutorials][ODS Ubiquity Tutorials]]
   * [[VirtOAuthExamples][OAuth Applications Authentication examples]]
   * [[http://oauth.net/core/1.0/][OAuth API]]    


CategoryPolls CategoryODS