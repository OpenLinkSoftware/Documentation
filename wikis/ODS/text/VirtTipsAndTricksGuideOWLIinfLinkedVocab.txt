%META:TOPICPARENT{name="VirtTipsAndTricksGuide"}%

---+ How does the power of OWL-based inference enable us to exploit the power of Linked Vocabularies?

Today we have a variety of schema-related efforts aimed at unveiling the Web's Data Space dimension. Examples include:

   * [[http://schema.org/][schema.org]]
   * [[http://dbpedia.org/page/OpenGraph][Facebook Open Graph]]
   * [[http://dbpedia.org/page/FOAF_(ontology)][FOAF]]
   * [[http://dbpedia.org/page/Semantically-Interlinked_Online_Communities][SIOC]]
   * [[http://www.heppnetz.de/projects/goodrelations/][GoodRelations]]
   * [[http://sw.opencyc.org/][OpenCyc]]
   * [[http://dbpedia.org/page/Suggested_Upper_Merged_Ontology][SUMO]]
   * others

In addition, there are cross-vocabulary linkage efforts that include:

   * [[http://dbpedia.org/page/UMBEL][UMBEL]]
   * [[http://schema.rdfs.org/][Schema.rdfs.org]] -- mapping effort that covers [[http://schema.org/][schema.org]], SIOC, [[http://dbpedia.org/page/DBpedia][DBpedia]], and others
   * Our own efforts via link graphs bundled with our [[http://linkeddata.uriburner.com/][URIBurner]], DBpedia, and [[http://lod.openlinksw.com/][LOD Cloud Cache]] instances.

To really understand the net effect of Linked Vocabularies, you need to have a reasoner that can make sense of the mappings at massive scales. The challenge lies in being able to reason at massive scales "on the fly", instead of being confined to materialization of new records, integrated into bulk-ingestion jobs.

Here is a collection of links that show the effects of cross-linking across [[http://schema.org/][schema.org]] and a number of vocabularies from the LOD Cloud:

   1. [[http://goo.gl/VQcEd][Description of Organization class]] that's in an <code>owl:equivalentClass</code> relation with Organization classes in FOAF, Schema.rdfs.org, and Schema.org (no inference context applied, so no reasoning occurs re. consolidation of data across these vocabularies)
   2. [[http://goo.gl/CsDLF][Description of Organization class but with inference context]] applied and reasoning on the data triggered (so you have a consolidation of Organization class data across all the vocabularies in this specific set of <code>owl:equivalentClass</code> relations)
   3. [[http://goo.gl/EUX0k][Offers Class in <code>owl:equivalentClass</code> relation]] with Offer classes from GoodRelations, Schema.org, and Schema.rdfs.org (no inference context applied, so no reasoning)
   4. [[http://goo.gl/6Tp1L][Offers Class in <code>owl:equivalentClass</code> relation]] with Products without inference context
   5. [[http://goo.gl/x1STC][Offers Class in <code>owl:equivalentClass</code> relation]] with inference context applied and reasoning triggered
   6. [[http://goo.gl/KUqAn][BlogPosting Class in <code>owl:equivalentClass</code> relation]] with BlogPosting classes from SIOC, Schema.org, and Schema.rdfs.org (no inference context applied, so no reasoning)
   7. [[http://goo.gl/tCCNJ][BlogPosting Class in <code>owl:equivalentClass</code> relation but with inference context]] applied and reasoning on the data triggered
   8. [[http://goo.gl/zXA3A][Description of a DBpedia Class (LandmarksOrHistoricalBuildings)]] that's in an <code>owl:equivalentClass</code> relation with Classes from Schema.org and Schema.rdfs.org
   9. [[http://goo.gl/HTJYD][Description of a DBpedia Class but with inference context]] and reasoning on data triggered.

Q: What does this all mean?

A: You have multiple Names for equivalent Classes that deliver to you the following effects, without writing a single line of code:

   1. Access to instance data ([[http://dbpedia.org/page/Abox][ABox]]) across all definitions ([[http://dbpedia.org/page/Tbox][TBox]]) via multiple class names
   2. Ability to use Schema.org terms in your HTML docs via Microdata islands with immediate access and integration with DBpedia data and the rest of the LOD cloud
   3. Full effects of "schema last" style late binding when working with Schema.org -- you just get going without schema realm distractions and confusion 

Final comment: Contrary to popular misconceptions, this is all possible because OWL provides a syntax for expressing descriptions logic that delivers the critical foundation for this kind of reasoning. What [[http://virtuoso.openlinksw.com/][OpenLink Virtuoso]] (the Hybrid DBMS behind these demos) adds is the ability to experience this power at massive scales, e.g., against a live instance with 29 Billion+ records (in 3-tuple or EAV/SPO triple form).

---++Related

   * [[VirtTipsAndTricksGuideRDFSchemaOWLInferenceRules][How to exploit RDF Schema and OWL Inference Rules with minimal effort?]]
   * [[http://virtuoso.openlinksw.com/tutorials/sparql/SPARQL_Tutorials_Part_5/SPARQL_Tutorials_Part_5.html][SPARQL Tutorials covering exploitation of inference context via Virtuoso's SPARQL implementation]]
   * [[VirtTipsAndTricksGuide][Virtuoso Tips and Tricks Collection]]
   * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html][Virtuoso Documentation]]