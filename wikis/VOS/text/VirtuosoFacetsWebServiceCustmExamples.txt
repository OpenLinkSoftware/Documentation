%META:TOPICPARENT{name="VirtuosoFacetsWebService"}%

---+Virtuoso Facets Web Service: Examples for customizing different types

%TOC% 

<i><b>Note:</b> In all examples from below the default namespace declaration: 
<code>xmlns="http://openlinksw.com/services/facets/1.0/"</code>, is omitted for brevity.</i>

---++Examples 

---+++For people called Mike
<verbatim>
<query>
  <text>Mike</text>
  <view type="text"/>
</query>
</verbatim>

---+++To open the list of people who Mike knows
<verbatim>
<query>
  <text>Mike</text>
  <view type="properties"/> 
</query>
</verbatim>

---+++To show the list of subjects Mike knows
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <view type="list" />
  </property>
</query>
</verbatim>

---+++To show the properties of people Mike knows 
<verbatim>
<query>
  <text>Mike</text>
  <property iri="[foaf:knows]"> 
    <view type="properties" />
  </property> 
</query>
</verbatim>

---+++To show the names
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <view type="list" />
    </property>
  </property> 
</query>
</verbatim>

---+++To specify one named Joe
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
     <property iri="[foaf:name]">
        <value datatype="string">Joe</value>
     </property>
    <view type="properties" />
  </property> 
</query>
</verbatim>

This lists the properties of the friends of Mike that are called Joe.

---+++To show the Mikes that know a Joe

To show the Mikes that know a Joe, one would change the shown variable in the navigation and get:
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <value datatype="string">Joe</value>
    </property>
   </property> 
   <view type="text" /> 
</query>
</verbatim>

This would be the search summaries of subjects with Mike in some field that know 
a subject with name Joe.

---+++To specify that Mike must be a member of a discussion board
<verbatim>
<query>
  <text>Mike</text>
  <property iri="[foaf:knows]">
    <property iri="[foaf:name]">
     <value datatype="string">Joe</value>
   </property>
  </property> 
  <view type="property-in" /> 
</query>
</verbatim>

This lists the properties of triples whom object is Mike. 

---+++To pick all sioc members
Pick <code>sioc:member_of</code>
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <value datatype="string">Joe</value>
    </property>
  </property> 
  <property-of iri="sioc:member_of"> 
    <view type="list" /> 
  </property-of> 
</query>
</verbatim>

This would show things where Mike is a member. 

---+++To specify that the thing must be a forum
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <value datatype="string">Joe</value>
    </property>
  </property> 
  <property-of iri="sioc:member_of"> 
    <view type="classes" /> 
  </property-of> 
</query>
</verbatim>

This shows classes of things where Mike is a member. 


---+++To specify sioc:Forum
Clicking on <code>sioc:Forum</code> gives:
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <value datatype="string">Joe</value>
    </property>
  </property> 
  <property-of iri="sioc:member_of"> 
    <class iri="sioc:Forum" /> 
    <view type="classes"/>  
  </property-of>  
</query>
</verbatim>

The view stays with classes, but now scoped to the classes of things where Mike is 
a member that are instances of <code>sioc:Forum</code>.


---+++To look at the list of Mikes with the added restriction
To go look at the list of Mikes with the added restriction, click the shown variable 
in the navigation and set it to <code>s1</code>.
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <value datatype="string">Joe</value>
    </property>
  </property> 
  <property-of iri="sioc:member_of"> 
   <class iri="sioc:Forum" /> 
  </property-of> 
  <view type="list"/> 
</query>
</verbatim>

---+++To say that Joe must also have a geekCode
To say that Joe must also have a geekCode, one clicks the shown variable and sets 
it to <code>s2</code> and the view to properties.
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <value datatype="string">Joe</value>
    </property>
    <view type="properties"/>
  </property> 
  <property-of iri="sioc:member_of"> 
    <class iri="sioc:Forum" /> 
   </property-of>  
</query>
</verbatim>

---+++Pick geekCode
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <value datatype="string">Joe</value>
    </property>
    <property iri="geekCode">
      <view type="list"/>
    </property>
  </property> 
  <property-of iri="sioc:member_of">
    <class iri="sioc:Forum" /> 
  </property-of>  
</query>
</verbatim>


---+++To take the focus back to Mike
We specify no restriction on the geekCode. Click the shown variable to take the focus back to Mike.
<verbatim>
<query>
  <text>Mike</text> 
  <property iri="[foaf:knows]"> 
    <property iri="[foaf:name]">
      <value datatype="string">Joe</value>
    </property>
    <property iri="geekCode"></property>
  </property> 
  <property-of iri="sioc:member_of"> 
    <class iri="sioc:Forum" /> 
  </property-of>   
  <view type="text"/> 
</query>
</verbatim>

---+++Looking up property count
<verbatim>
curl -H "Content-Type: text/xml" -d @post.xml  http://lod.openlinksw.com/fct/service
</verbatim>

Where '<code>post.xml</code>' document contains query document:
<verbatim>
<?xml version="1.0"?>
<query>
  <text>Mike</text>
  <property iri="[foaf:knows]">
    <view type="list-count" limit="20" />
  </property>
</query>
</verbatim>

Produces the [[VirtuosoFacetsWebServiceCustmExamplesEx1][following response]].

---+++Looking up instances of a class
<verbatim>
curl -H "Content-Type: text/xml" -d @post.xml  http://lod.openlinksw.com/fct/service
</verbatim>

Where '<code>post.xml</code>' document contains query document:
<verbatim>
<?xml version="1.0"?>
<query>
  <text>Mike</text>
  <class iri="[foaf:Person]"/>
  <view type="list" limit="10" />
</query>
</verbatim>

Produces the [[VirtuosoFacetsWebServiceCustmExamplesEx2][following response]].



<i><b>Note:</b> If the entire &lt;text&gt; element is missing, the FCT service will not 
add a <code>bif:contains</code> to the triple pattern. Thus it is possible to search for 
some property or class, etc. For example: </i>
<verbatim>
<query>
  <property iri="[foaf:knows]">
    <view type="properties" limit="20" offset="0"/>
  </property>
</query>
</verbatim>

<i>is executed as:</i>
<verbatim>
SELECT  ?s2p AS ?c1 
        COUNT (*) AS ?c2  
WHERE
   { 
     ?s1  <http://xmlns.com/foaf/0.1/knows>  ?s2  . 
     ?s2  ?s2p  ?s2o  . 
   } 
GROUP BY ?s2p 
ORDER BY DESC 2 
LIMIT 20
</verbatim>


---++Related 

   * Facets Web Service:
      * [[VirtuosoFacetsWebService][Virtuoso Facets Web Service]]
   * Linked Data:   
      * [[VirtuosoFacetsViewsLinkedData][Faceted Views over Large-Scale Linked Data]]   
   * Facet Browser Installation and configuration:   
      * [[VirtFacetBrowserInstallConfig][Virtuoso Facet Browser Installation and configuration]]   
   * Facet APIs:
      * [[VirtFacetBrowserAPIs][Virtuoso APIs for FCT REST services]]
      * [[VirtFacetBrowserAPIsFCTEXEC][<code><nowiki>fct_exec</nowiki></code> API Example]]                   
   * Pivot Viewer and CXML:         
      * [[http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtSparqlCxmlFacetPivotBridge#AncSparqlCxmlFacetPivotBridge][Facet Pivot Bridge -  A bridge to PivotViewer from Virtuoso's Faceted query service for RDF]]      
      * [[http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtSparqlCxml#AncFacetTypeAutoDetection][Auto-Detection of Facet Type]]
   * Tutorials:
      * [[VirtuosoLODSampleTutorial][Faceted Browsing Sample using LOD Cloud Cache data space]]         
      * [[VirtuosoFacetsWebServiceSOAPExample][SOAP Facets Example]]   
      * [[VirtFacetBrowserInstallConfigQueried][Querying The Facet Browser Web Service endpoint]]  
      * [[http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtVisualizeWithPivotViewer#GenFCT][Visualizing Your Data With PivotViewer Using The Facet Browser]]       
      * [[VirtTipsAndTricksCustomControlLabelsURI][Custom Controlling Virtuoso Labels for URI functionality Example]]
      * [[VirtuosoFacetsWebServiceChoiceExample][Facets Web Service: Choice of Labels Example]]      
   * Downloads:   
      * [[http://shop.openlinksw.com/license_generator/virtuoso-download/][Latest Virtuoso]]
      * [[https://virtuoso.openlinksw.com/download/][Virtuoso Facet Browser VAD package]]
