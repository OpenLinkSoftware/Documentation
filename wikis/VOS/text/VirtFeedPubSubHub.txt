%META:TOPICPARENT{name="VirtPubSubHub"}%

---+ Feed subscription via PubSubHub Protocol

The following demonstrates how the PubSubHub (PSH) Protocol can be used to make push subscription to an Atom or RSS feed.

Before performing any of these steps, read about the [[VirtPubSubHub][Virtuoso PubSubHub implementation]], and make sure <code>pubsubhub_dav.vad</code> is installed.

---++ Example Steps

   1 Initially we create a blog instance and do some posts.
%BR%%BR%<img src="%ATTACHURLPATH%/step1.png" style="wikiautogen"/>%BR%%BR%
   1 Next we subscribe using PSH generic client subscription UI: 
%BR%%BR%<img src="%ATTACHURLPATH%/step2.png" style="wikiautogen"/>%BR%%BR%
   1 If subscription succeeds, we should see a Success message; otherwise, a trace for the error.
%BR%%BR%<img src="%ATTACHURLPATH%/step3.png" style="wikiautogen"/>%BR%%BR%
   1 In Feed Manager UI, we register the feed in order to see its content.  
%BR%%BR%<img src="%ATTACHURLPATH%/step4.png" style="wikiautogen"/>%BR%%BR%
   1 Then we add one new post to the blog:
%BR%%BR%<img src="%ATTACHURLPATH%/step5.png" style="wikiautogen"/>%BR%%BR%
   1 Using generic publish client UI, we tell PSH there are changes; if all publishing is done we should see success message:
%BR%%BR%<img src="%ATTACHURLPATH%/step6.png" style="wikiautogen"/>%BR%%BR%
   1 We check the feed subscription using feed manager, which in our case is used to display the feed. Now we can see new post is pushed into the subscription. 
%BR%%BR%<img src="%ATTACHURLPATH%/step7.png" style="wikiautogen"/>%BR%%BR%

---++ Conclusion

   * ODS-Feed Manager has an option to subscribe to push notifications using PSH protocol. Thus when subscribing it could subscribe to Hub. To know that it should inspect feed to see &lt;link rel="hub" href="..." . For demo purposes, this has been divided into two separate steps. 
   * If ODS-Weblog knows there is a hub configured, it can present a link by which the hub can be accessed for push subscription 
   * ODS-Weblog changes to publish to hub automatically. Publishing is shown here as two separate steps for purposes of explanation of the protocol.


---++Related

   * [[VirtODSPubSubHub][Setting up PubSubHub in ODS]]
   * [[VirtPubSubHub][PubSubHubBub Demo Client Example]]
   * [[VirtPubSubHubACL][Setting Up PubSubHub to use WebID Protocol or IP based control lists]]
   * [[http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtSPARQLSSL][Creating and Using a SPARQL-SSL based Endpoint]]
   * [[http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtAuthServerUI][Set WebID Protocol ACLs using the Virtuoso Authentication Server UI]]
   * [[http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtAuthFOAFSSLACL][WebID Protocol ACLs Tutorial]]
   * [[http://virtuoso.openlinksw.com/dataspace/dav/wiki/Main/VirtOAuthSPARQL][SPARQL OAuth Tutorial]]
   * [[VirtODSFOAFSSL][WebID Protocol Support in OpenLink Data Spaces]]
   * [[ODSPkiSetup][Guide to Setting up a X.509 certificate issuer and HTTPS listener and Generating ODS user certificates]]
   * [[OdsKeyImport][CA Keys Import using Conductor]]
   * [[ODSGenerateX509Certificate][Generate an X.509 Certificate hosted WebID Guide]]
   * [[ODSBriefcaseFOAFSSLShareFile][ODS Briefcase WebID Protocol Share File Guide]]
   * [[http://esw.w3.org/topic/foaf+ssl][WebID Protocol Specification]]
   * [[https://foaf.me/simpleLogin.php][Test WebID Protocol Certificate page]]
   * [[http://test.foafssl.org/cert/][WebID Protocol Certificate Generation page]]
   * [[https://demo.openlinksw.com/sparql-ssl][Virtuoso Demo SPARQL-SSL Endpoint]]