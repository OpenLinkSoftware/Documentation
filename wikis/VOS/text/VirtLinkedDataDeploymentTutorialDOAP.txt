%VOSWARNING%
---+ Linked Data Deployment DOAP Tutorial

The following tutorial demonstrates deployment of DOAP files as Linked Data. 

%TOC%

---++ Prerequisites

In order to be able to produce the steps below, you need to have at least the following packages installed:
   * ODS &#8212; <code><nowiki>ods_framework_dav</nowiki>.vad</code> 
   * Briefcase &#8212; <code><nowiki>ods_briefcase</nowiki>.vad</code>
   * Conductor &#8212; <code><nowiki>conductor_dav</nowiki>.vad</code>

---++  Tutorial

   1. Go to ODS, i.e., http://host:port/ods and register user, for ex. john.
   1. Login as user john and go to ODS->Briefcase 
   1. Create new instance with checked box "Visible to Public".
   1. Browse path <code>DAV/home/john</code>.
   1. As result there will be shown a new created by the system folder "Public". Place in this 
folder your DOAP files. For ex. place the attached to this article 
<a href="%ATTACHURLPATH%/doap_iODBC.rdf" style="wikiautogen">doap_iODBC.rdf</a>, 
<a href="%ATTACHURLPATH%/doap_odbc-OAT.rdf" style="wikiautogen">doap_OAT.rdf</a>, 
<a href="%ATTACHURLPATH%/doap_odbc-bench.rdf" style="wikiautogen">doap_odbc-bench.rdf</a>, 
<a href="%ATTACHURLPATH%/doap_odbc-rails.rdf" style="wikiautogen">doap_odbc-rails.rdf</a>, 
<a href="%ATTACHURLPATH%/doap_ODS.rdf" style="wikiautogen">doap_ODS.rdf</a>, 
<a href="%ATTACHURLPATH%/doap_VOS.rdf" style="wikiautogen">doap_VOS.rdf</a> files.
   1. Upload to the <code>DAV/home/john/Public</code> folder also <code>.ttl</code>, 
<code>.nt</code> and <code>.rdf</code> files for ex. such as: 
<a href="%ATTACHURLPATH%/open_source_projects.nt" style="wikiautogen">open_source_projects.nt</a>, 
<a href="%ATTACHURLPATH%/open_source_projects.ttl" style="wikiautogen">open_source_projects.ttl</a>, 
<a href="%ATTACHURLPATH%/open_source_projects.rdf" style="wikiautogen">open_source_projects.rdf</a>
   1. Now go to path <code>/DAV/home/john/rdf_sink</code> and click the "Upload" button.
   1. In the shown form perform the following:
      1. Select for "Destination" the "RDF Store" check-box
      1. Enter for "RDF graph name" your graph name, for ex. http://myhost.com/doap. 
      1. For "Source": "File" click the "Browse" button and upload either a DOAP file (if you 
do this, you need to perform the same upload steps for every DOAP file), or upload one rdf file, 
which contain information for all your DOAP files. In our tutorial such file is the 
<a href="%ATTACHURLPATH%/open_source_projects.rdf" style="wikiautogen">open_source_projects.rdf</a> 
one.
   1. As result there will be created a graph with inserted triples the information retrieved 
from the uploaded rdf file(s).
      * For reference how the rdf_sink folder works, please visit our article 
[[../ODS/ODSRDFSinkFolder][ODS RDF Sink Folder Implementation]]
      * Also you can take a look to our article 
[[VirtuosoRDFSinkFolder][Virtuoso RDF Sink Folder Implementation]]
      * Full information you can find at [[VirtRDFInsert][RDF Insert Methods in Virtuoso]] article.
   1. Let's check the data in the graph &lt;http://myhost.com/doap>:
      1. Go to the Virtuoso sparql endpoint, i.e. to http://host:port/sparql.
      1. Enter for Default Graph URI your graph, for ex.http://myhost.com/doap
      1. Enter for Query:
<verbatim>
SELECT *
WHERE {?s ?p ?o}
</verbatim>
      1. Click the "Run Query" button.
      1. As result should be shown the saved triples, for ex.:
<verbatim>
s                                            p                                                 o
http://myhost.com/DOAP/odbc-rails.rdf#this   http://www.w3.org/1999/02/22-rdf-syntax-ns#type   http://usefulinc.com/ns/doap#Project
http://myhost.com/DOAP/odbc-rails.rdf#this   http://www.w3.org/2000/01/rdf-schema#seeAlso      http://data.openlinksw.com/oplweb/product_family/uda#this
http://myhost.com/DOAP/odbc-rails.rdf#this   http://xmlns.com/foaf/0.1/maker                   http://myhost.com/dataspace/organization/john#this
http://myhost.com/DOAP/odbc-rails.rdf#this   http://usefulinc.com/ns/doap#created              2006-08-23
http://myhost.com/DOAP/odbc-rails.rdf#this   http://usefulinc.com/ns/doap#license              http://usefulinc.com/doap/licenses/mit
http://myhost.com/DOAP/odbc-rails.rdf#this   http://usefulinc.com/ns/doap#name                 ODBC Data Adapter for Ruby on Rails
http://myhost.com/DOAP/odbc-rails.rdf#this   http://usefulinc.com/ns/doap#homepage             http://rubyforge.org/projects/odbc-rails/
...
</verbatim>
   1. You can also execute from ISQL DESCRIBE over the Project rdf:about values, in order 
to check that all the data in the graph is correct:
<verbatim>
SQL> SPARQL DESCRIBE <http://myhost.com/DOAP/iodbc.rdf#this> FROM <http://myhost.com/doap>;
callret-0
LONG VARCHAR
_______________________________________________________________________________

<http://myhost.com/DOAP/iodbc.rdf#this> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://usefulinc.com/ns/doap#Project> ;
        <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://data.openlinksw.com/oplweb/product_family/uda#this> ;
        <http://xmlns.com/foaf/0.1/maker> <http://myhost.com/dataspace/organization/john#this> ;
        <http://usefulinc.com/ns/doap#created> "1998-12-27" ;
        <http://usefulinc.com/ns/doap#license> <http://usefulinc.com/doap/licenses/lgpl> ;
        <http://usefulinc.com/ns/doap#name> "iODBC" ;
        <http://usefulinc.com/ns/doap#homepage> <http://www.iodbc.org/> ;
        <http://usefulinc.com/ns/doap#shortdesc> "iODBC is the acronym for Independent Open DataBase Connectivity, an Open-Source platform-independent implementation of both the ODBC and X/Open specifications." ;
        <http://usefulinc.com/ns/doap#description> "The ability to develop applications independent of back-end database engine, operating system, and for the most part programming language. Although ODBC and iODBC are both C-based Application Programming Interfaces (APIs) there are numerous cross language hooks and bridges from languages such as: C++, Java, Perl, PHP, Python, Ruby, TCL, and others." ;
        <http://usefulinc.com/ns/doap#mailing-list> <http://www.iodbc.org/index.php?page=maillists> ;
        <http://usefulinc.com/ns/doap#download-page> <http://www.iodbc.org/index.php?page=downloads/index> ;
        <http://usefulinc.com/ns/doap#programming-language> "C" ;
        <http://usefulinc.com/ns/doap#category> <http://projects.apache.org/category/database> ;
        <http://usefulinc.com/ns/doap#release> _:b1000057228 ;
        <http://usefulinc.com/ns/doap#maintainer> _:b1000057229 .
</verbatim>
   1. Now go to Virtuoso Conductor, i.e. http://host:port/conductor and login as dba.
   1. Go to WebDAV&HTTP->HTTP Hosts&Directories   
   1. Define a new Host in the form shown at the bottom, i.e.:
      1. Enter the Interface address in the first field where is shown the value 0.0.0.0
      1. Enter the port in the second field
      1. Enter the HTTP host name, for ex. myhost.com
      1. Click the button "Add".
%BR%%BR%<img src="%ATTACHURLPATH%/url1.png" style="wikiautogen"/>%BR%%BR%
   1. Click the blue folder icon infront of the created host.
   1. As result will be shown for "Logical Path": /. Click its "Edit" link
%BR%%BR%<img src="%ATTACHURLPATH%/url2.png" style="wikiautogen"/>%BR%%BR%
   1. In the shown form:
      1. Check the check-box "Default directory"
      1. Check the check-box "Physical path is a WebDAV repository".
      1. Enter for field "Physical path" an existing location of your default host, for ex. /DAV/mysite/
         * if there is no such folder mysite:
            1. Go WebDAV Content Management and create under dav folder with name "mysite".
            2. Go to folder "mysite"
            3. Upload a default index file which contain rel links to the DOAP files, for ex, 
the following index.htm file:
<verbatim>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
<title>My Site</title> 

<link rel="meta" title="DOAP" href="projects/doap_OAT.rdf"
      type="application/rdf+xml" />
<link rel="meta" title="DOAP" href="projects/doap_ODS.rdf"
      type="application/rdf+xml" />
<link rel="meta" title="DOAP" href="projects/doap_VOS.rdf"
      type="application/rdf+xml" />
<link rel="meta" title="DOAP" href="projects/doap_iODBC.rdf"
      type="application/rdf+xml" />
<link rel="meta" title="DOAP" href="projects/doap_odbc-bench.rdf"
      type="application/rdf+xml" />
<link rel="meta" title="DOAP" href="projects/doap_odbc-rails.rdf"
      type="application/rdf+xml" />
<link rel="meta" title="DOAP" href="projects/open_source_projects.rdf"
      type="application/rdf+xml" />
<link rel="meta" title="DOAP" href="projects/open_source_projects.nt"
      type="text/rdf+n3" />
<link rel="meta" title="DOAP" href="projects/open_source_projects.ttl"
      type="text/rdf+ttl" />
</head>

<body>
Some text here...
</body>
</html>
</verbatim>
      1. Enter for "Default page": index.htm
      1. Check the check-box "Override exec permission flag in WebDAV"
      1. Change "VSP User" to: dba
      1. Click the button "Save changes".
%BR%%BR%<img src="%ATTACHURLPATH%/url3.png" style="wikiautogen"/>%BR%%BR%
   1. Now let's create a new virtual directory:
      1. Click the "New Directory" link for the host with name "myhost.com".
      1. In the shown form select type "WebDAV domain" and click "Next".
%BR%%BR%<img src="%ATTACHURLPATH%/url4.png" style="wikiautogen"/>%BR%%BR%
      1. In the shown form:
         1. Enter for "Path": /DOAP     
         1. Enter for "Physical path" the location of the DOAP files, i.e. /DAV/home/john/Public/DOAP/ 
         1. Check the check-box "Allow Directory Browsing".
         1. Click the "Save Changes" button.
%BR%%BR%<img src="%ATTACHURLPATH%/url5.png" style="wikiautogen"/>%BR%%BR%
   1. Let's add a URL rewrite rule to the created virtual directory:
      1. For the virtual directory "/DOAP" click the link "URL-rewrite".
      1. In the shown form:
         1. Change "Rule matching" to: Last matching
         1. Enter for "Request Path pattern": 
<verbatim>
/DOAP/([^#]*)
</verbatim>
         1. Enter for "Accept Header Request pattern": 
<verbatim>
(application/rdf.xml)|(text/rdf.n3)|(text/rdf.turtle)|(text/rdf.ttl)
</verbatim>
         1. Leave "Destination format Conversion function" and "HTTP Response Headers" empty.
         1. Change "HTTP Response Code" to: Internal Redirect.
%BR%%BR%<img src="%ATTACHURLPATH%/url6.png" style="wikiautogen"/>%BR%%BR%
         1. For "Destination Path format" click the "SPARQL" button.
         1. Enter in the "SPARQL Query" text-area the following:
<verbatim>
DESCRIBE <http://myhost.com/DOAP/$s1#this> FROM <http://myhost.com/doap>
</verbatim>
%BR%%BR%<img src="%ATTACHURLPATH%/url7.png" style="wikiautogen"/>%BR%%BR%
         1. Click the button "Format".
%BR%%BR%<img src="%ATTACHURLPATH%/url8.png" style="wikiautogen"/>%BR%%BR%
         1. Click the button "Add".
%BR%%BR%<img src="%ATTACHURLPATH%/url9.png" style="wikiautogen"/>%BR%%BR%
   1. Now let's check with the Virtuoso RDF Browser the data retrieved from the DOAP files:
      1. Go to http://demo.openlinksw.com/DAV/JS/rdfbrowser/index.html
      1. Checking the OAT DOAP file:
         1. Enter for Data Source URI: http://myhost.com/projects/doap_OAT.rdf
         1. Click the "Query" button".
         1. As result should be retrieved 23 triples. Click the "Project" OAT link in order to 
expand the rest of the triples.
      1. Checking the ODS DOAP file:
         1. Enter for Data Source URI: http://myhost.com/projects/doap_ODS.rdf
         1. Click the "Query" button".
         1. As result should be retrieved 31 triples. Click the "Project" "OpenLink Data Spaces 
(ODS - Open Source Edition)" link in order to expand the rest of the triples.
      1. Check the rest of the DOAP files from http://myhost.com/projects/
      1. You can also retrieve information for all the files querying the 
<code><nowiki>open_source_projects</nowiki>.rdf</code> for ex.      

---++ References

   * [[../ODS/ODSRDFSinkFolder][ODS RDF Sink Folder Implementation]]
   * [[VirtuosoRDFSinkFolder][Virtuoso RDF Sink Folder Implementation]]
   * [[VirtRDFInsert][RDF Insert Methods in Virtuoso]]
   * [[VirtLinkedDataDeployment][Virtuoso Linked Data Deployment]]
   * [[VirtuosoUrlRewriting][Virtuoso URL Rewriting]]
   * [[VirtuosoContentNegotiation][Transparent Content Negotiation in HTTP server]]

CategoryVirtuoso CategoryDOAP