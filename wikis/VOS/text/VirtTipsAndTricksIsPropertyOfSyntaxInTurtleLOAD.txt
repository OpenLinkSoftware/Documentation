%META:TOPICPARENT{name="VirtTipsAndTricksIsPropertyOfSyntaxInTurtle"}%

---+ Load Turtle Example Resource using SPARQL 1.1 LOAD FEATURE

%TOC% 

The following example demonstrates how to retrieve triples from remote Turtle resource using the SPARQL 1.1. LOAD Feature.

---+++Prerequisites

The following packages should be installed:

   1 [[https://virtuoso.openlinksw.com/download/][conductor_dav.vad]] package. 
   1 [[https://virtuoso.openlinksw.com/download/][ods_framework_dav.vad]] package. 
   1 [[https://virtuoso.openlinksw.com/download/][cartridges_dav.vad]] package. 

---+++Steps

   1 Assume the following [[https://s3.amazonaws.com/webid-sandbox/Enhanced-Turtle-Example.ttl][https://s3.amazonaws.com/webid-sandbox/Enhanced-Turtle-Example.ttl]] public turtle resource.
   1 [[http://ods.openlinksw.com/dataspace/dav/wiki/ODS/ODSGenerateX509Certificate][Generate an X.509 Certificate hosted WebID]].
   1 [[VirtSPARQLSSL][Create SPARQL-WebID based Endpoint]]. 
   1 Go to http://&lt;cname>:&lt;port>/conductor, where &lt;cname>:&lt;port> are replaced by your local server values. 
   1 Log in as user "dba" or another user with DBA privileges 
   1 Go to Linked Data -> Access Controls -> SPARQL-WebID :
%BR%%BR%<a href="%ATTACHURLPATH%/auth1.png" target="_blank"><img src="%ATTACHURLPATH%/auth1.png" width="600px" /></a>%BR%%BR%
   1 In the shown form: 
      1 Enter for Web ID for ex.: 
<verbatim>
http://id.myopenlink.net/dataspace/person/demo#this
</verbatim>
      1 Select "SPARQL Role": "UPDATE". 
      1 Leave "Use existing User account:" to "none" so to be created a new SQL User associated with the new WebID ACL:
%BR%%BR%<a href="%ATTACHURLPATH%/auth2.png" target="_blank"><img src="%ATTACHURLPATH%/auth2.png" width="600px" /></a>%BR%%BR%
   1 Click the "Register" button. 
   1 As result the WebID Protocol ACL will be created and will be associated with the new create SQL Account <b>SPUID1</b>:
%BR%%BR%<a href="%ATTACHURLPATH%/auth3.png" target="_blank"><img src="%ATTACHURLPATH%/auth3.png" width="600px" /></a>%BR%%BR%
   1 Go to the SPARQL+WebID endpoint https://&lt;cname>:&lt;port>/sparql-webid 
   1 When challenged for authentication select the user's certificate generated from above:
%BR%%BR%<a href="%ATTACHURLPATH%/auth4.png" target="_blank"><img src="%ATTACHURLPATH%/auth4.png" width="600px" /></a>%BR%%BR%
   1 The protected SPARQL-WebID Endpoint UI should be presented:
%BR%%BR%<a href="%ATTACHURLPATH%/auth5.png" target="_blank"><img src="%ATTACHURLPATH%/auth5.png" width="600px" /></a>%BR%%BR%
   1 To verify the Logged In Identity, execute the following query:
<verbatim>
select (bif:get_user()) {}
</verbatim>
%BR%%BR%<a href="%ATTACHURLPATH%/auth6.png" target="_blank"><img src="%ATTACHURLPATH%/auth6.png" width="600px" /></a>%BR%%BR%
%BR%%BR%<a href="%ATTACHURLPATH%/auth7.png" target="_blank"><img src="%ATTACHURLPATH%/auth7.png" width="600px" /></a>%BR%%BR%
   1 Click back and in order to load triples from our remote example resource, execute the following statement:
<verbatim>
load <https://s3.amazonaws.com/webid-sandbox/Enhanced-Turtle-Example.ttl>
</verbatim>
%BR%%BR%<a href="%ATTACHURLPATH%/auth8.png" target="_blank"><img src="%ATTACHURLPATH%/auth8.png" width="600px" /></a>%BR%%BR%
%BR%%BR%<a href="%ATTACHURLPATH%/auth9.png" target="_blank"><img src="%ATTACHURLPATH%/auth9.png" width="600px" /></a>%BR%%BR%
   1 Check the inserted triples by executing the following query:
<verbatim>
SELECT * 
FROM <https://s3.amazonaws.com/webid-sandbox/Enhanced-Turtle-Example.ttl> 
WHERE 
  {
    ?s ?p ?o 
  } 
</verbatim>
%BR%%BR%<a href="%ATTACHURLPATH%/auth10.png" target="_blank"><img src="%ATTACHURLPATH%/auth10.png" width="600px" /></a>%BR%%BR%
%BR%%BR%<a href="%ATTACHURLPATH%/auth11.png" target="_blank"><img src="%ATTACHURLPATH%/auth11.png" width="600px" /></a>%BR%%BR%


---+++Related

   * See extended [[VirtRDFGraphsSecurity][fine-grained scenarios]] using RDF GRAPH Security.
   * Load Turtle resource(s) using:
      * [[VirtTipsAndTricksIsPropertyOfSyntaxInTurtleConductor][Conductor]];
      * [[VirtTipsAndTricksIsPropertyOfSyntaxInTurtleSponger][Sponger]];
      * [[VirtTipsAndTricksIsPropertyOfSyntaxInTurtleCMD][Command Line Turtle Loader]];   
   * [[VirtTipsAndTricksIsPropertyOfSyntaxInTurtle][Using {is property of} for inverse relations in Turtle]]
   * [[VirtTipsAndTricksGuide][Virtuoso Tips and Tricks Collection]]
   * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html][Virtuoso Documentation]]