%VOSWARNING%


%META:TOPICPARENT{name="VirtAdoNet35Provider"}%

---+  Using Microsoft Entity Frameworks to Access Informix Schema Objects with Virtuoso

This document details the steps required to provide Microsoft Entity Framework access to Informix Schema Objects using the <nop>OpenLink Virtuoso Universal Server. This is achieved by linking the required Informix Schema objects into Virtuoso using its built-in Virtual Database engine and then using the Virtuoso ADO.NET Entity Framework provider to query the remote Informix Schema objects linked into the Virtuoso Server.

%TOC%

---++ Prerequisites

The following must be in place to complete this exercise.

   1 <b>Microsoft Visual Studio 2008 SP1 (or later)</b>%BR%
Microsoft Visual Studio 2008 Service Pack 1 (or later) is required, as previous versions do not include the necessary Entity Framework support.%BR%%BR%
   1 <b>Virtuoso ADO.NET Entity Framework Provider, v5.10 or later</b>%BR%
The ADO.NET Entity Framework Provider must be installed on the Visual Studio development and deployment host(s). Version 5.10.x or later is required, as previous versions do not include the necessary Entity Frameworks support.%BR%%BR%
   1 <b>Virtuoso Universal Server, v5.10 or later</b>%BR%
Virtuoso Universal Server Release 5.10 or later is required, as previous versions do not include the necessary Entity Frameworks support.  This may be on any host which is TCP/IP accessible from the Visual Studio development and deployment host(s).%BR%%BR%
   1 <b>ODBC Driver for Informix</b>%BR%
The Virtuoso Server uses an ODBC Driver for Informix to link in the Informix Schema Objects. The <b><nop>OpenLink Single-Tier ODBC Driver for Informix</b> will be used in this document, and a functional ODBC Data Source Name (DSN) of "<code>inf10ma</code>" will be assumed to exist on the machine hosting the Virtuoso Server.  Any ODBC compliant driver for Informix should work.%BR%%BR%
   1 <b>Informix DBMS</b>%BR%
An Informix DBMS hosting the required Schema Objects needs to be available. This may be on any host which is TCP/IP accessible from the Virtuoso Server host. In this document, the Informix <b>stores_demo</b> database will be used to demonstrate the process.%BR%%BR%


---++ Tasks

   1 <b>Ensure Informix Primary Keys (PKs) are not nullable</b>%BR%
The Visual Studio 2008 Entity Data Model (EDM) requires that all primary keys are  *NOT* Nullable, and will fail to generate an EDM if any are. Therefore, ensure any tables to be used are defined as not nullable in the Informix database schema before attempting to generate an EDM. In the case of the Informix stores_demo database, many tables have primary keys that *are* nullable, so these will need to be redeclared.%BR%%BR%This is possible using <b>dbaccess</b>. However, care needs to be taken, particularly with the following cases, where the additional primary and foreign key constraints that are removed will have to be manually recreated &mdash;%BR%%BR%
      * Amending a PK field to be not nullable can result in the primary key constraint being removed.
      * When a primary key is referenced by a foreign key constraint, amending the PK field to be not nullable results in the foreign key constraint being removed.%BR%%BR%
   1 <b>[[http://wikis.openlinksw.com/dataspace/owiki/wiki/UdaWikiWeb/InstallConfigODBC][Install and configure the <nop>OpenLink ODBC Driver for Informix]]</b>%BR%%BR%
   1 <b>[[VirtADOClientServInstall][Install and configure <nop>OpenLink Virtuoso Universal Server]]%BR%%BR%
   1 <b>[[VirtINFLinkingObjects][Link Informix tables and other schema objects into OpenLink Virtuoso]]%BR%%BR%
   1 <b>[[VirtINFEDM][Create a Visual Studio-hosted Entity Data Model (EDM)]]%BR%%BR%
   1 <b>[[VirtEntityFrameworkINFDatService][Use the EDM to create an Entity Frameworks-based ADO.NET Data Service]]%BR%%BR%
   1 <b>[[VirtInformixVisualStudioDataGridFormsApp][Use the EDM to create an Entity Frameworks-based Windows DataGrid Form Application]]%BR%

 

CategoryDocumentation CategoryVirtuoso CategoryEntityFrameworks CategoryDotNET CategoryInformix
