%META:TOPICPARENT{name="VirtTipsAndTricksGuide"}%

---+ How to exploit RDF Schema and OWL Inference Rules with minimal effort?

When you install Virtuoso, its highly scalable reasoning and inference capabilities may not be obvious. 

Typical cases involve using <code>rdfs:subClassOf</code> predicates in queries, and wondering why reasoning hasn't occurred in line with the semantics defined in [[http://www.w3.org/TR/rdf-schema/][RDF Schema]].  The same can occur when using more sophisticated [[http://www.w3.org/TR/owl-overview/][OWL]] predicates such as <code>owl:equivalentProperty</code>, <code>owl:equivalentClass</code>, <code>owl:sameAs</code>, <code>owl:<nop>SymmetricalProperty</code>, <code>owl:inverseOf</code>, etc.

Virtuoso's inference rule processing is implemented in a loosely coupled manner, allowing users to conditionally apply inference context (via rules) to SPARQL queries. 

These rules must generally be created as described [[http://docs.openlinksw.com/virtuoso/rdfsparqlrule.html#rdfsparqlrulemake][in the product docs]].

The [[VirtFacetBrowserInstallConfig][Virtuoso Faceted Browser VAD package]] delivers a shortcut to setting up and exploring RDF Schema and OWL reasoning.


---++ Related

   * [[VirtTipsAndTricksGuideOWLIinfLinkedVocab][How the power of OWL based inference enables us exploit the power of Linked Vocabularies?]]
   * [[http://docs.openlinksw.com/virtuoso/rdfsparqlrule.html][Virtuoso Documentation on Inference Rules & Reasoning]]
   * [[VirtFacetBrowserInstallConfig][Installation and Configuration of the Virtuoso Faceted Browser VAD package]]
   * [[VirtuosoFacetsWebService][Virtuoso Facets Web Service]]