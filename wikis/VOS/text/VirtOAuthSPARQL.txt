%META:TOPICPARENT{name="VirtSPARQLEndpointProtection"}%

---+ Securing your SPARQL Endpoint via OAuth 

SPARQL endpoints are easy for random visitors to accidentally overload.  Virtuoso allows you to secure your SPARQL endpoint against such abuses in various ways, including OAuth.

---++Sample scenario

The following sample scenario demonstrates the OAuth keys and Protected SPARQL Endpoint features of the Virtuoso Auth UI:

   1. Download and install the <b>Conductor (<code><nowiki>conductor_dav.vad</nowiki></code>)</b> and <b>ODS Framework (<code><nowiki>ods_framework_dav.vad</nowiki></code>)</b> VAD packages from the relevant area for your version and Edition of Virtuoso:
      * <a href="https://shop.openlinksw.com/license_generator/vad/">for Enterprise Edition (latest version only)</a>
      * <a href="http://download3.openlinksw.com/index.html?prefix=uda/vad-packages/">for any version of Enterprise Edition</a>
      * <a href="http://download3.openlinksw.com/index.html?prefix=uda/vad-vos-packages/">for Open Source Edition v7.1 or v7.2</a> (VADs for other Open Source versions must be built <a href="https://github.com/openlink/virtuoso-opensource/">from source</a>)
   1. Go to <b><code><nowiki>http://&lt;cname&gt;:&lt;port&gt;/conductor</nowiki></code></b>, 
where <code>&lt;cname&gt;:&lt;port&gt;</code> are replaced by your local server values.
   1. Log in as user "<b><code>dba</code></b>" or another user with DBA privileges
   1. Go to System Admin-> User Accounts:
%BR%%BR%<img src="%ATTACHURLPATH%/so1.png" style="wikiautogen"/>%BR%%BR%
   1 Click "Create New Account":
%BR%%BR%<img src="%ATTACHURLPATH%/so2.png" style="wikiautogen"/>%BR%%BR%
   1 In the presented form enter respectively:
      * Account name, for ex:<code><b>demo1</b></code>; enter password and then confirm it;
      * User type: <code>SQL/ODBC and WebDAV</code>
      * Account role: <code>SPARQL_UPDATE</code>
%BR%%BR%<img src="%ATTACHURLPATH%/so3.png" style="wikiautogen"/>%BR%%BR%
   1 Click "Save".
   1 The created user should be shown in the list of registered users:
%BR%%BR%<img src="%ATTACHURLPATH%/so4.png" style="wikiautogen"/>%BR%%BR%
   1. Go to <b><code><nowiki>http://&lt;cname&gt;:&lt;port&gt;/oauth/</nowiki></code></b>, 
where <code>&lt;cname&gt;:&lt;port&gt;</code> are replaced by your local server values.
%BR%%BR%<img src="%ATTACHURLPATH%/so5.png" style="wikiautogen"/>%BR%%BR%
   1. Click the "<b>OAuth Keys</b>" link:
%BR%%BR%<img src="%ATTACHURLPATH%/so6.png" style="wikiautogen"/>%BR%%BR%
   1. Log in as user <b><code>demo1</code></b>:
%BR%%BR%<img src="%ATTACHURLPATH%/so7.png" style="wikiautogen"/>%BR%%BR%
   1. The OAuth application registration form will be shown.
%BR%%BR%<img src="%ATTACHURLPATH%/so8.png" style="wikiautogen"/>%BR%%BR%
   1. Select <b>SPARQL</b> from the "<b>Application name</b>" list, and click the "<b>Generate Keys</b>" button.
   1. A Consumer Key for SPARQL will be generated:
<verbatim>
90baa79108b1d972525bacc76c0279c02d6421e8
</verbatim>
%BR%%BR%<img src="%ATTACHURLPATH%/so9.png" style="wikiautogen"/>%BR%%BR%
   1. Click the "<b>Back to main menu</b>" link.
%BR%%BR%<img src="%ATTACHURLPATH%/so10.png" style="wikiautogen"/>%BR%%BR%
   1. Click the "<b>Protected SPARQL Endpoint</b>" link.
   1. The OpenLink Virtuoso SPARQL Query form will be shown:
%BR%%BR%<img src="%ATTACHURLPATH%/so11.png" style="wikiautogen"/>%BR%%BR%
%BR%%BR%<img src="%ATTACHURLPATH%/so12.png" style="wikiautogen"/>%BR%%BR%
   1. Enter a simple query, for ex:
<verbatim>
SELECT * 
WHERE 
  {
    ?s ?p ?o
  }
LIMIT 10
</verbatim>
   1. For "<b>OAuth token</b>", enter the Consumer Key value which was generated above, i.e.,
<verbatim>
90baa79108b1d972525bacc76c0279c02d6421e8
</verbatim>
%BR%%BR%<img src="%ATTACHURLPATH%/so13.png" style="wikiautogen"/>%BR%%BR%
   1. Click the "<b>Run Query</b>" button.
   1. In the OAuth Authorization Service form, enter the password for user <b>demo1</b> and click the "<b>Login</b>" button.
%BR%%BR%<img src="%ATTACHURLPATH%/so16.png" style="wikiautogen"/>%BR%%BR%
   1. Next you should authorize the request:
%BR%%BR%<img src="%ATTACHURLPATH%/so15.png" style="wikiautogen"/>%BR%%BR%
   1. On successful authentication and authorization, the query results should be shown:
%BR%%BR%<img src="%ATTACHURLPATH%/so14.png" style="wikiautogen"/>%BR%%BR%

---++Related

   * [[VirtSPARQLEndpointProtection][Safeguarding your Virtuoso-hosted SPARQL Endpoint]]
   * [[VirtTipsAndTricksGuideSPARQLEndpointProtection][SPARQL Endpoint Protection Methods Collection]]
   * [[http://docs.openlinksw.com/virtuoso/][Virtuoso documentation]]
      * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html#rdfsupportedprotocolendpoint][SPARQL Service Endpoint]] 
      * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html#rdfsupportedprotocolendpointuri][Service Endpoint Security]] 
      * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html#sparqwebservicetbl][Managing a SPARQL Web Service Endpoint]] 
      * [[http://docs.openlinksw.com/virtuoso/rdfsparql.html][SPARQL]]
   * [[VirtTipsAndTricksGuide][Virtuoso Tips and Tricks Collection]]
      * [[VirtSPARQLDET][SPARQL Endpoint DET Configuration Guide]]       
      * [[VirtSPARQLSecurityWebID][WebID Protocol & SPARQL Endpoint ACLs Tutorial]]
      * [[VirtTipsAndTricksGuideSPARQLEndpoints][Securing SPARQL endpoints]]
   * [[http://ods.openlinksw.com/wiki/ODS/OdsSPARQLAuth][SPARUL over SPARQL using the http://cname:port/sparql-auth endpoint]]
   * [[VirtAuthServerUI][Virtuoso Authentication Server UI]]
   * [[VirtSPARQLSSL][Manage a SPARQL-WebID based Endpoint]]
   * [[VirtSetupSSL][Configure Virtuoso instance as an X.509 Certificate Authority and HTTPS listener]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSSetupSSL][Configure Virtuoso+ODS instance as an X.509 Certificate Authority and HTTPS listener]]  
   * [[http://ods.openlinksw.com/wiki/ODS/VirtODSSecurityWebID][WebID Protocol Support in OpenLink Data Spaces]].
   * Manage ODS Dataspace Object <nop>WebID Access Control Lists (ACLs):
      * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebID][ODS Briefcase WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebIDPerson][Person Entity WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebIDGroup][Group Entity WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebIDPublic][Public WebID based ACL Guide]]      
      * [[http://ods.openlinksw.com/wiki/ODS/ODSFeedManagerWebIDACL][ODS Feed Manager WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSFeedManagerWebIDACLPerson][Person Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSFeedManagerWebIDACLGroup][Group Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSFeedManagerWebIDACLPublic][Public Specific ACL for anyone with a WebID]]
      * [[http://ods.openlinksw.com/wiki/ODS/ODSCalendarWebIDACL][ODS Calendar WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSCalendarWebIDACLPerson][Person Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSCalendarWebIDACLGroup][Group Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSCalendarWebIDACLPublic][Public Specific ACL for anyone with a WebID]]
      * [[http://ods.openlinksw.com/wiki/ODS/ODSBookmarksWebIDACL][ODS Bookmark Manager WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBookmarksWebIDACLPerson][Person Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBookmarksWebIDACLGroup][Group Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSBookmarksWebIDACLPublic][Public Specific ACL for anyone with a WebID]]
      * [[http://ods.openlinksw.com/wiki/ODS/ODSAddressBookWebIDACL][ODS Addressbook  WebID based ACL Guide]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSAddressBookWebIDACLPerson][Person Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSAddressBookWebIDACLGroup][Group Entity Specific ACL]]
         * [[http://ods.openlinksw.com/wiki/ODS/ODSAddressBookWebIDACLPublic][Public Specific ACL for anyone with a WebID]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSPkiSetup][Guide for Set up a X.509 certificate issuer and HTTPS listener and generate ODS user certificates.]]
   * [[http://ods.openlinksw.com/wiki/ODS/VirtODSPubSubHub][Setting up PubSubHub in ODS]]
   * [[http://ods.openlinksw.com/wiki/ODS/VirtPubSubHub][PubSubHubBub Demo Client Example]]
   * [[http://ods.openlinksw.com/wiki/ODS/VirtFeedPubSubHub][Feed subscription via PubSubHub protocol Example ]]
   * [[http://ods.openlinksw.com/wiki/ODS/VirtPubSubHubACL][Setting Up PubSubHub to use WebID Protocol or IP based control lists]]
   * [[http://ods.openlinksw.com/wiki/ODS/OdsKeyImport][CA Keys Import using Conductor]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSGenerateX509Certificate][Generate an X.509 Certificate hosted WebID Guide]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSGenerateWebIDX509CertOSKeystore][Generate an X.509 Certificate (with a WebID watermark) to be managed by host operating system keystore]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSGenerateWebIDX509CertBrsKeystore][Generate an X.509 Certificate (with a WebID watermark) to be managed by a browser-based keystore]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSWebIDIdP][Using Virtuoso's WebID Verification Proxy Service with a WebID-bearing X.509 certificate]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSWebIDIdpProxy][Using Virtuoso's WebID Identity Provider (IdP) Proxy Service with an X.509 certificate]]
   * [[http://ods.openlinksw.com/wiki/ODS/ODSBriefcaseWebIDShareFile][ODS Briefcase WebID Protocol Share File Guide]]
   * [[http://esw.w3.org/topic/foaf+ssl][WebID Protocol Specification]]
   * [[https://foaf.me/simpleLogin.php][Test WebID Protocol Certificate page]]
   * [[http://test.foafssl.org/cert/][WebID Protocol Certificate Generation page]]
   * [[http://oauth.net/core/1.0/][OAuth API]]


CategoryVirtuoso CategoryHowTo CategorySPARQL CategoryOAuth CategoryFOAFSSL CategoryDocumentation CategoryTutorial