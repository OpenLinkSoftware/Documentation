<docbook><section><title>VirtRDFViewsInformixStoresDemoScript</title><bridgehead class="http://www.w3.org/1999/xhtml:h2"> Informix10 Stores Linked Data Views Script to set up your own instance</bridgehead>
<programlisting>-- Setup script for Linked Data Views of Informix10 Stores Demo Sample Database --

GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.items      TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.catalog    TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.msgs       TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.state      TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.orders     TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.stock      TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.customer   TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.call_type  TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.manufact   TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON stores_demo_rdf.inf10_stores_demo_rdf.cust_calls TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SPARQL_UPDATE to &quot;SPARQL&quot;;


create function DB.DBA.CUST_CALLS_IRI (in customer_num integer, in call_dtime datetime) returns varchar
{
	declare _call_dtime any;
	_call_dtime := cast(call_dtime as varchar);
	return sprintf(&#39;http://localhost:8890/informix/stores_demo/cust_calls/%d_%U#this&#39;, customer_num, _call_dtime);
};

create function DB.DBA.CUST_CALLS_IRI_INV_1 (in cust_calls_iri varchar) returns integer
{
	declare parts any;
	parts := sprintf_inverse(cust_calls_iri, &#39;http://localhost:8890/informix/stores_demo/cust_calls/%d_%U#this&#39;, 1);
	if(parts is not null)
	{
		return parts[0];
	}
	return NULL;
};

create function DB.DBA.CUST_CALLS_IRI_INV_2 (in cust_calls_iri varchar) returns datetime
{
	declare parts any;
	parts := sprintf_inverse(cust_calls_iri, &#39;http://localhost:8890/informix/stores_demo/cust_calls/%d_%U#this&#39;, 1);
	if(parts is not null)
	{
		return parts[1];
	}
	return NULL;
};


grant execute on DB.DBA.CUST_CALLS_IRI to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
grant execute on DB.DBA.CUST_CALLS_IRI_INV_1 to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
grant execute on DB.DBA.CUST_CALLS_IRI_INV_2 to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


-------- Create rdfs:Class definitions ----------------------------

ttlp (
&#39;
@prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt; .
@prefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt; .
@prefix xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt; .

@prefix items:   &lt;http://localhost:8890/schemas/informix/stores_demo/items/&gt; .
@prefix catalog: &lt;http://localhost:8890/schemas/informix/stores_demo/catalog/&gt; .
@prefix stock:   &lt;http://localhost:8890/schemas/informix/stores_demo/stock/&gt; .
@prefix msgs:    &lt;http://localhost:8890/schemas/informix/stores_demo/msgs/&gt; .
@prefix state:   &lt;http://localhost:8890/schemas/informix/stores_demo/state/&gt; .
@prefix orders:  &lt;http://localhost:8890/schemas/informix/stores_demo/orders/&gt; .
@prefix manuf:   &lt;http://localhost:8890/schemas/informix/stores_demo/manufact/&gt; .
@prefix cust:    &lt;http://localhost:8890/schemas/informix/stores_demo/customer/&gt; .
@prefix callt:   &lt;http://localhost:8890/schemas/informix/stores_demo/call_type/&gt; .
@prefix custc:   &lt;http://localhost:8890/schemas/informix/stores_demo/cust_calls/&gt; .



items:Items a rdfs:Class ;
	rdfs:label &quot;Items&quot; ;
	rdfs:comment &quot;Informix SD items table&quot; .

items:item_num a rdf:Property ;
	rdfs:domain items:Items ;
	rdfs:range xsd:integer ;
	rdfs:label &quot;ITEM NUMBER&quot; .

items:quantity a rdf:Property ;
	rdfs:domain items:Items ;
	rdfs:range xsd:integer ;
	rdfs:label &quot;QUANTITY&quot; .

items:total_price a rdf:Property ;
	rdfs:domain items:Items ;
	rdfs:range xsd:decimal ;
	rdfs:label &quot;TOTAL PRICE&quot; .

items:order_num_fk a rdf:Property ;
	rdfs:domain items:Items ;
	rdfs:range orders:Orders ;
	rdfs:label &quot;ORDER NUMBER&quot; .

items:stock_num_fk a rdf:Property ;
	rdfs:domain items:Items ;
	rdfs:range stock:Stock ;
	rdfs:label &quot;STOCK NUMBER&quot; .

items:manu_code_fk a rdf:Property ;
	rdfs:domain items:Items ;
	rdfs:range stock:Stock ;
	rdfs:label &quot;MANUAL CODE&quot; .



catalog:Catalog a rdfs:Class ;
	rdfs:label &quot;Catalog&quot; ;
	rdfs:comment &quot;Informix SD catalog table&quot; .

catalog:manu_code a rdf:Property ;
	rdfs:domain catalog:Catalog ;
	rdfs:range xsd:integer ;
	rdfs:label &quot;MANUAL CODE&quot; .

catalog:cat_descr a rdf:Property ;
	rdfs:domain catalog:Catalog ;
	rdfs:range xsd:string ;
	rdfs:label &quot;CATALOG DESCRIPTION&quot; .

catalog:cat_picture a rdf:Property ;
	rdfs:domain catalog:Catalog ;
	rdfs:range xsd:byte ;
	rdfs:label &quot;CATALOG PICTURE&quot; .

catalog:cat_advert a rdf:Property ;
	rdfs:domain catalog:Catalog ;
	rdfs:range xsd:string ;
	rdfs:label &quot;CATALOG ADVERT&quot; .

catalog:catalog_num_fk a rdf:Property ;
	rdfs:domain catalog:Catalog ;
	rdfs:range stock:Stock ;
	rdfs:label &quot;CATALOG NUMBER&quot; .

catalog:stock_num_fk a rdf:Property ;
	rdfs:domain catalog:Catalog ;
	rdfs:range stock:Stock ;
	rdfs:label &quot;STOCK NUMBER&quot; .



msgs:Msgs a rdfs:Class ;
	rdfs:label &quot;Msgs&quot; ;
	rdfs:comment &quot;Informix SD msgs table&quot; .

msgs:lang a rdf:Property ;
	rdfs:domain msgs:Msgs ;
	rdfs:range xsd:string ;
	rdfs:label &quot;LANGUAGE&quot; .

msgs:number a rdf:Property ;
	rdfs:domain msgs:Msgs ;
	rdfs:range xsd:integer ;
	rdfs:label &quot;NUMBER&quot; .

msgs:message a rdf:Property ;
	rdfs:domain msgs:Msgs ;
	rdfs:range xsd:string ;
	rdfs:label &quot;MESSAGE&quot; .



state:State a rdfs:Class ;
	rdfs:label &quot;State&quot; ;
	rdfs:comment &quot;Informix SD state table&quot; .

state:code a rdf:Property ;
	rdfs:domain state:State ;
	rdfs:range xsd:string ;
	rdfs:label &quot;STATE CODE&quot; .

state:sname a rdf:Property ;
	rdfs:domain state:State ;
	rdfs:range xsd:string ;
	rdfs:label &quot;STATE NAME&quot; .



orders:Orders a rdfs:Class ;
	rdfs:label &quot;Orders&quot; ;
	rdfs:comment &quot;Informix SD orders table&quot; .

orders:order_num a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:integer ;
	rdfs:label &quot;ORDER NUMBER&quot; .

orders:order_date a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:date ;
	rdfs:label &quot;ORDER DATE&quot; .

orders:ship_instruct a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:string ;
	rdfs:label &quot;SHIPPING INSTRUCTION&quot; .

orders:backlog a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:string ;
	rdfs:label &quot;BACKLOG&quot; .

orders:po_num a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:string ;
	rdfs:label &quot;PURCHASE ORDER NUMBER&quot; .

orders:ship_date a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:date ;
	rdfs:label &quot;SHIPPING DATE&quot; .

orders:ship_weight a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:decimal ;
	rdfs:label &quot;SHIPPING WEIGHT&quot; .

orders:ship_charge a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:decimal ;
	rdfs:label &quot;SHIPPING CHARGE&quot; .

orders:paid_date a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range xsd:date ;
	rdfs:label &quot;PAID DATE&quot; .

orders:customer_num_fk a rdf:Property ;
	rdfs:domain orders:Orders ;
	rdfs:range cust:Customer ;
	rdfs:label &quot;CUSTOMER NUMBER&quot; .



stock:Stock a rdfs:Class ;
	rdfs:label &quot;Stock&quot; ;
	rdfs:comment &quot;Informix SD stock table&quot; .

stock:stock_num a rdf:Property ;
	rdfs:domain stock:Stock ;
	rdfs:range xsd:integer ;
	rdfs:label &quot;STOCK NUMBER&quot; .

stock:description a rdf:Property ;
	rdfs:domain stock:Stock ;
	rdfs:range xsd:string ;
	rdfs:label &quot;DESCRIPTION&quot; .

stock:unit_price a rdf:Property ;
	rdfs:domain stock:Stock ;
	rdfs:range xsd:decimal ;
	rdfs:label &quot;UNIT PRICE&quot; .

stock:unit a rdf:Property ;
	rdfs:domain stock:Stock ;
	rdfs:range xsd:string ;
	rdfs:label &quot;UNIT&quot; .

stock:unit_descr a rdf:Property ;
	rdfs:domain stock:Stock ;
	rdfs:range xsd:decimal ;
	rdfs:label &quot;UNIT DESCRIPTION&quot; .

stock:manu_code_fk a rdf:Property ;
	rdfs:domain stock:Stock ;
	rdfs:range manuf:Manufact ;
	rdfs:label &quot;MANUAL CODE&quot; .



cust:Customer a rdfs:Class ;
	rdfs:label &quot;Customer&quot; ;
	rdfs:comment &quot;Informix SD customer table&quot; .

cust:customer_num a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:integer ;
	rdfs:label &quot;CUSTOMER NUMBER&quot; .

cust:fname a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;FIRST NAME&quot; .

cust:lname a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;LAST NAME&quot; .

cust:company a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;COMPANY&quot; .

cust:address1 a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;ADDRESS1&quot; .

cust:address2 a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;ADDRESS2&quot; .

cust:city a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;CITY&quot; .

cust:state a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;STATE&quot; .

cust:zipcode a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;ZIP CODE&quot; .

cust:phone a rdf:Property ;
	rdfs:domain cust:Customer ;
	rdfs:range xsd:string ;
	rdfs:label &quot;PHONE NUMBER&quot; .



callt:Call_type a rdfs:Class ;
	rdfs:label &quot;Call_type&quot; ;
	rdfs:comment &quot;Informix SD call_type table&quot; .

callt:call_code a rdf:Property ;
	rdfs:domain callt:Call_type ;
	rdfs:range xsd:string ;
	rdfs:label &quot;CALL CODE&quot; .

callt:code_descr a rdf:Property ;
	rdfs:domain callt:Call_type ;
	rdfs:range xsd:string ;
	rdfs:label &quot;CODE DESCRIPTION&quot; .



manuf:Manufact a rdfs:Class ;
	rdfs:label &quot;Manufact&quot; ;
	rdfs:comment &quot;Informix SD manufact table&quot; .

manuf:manu_code a rdf:Property ;
	rdfs:domain manuf:Manufact ;
	rdfs:range xsd:string ;
	rdfs:label &quot;MANUFACTURE CODE&quot; .

manuf:manu_name a rdf:Property ;
	rdfs:domain manuf:Manufact ;
	rdfs:range xsd:string ;
	rdfs:label &quot;MANUFACTURE NAME&quot; .

manuf:lead_time a rdf:Property ;
	rdfs:domain manuf:Manufact ;
	rdfs:range xsd:integer ;
	rdfs:label &quot;LEAD TIME&quot; .



custc:Cust_calls a rdfs:Class ;
	rdfs:label &quot;Cust_calls&quot; ;
	rdfs:comment &quot;Informix SD cust_calls table&quot; .

custc:call_dtime a rdf:Property ;
	rdfs:domain manuf:Cust_calls ;
	rdfs:range xsd:datetime ;
	rdfs:label &quot;CALL TIME&quot; .

custc:user_id a rdf:Property ;
	rdfs:domain manuf:Cust_calls ;
	rdfs:range xsd:string ;
	rdfs:label &quot;USER ID&quot; .

custc:call_descr a rdf:Property ;
	rdfs:domain manuf:Cust_calls ;
	rdfs:range xsd:string ;
	rdfs:label &quot;CALL DESCRIPTION&quot; .

custc:res_dtime a rdf:Property ;
	rdfs:domain manuf:Cust_calls ;
	rdfs:range xsd:datetime ;
	rdfs:label &quot;RES TIME&quot; .

custc:res_descr a rdf:Property ;
	rdfs:domain manuf:Cust_calls ;
	rdfs:range xsd:string ;
	rdfs:label &quot;RES DESCRIPTION&quot; .

custc:customer_num_fk a rdf:Property ;
	rdfs:domain manuf:Cust_calls ;
	rdfs:range cust:Customer ;
	rdfs:label &quot;CUSTOMER NUM&quot; .

custc:call_code_fk a rdf:Property ;
	rdfs:domain manuf:Cust_calls ;
	rdfs:range callt:Call_type ;
	rdfs:label &quot;CALL CODE&quot; .


&#39;, &#39;&#39;, &#39;http://localhost:8890/schemas/informix/stores_demo&#39;, 0);



----------- Create IRI Classes -------------




sparql

prefix items:   &lt;http://localhost:8890/schemas/informix/stores_demo/items/&gt; 
prefix catalog: &lt;http://localhost:8890/schemas/informix/stores_demo/catalog/&gt; 
prefix stock:   &lt;http://localhost:8890/schemas/informix/stores_demo/stock/&gt; 
prefix msgs:    &lt;http://localhost:8890/schemas/informix/stores_demo/msgs/&gt; 
prefix state:   &lt;http://localhost:8890/schemas/informix/stores_demo/state/&gt; 
prefix orders:  &lt;http://localhost:8890/schemas/informix/stores_demo/orders/&gt; 
prefix manuf:   &lt;http://localhost:8890/schemas/informix/stores_demo/manufact/&gt; 
prefix cust:    &lt;http://localhost:8890/schemas/informix/stores_demo/customer/&gt; 
prefix callt:   &lt;http://localhost:8890/schemas/informix/stores_demo/call_type/&gt; 
prefix custc:   &lt;http://localhost:8890/schemas/informix/stores_demo/cust_calls/&gt;

create iri class items:items_iri 
	&quot;http://localhost:8890/informix/stores_demo/items/%d_%d#this&quot; 
	(in item_num integer not null, in order_num integer not null) .

create iri class catalog:catalog_iri
	&quot;http://localhost:8890/informix/stores_demo/catalog/%d#this&quot;
    	(in catalog_num integer not null) .

create iri class msgs:msgs_iri
	&quot;http://localhost:8890/informix/stores_demo/msgs/%U_%d_%U#this&quot;
    	(in _lang varchar not null, in number integer not null, in message varchar not null) .

create iri class state:state_iri
	&quot;http://localhost:8890/informix/stores_demo/state/%U#this&quot;
    	(in code varchar not null) .

create iri class orders:orders_iri
	&quot;http://localhost:8890/informix/stores_demo/orders/%d#this&quot;
    	(in order_num integer not null) .

create iri class stock:stock_iri
	&quot;http://localhost:8890/informix/stores_demo/stock/%d_%U#this&quot;
    	(in stock_num integer not null, in manu_code varchar not null) .

create iri class cust:customer_iri
	&quot;http://localhost:8890/informix/stores_demo/customer/%d#this&quot;
    	(in customer_num integer not null) .

create iri class callt:call_type_iri
	&quot;http://localhost:8890/informix/stores_demo/call_type/%U#this&quot;
    	(in call_code varchar not null) .

create iri class manuf:manufact_iri
	&quot;http://localhost:8890/informix/stores_demo/manufact/%U#this&quot;
    	(in manu_code varchar not null) .

create iri class custc:cust_calls_iri using
	function DB.DBA.CUST_CALLS_IRI (in customer_num integer, in call_dtime datetime) returns varchar,
	function DB.DBA.CUST_CALLS_IRI_INV_1 (in cust_calls_iri varchar) returns integer,
        function DB.DBA.CUST_CALLS_IRI_INV_2 (in cust_calls_iri varchar) returns datetime .
;
	






------------- Create Quad Store ------------------------------------

sparql

prefix items:   &lt;http://localhost:8890/schemas/informix/stores_demo/items/&gt; 
prefix catalog: &lt;http://localhost:8890/schemas/informix/stores_demo/catalog/&gt; 
prefix stock:   &lt;http://localhost:8890/schemas/informix/stores_demo/stock/&gt; 
prefix msgs:    &lt;http://localhost:8890/schemas/informix/stores_demo/msgs/&gt; 
prefix state:   &lt;http://localhost:8890/schemas/informix/stores_demo/state/&gt; 
prefix orders:  &lt;http://localhost:8890/schemas/informix/stores_demo/orders/&gt; 
prefix manuf:   &lt;http://localhost:8890/schemas/informix/stores_demo/manufact/&gt; 
prefix cust:    &lt;http://localhost:8890/schemas/informix/stores_demo/customer/&gt; 
prefix callt:   &lt;http://localhost:8890/schemas/informix/stores_demo/call_type/&gt; 
prefix custc:   &lt;http://localhost:8890/schemas/informix/stores_demo/cust_calls/&gt;

alter quad storage virtrdf:DefaultQuadStorage 
  from stores_demo_rdf.inf10_stores_demo_rdf.items      as items_tbl 
  from stores_demo_rdf.inf10_stores_demo_rdf.catalog    as catalog_tbl 
  from stores_demo_rdf.inf10_stores_demo_rdf.msgs       as msgs_tbl 
  from stores_demo_rdf.inf10_stores_demo_rdf.state      as state_tbl 
  from stores_demo_rdf.inf10_stores_demo_rdf.orders     as orders_tbl 
  from stores_demo_rdf.inf10_stores_demo_rdf.stock      as stock_tbl 
  from stores_demo_rdf.inf10_stores_demo_rdf.customer   as customer_tbl 
  from stores_demo_rdf.inf10_stores_demo_rdf.call_type  as call_type_tbl
  from stores_demo_rdf.inf10_stores_demo_rdf.manufact   as manufact_tbl
  from stores_demo_rdf.inf10_stores_demo_rdf.cust_calls as cust_calls_tbl
{
  create virtrdf:informix_stores_demo as graph &lt;http://localhost:8890/informix/stores_demo&gt;
  {
    items:items_iri (items_tbl.item_num, items_tbl.order_num) a items:Items as virtrdf:items_pk ;
    items:item_num    items_tbl.item_num       as virtrdf:items_item_num ;
    items:order_num   items_tbl.order_num      as virtrdf:items_order_num ;
    items:stock_num   items_tbl.stock_num      as virtrdf:items_stock_num ;
    items:manu_code   items_tbl.manu_code      as virtrdf:items_manu_code ;
    items:quantity    items_tbl.quantity       as virtrdf:items_quantity ;
    items:total_price items_tbl.total_price    as virtrdf:items_total_price ;
    items:from_order  orders:orders_iri (orders_tbl.order_num) where (^{items_tbl.}^.order_num = ^{orders_tbl.}^.order_num) as virtrdf:Items-from_order ;
    items:has_stock   stock:stock_iri (stock_tbl.stock_num, stock_tbl.manu_code) where (^{items_tbl.}^.stock_num = ^{stock_tbl.}^.stock_num and ^{items_tbl.}^.manu_code = ^{stock_tbl.}^.manu_code)  as virtrdf:Item-has_stock .

    catalog:catalog_iri (catalog_tbl.catalog_num) a catalog:Catalog as virtrdf:catalog_num;
    catalog:stock_num   catalog_tbl.stock_num    as virtrdf:catalog_stock_num ;
    catalog:manu_code   catalog_tbl.manu_code    as virtrdf:catalog_manu_code ;
    catalog:cat_descr   catalog_tbl.cat_descr    as virtrdf:catalog_cat_descr ;
    catalog:cat_picture catalog_tbl.cat_picture  as virtrdf:catalog_cat_picture ;
    catalog:cat_advert  catalog_tbl.cat_advert   as virtrdf:catalog_cat_advert ;
    catalog:has_stock   stock:stock_iri (stock_tbl.stock_num, stock_tbl.manu_code) where (^{catalog_tbl.}^.stock_num = ^{stock_tbl.}^.stock_num and ^{catalog_tbl.}^.manu_code = ^{stock_tbl.}^.manu_code)  as virtrdf:Catalog-has_stock .

    msgs:msgs_iri (msgs_tbl.lang, msgs_tbl.number, msgs_tbl.message) a msgs:Msgs as virtrdf:msgs_pk ; 
    msgs:lang     msgs_tbl.lang    as virtrdf:msgs_lang ; 
    msgs:number   msgs_tbl.number  as virtrdf:msgs_number ; 
    msgs:message  msgs_tbl.message as virtrdf:msgs_message .

    state:state_iri (state_tbl.code) a state:State as virtrdf:code ;
    state:code   state_tbl.code   as virtrdf:state_code ;
    state:sname  state_tbl.sname  as virtrdf:state_sname .

    orders:orders_iri (orders_tbl.order_num) a orders:Orders as virtrdf:order_num ;
    orders:order_num     orders_tbl.order_num     as virtrdf:orders_order_num ;
    orders:order_date    orders_tbl.order_date    as virtrdf:orders_order_date ;
    orders:customer_num  orders_tbl.customer_num  as virtrdf:orders_customer_num ;
    orders:ship_instruct orders_tbl.ship_instruct as virtrdf:orders_ship_instruct ;
    orders:backlog       orders_tbl.backlog       as virtrdf:orders_backlog ;
    orders:po_num        orders_tbl.po_num        as virtrdf:orders_po_num ;
    orders:ship_date     orders_tbl.ship_date     as virtrdf:orders_ship_date ;
    orders:ship_weight   orders_tbl.ship_weight   as virtrdf:orders_ship_weight ;
    orders:ship_charge   orders_tbl.ship_charge   as virtrdf:orders_ship_charge ;
    orders:paid_date     orders_tbl.paid_date     as virtrdf:orders_paid_date ;
    orders:has_customer cust:customer_iri (customer_tbl.customer_num) where (^{orders_tbl.}^.customer_num = ^{customer_tbl.}^.customer_num) as virtrdf:Orders-has_customer ;
    orders:has_item     items:items_iri (items_tbl.item_num, items_tbl.order_num) where (^{orders_tbl.}^.order_num = ^{items_tbl.}^.order_num) as virtrdf:Orders-has_item .

    stock:stock_iri (stock_tbl.stock_num, stock_tbl.manu_code) a stock:Stock as virtrdf:stock_pk ;
    stock:stock_num    stock_tbl.stock_num    as virtrdf:stock_stock_num ;
    stock:manu_code    stock_tbl.manu_code    as virtrdf:stock_manu_code ;
    stock:description  stock_tbl.description  as virtrdf:stock_description ;
    stock:unit_price   stock_tbl.unit_price   as virtrdf:stock_unit_price ;
    stock:unit         stock_tbl.unit         as virtrdf:stock_unit ;
    stock:unit_descr   stock_tbl.unit_descr   as virtrdf:stock_unit_descr ;
    stock:manufactured_by manuf:manufact_iri (manufact_tbl.manu_code) where (^{stock_tbl.}^.manu_code = ^{manufact_tbl.}^.manu_code) as virtrdf:Stock-manufactured_by ;
    stock:in_catalog  catalog:catalog_iri (catalog_tbl.catalog_num) where (^{stock_tbl.}^.stock_num = ^{catalog_tbl.}^.stock_num and ^{stock_tbl.}^.manu_code = ^{catalog_tbl.}^.manu_code) as virtrdf:Stock-in_catalog ;
    stock:in_item     items:items_iri (items_tbl.item_num, items_tbl.order_num) where (^{stock_tbl.}^.stock_num = ^{items_tbl.}^.stock_num and ^{stock_tbl.}^.manu_code = ^{items_tbl.}^.manu_code) as virtrdf:Stock-in_items .


    cust:customer_iri (customer_tbl.customer_num) a cust:Customer as virtrdf:customer_num ;
    cust:customer_num  customer_tbl.customer_num  as virtrdf:customer_customer_num ;
    cust:fname         customer_tbl.fname         as virtrdf:customer_fname ;
    cust:lname         customer_tbl.lname         as virtrdf:customer_lname ;
    cust:company       customer_tbl.company       as virtrdf:customer_company ;
    cust:address1      customer_tbl.address1      as virtrdf:customer_address1 ;
    cust:address2      customer_tbl.address2      as virtrdf:customer_address2 ;
    cust:city          customer_tbl.city          as virtrdf:customer_city ;
    cust:state         customer_tbl.state         as virtrdf:customer_state ;
    cust:zipcode       customer_tbl.zipcode       as virtrdf:customer_zipcode ;
    cust:phone         customer_tbl.phone         as virtrdf:customer_phone ;
    cust:placed_order orders:orders_iri (orders_tbl.order_num) where (^{customer_tbl.}^.customer_num = ^{orders_tbl.}^.customer_num) as virtrdf:Customer-placed_order ;
    cust:made_call    custc:cust_calls_iri (cust_calls_tbl.customer_num, cust_calls_tbl.call_dtime ) where (^{customer_tbl.}^.customer_num = ^{cust_calls_tbl.}^.customer_num) as virtrdf:Cust_calls-made_call .

    callt:call_type_iri (call_type_tbl.call_code) a callt:Call_type as virtrdf:call_code ;
    callt:call_code   call_type_tbl.call_code as virtrdf:call_type_call_code ;
    callt:code_descr  call_type_tbl.code_descr as virtrdf:call_type_code_descr ;
    callt:call_is_type  custc:cust_calls_iri (cust_calls_tbl.customer_num, cust_calls_tbl.call_dtime) where (^{call_type_tbl.}^.call_code = ^{cust_calls_tbl.}^.call_code) as virtrdf:Call_type-call_is_type .

    manuf:manufact_iri (manufact_tbl.manu_code) a manuf:Manufact as virtrdf:manu_code ;
    manuf:manu_code     manufact_tbl.manu_code   as virtrdf:manufact_tbl_manu_code ;
    manuf:manu_name     manufact_tbl.manu_name   as virtrdf:manufact_tbl_manu_name ;
    manuf:lead_time     manufact_tbl.lead_time   as virtrdf:manufact_tbl_lead_time ;
    manuf:manufactures stock:stock_iri (stock_tbl.stock_num, stock_tbl.manu_code) where (^{manufact_tbl.}^.manu_code = ^{stock_tbl.}^.manu_code) as virtrdf:Manufact-manufactures .

    custc:cust_calls_iri  (cust_calls_tbl.customer_num, cust_calls_tbl.call_dtime) a custc:Cust_calls as virtrdf:cust_calls_pk ;
    custc:user_id    cust_calls_tbl.user_id      as virtrdf:cust_calls_user_id ;
    custc:call_code  cust_calls_tbl.call_code    as virtrdf:cust_calls_call_code ;
    custc:call_descr cust_calls_tbl.call_descr   as virtrdf:cust_calls_call_descr ;
    custc:res_dtime  cust_calls_tbl.res_dtime    as virtrdf:cust_calls_res_dtime ;
    custc:res_descr  cust_calls_tbl.res_descr    as virtrdf:cust_calls_res_descr ;
    custc:made_by_customer cust:customer_iri   (customer_tbl.customer_num) where (^{cust_calls_tbl.}^.customer_num = ^{customer_tbl.}^.customer_num) as virtrdf:Cust_calls-made_by_customer ;
    custc:is_call_type     callt:call_type_iri (call_type_tbl.call_code)   where (^{cust_calls_tbl.}^.call_code    = ^{call_type_tbl.}^.call_code)   as virtrdf:Cust_calls-is_call_type .

  } .
} .
;

delete from db.dba.url_rewrite_rule_list where urrl_list like &#39;informix_sd_rule%&#39;;
delete from db.dba.url_rewrite_rule where urr_rule like &#39;informix_sd_rule%&#39;;

DB.DBA.URLREWRITE_CREATE_REGEX_RULE (
    &#39;informix_sd_rule1&#39;,
    1,
    &#39;(/[^#]*)&#39;,
    vector(&#39;path&#39;),
    1,
    &#39;/about/html/http://^{URIQADefaultHost}^%s&#39;,
    vector(&#39;path&#39;),
    null,
    &#39;(text/html)|(\\*/\\*)&#39;,
    0,
    303
    );


DB.DBA.URLREWRITE_CREATE_REGEX_RULE (
    &#39;informix_sd_rule2&#39;,
    1,
    &#39;(/[^#]*)&#39;,
    vector(&#39;path&#39;),
    1,
    &#39;/sparql?query=DESCRIBE+%%3Chttp%%3A//localhost%%3A8890%U%%23this%%3E+%%3Chttp%%3A//localhost%%3A8890%U%%23this%%3E+FROM+%%3Chttp%%3A//localhost%%3A8890/informix/stores_demo%%3E&amp;format=%U&#39;,
    vector(&#39;path&#39;, &#39;path&#39;, &#39;*accept*&#39;),
    null,
    &#39;(text/rdf.n3)|(application/rdf.xml)&#39;,
    0,
    null
    );

DB.DBA.URLREWRITE_CREATE_RULELIST (
    &#39;informix_sd_rule_list1&#39;,
    1,
    vector (
  	 	&#39;informix_sd_rule1&#39;,
  	 	&#39;informix_sd_rule2&#39;
	  ));

-- ensure a VD for the IRIs which begins with /
VHOST_REMOVE (lpath=&gt;&#39;/informix/stores_demo&#39;);

VHOST_DEFINE (
	lpath=&gt;&#39;/informix/stores_demo&#39;,  
	ppath=&gt;&#39;/DAV/informix/stores_demo/&#39;, 
    	is_dav=&gt;1, 
	vsp_user=&gt;&#39;dba&#39;, 
	is_brws=&gt;0, 
	opts=&gt;vector (&#39;url_rewrite&#39;, &#39;informix_sd_rule_list1&#39;) 
	);

delete from db.dba.url_rewrite_rule_list where urrl_list like &#39;informix_sd_schemas_rule%&#39;;
delete from db.dba.url_rewrite_rule where urr_rule like &#39;informix_sd_schemas_rule%&#39;;

DB.DBA.URLREWRITE_CREATE_REGEX_RULE (
    &#39;informix_sd_schemas_rule1&#39;,
    1,
    &#39;(/[^#]*)&#39;,
    vector(&#39;path&#39;),
    1,
    &#39;/about/html/http://^{URIQADefaultHost}^%s&#39;,
    vector(&#39;path&#39;),
    null,
    &#39;(text/html)|(\\*/\\*)&#39;,
    0,
    303
    );

DB.DBA.URLREWRITE_CREATE_REGEX_RULE (
    &#39;informix_sd_schemas_rule2&#39;,
    1,
    &#39;(/[^#]*)&#39;,
    vector(&#39;path&#39;),
    1,
    &#39;/sparql?query=CONSTRUCT+{+%%3Chttp%%3A//localhost%%3A8890%U%%3E+%%3Fp+%%3Fo+}%%0D%%0AFROM+%%3Chttp%%3A//localhost%%3A8890/schemas/informix/stores_demo%%3E+%%0D%%0AWHERE+{+%%3Chttp%%3A//localhost%%3A8890%U%%3E+%%3Fp+%%3Fo+}&amp;format=%U&#39;,
    vector(&#39;path&#39;,&#39;path&#39;,&#39;*accept*&#39;),
    null,
    &#39;(text/rdf.n3)|(application/rdf.xml)&#39;,
    0,
    null
    );

DB.DBA.URLREWRITE_CREATE_RULELIST (
    &#39;informix_sd_schemas_rule_list1&#39;,
    1,
    vector (
  	 	&#39;informix_sd_schemas_rule1&#39;,
  	 	&#39;informix_sd_schemas_rule2&#39;
	  ));

-- ensure a VD for the IRIs which begins with /
VHOST_REMOVE (lpath=&gt;&#39;/schemas/informix/stores_demo&#39;);

VHOST_DEFINE (
	lpath=&gt;&#39;/schemas/informix/stores_demo&#39;,  
	ppath=&gt;&#39;/DAV/schemas/informix/stores_demo/&#39;, 
    	is_dav=&gt;1, 
	vsp_user=&gt;&#39;dba&#39;, 
	is_brws=&gt;0, 
	opts=&gt;vector (&#39;url_rewrite&#39;, &#39;informix_sd_schemas_rule_list1&#39;) 
	);

DB.DBA.XML_SET_NS_DECL (&#39;items&#39;,   &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/items/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;catalog&#39;, &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/catalog/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;stock&#39;,   &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/stock/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;msgs&#39;,    &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/msgs/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;state&#39;,   &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/state/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;orders&#39;,  &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/orders/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;manuf&#39;,   &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/manufact/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;cust&#39;,    &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/customer/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;callt&#39;,   &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/call_type/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;custc&#39;,   &#39;http://^{URIQADefaultHost}^/schemas/informix/stores_demo/cust_calls/&#39;, 2);

</programlisting></section></docbook>