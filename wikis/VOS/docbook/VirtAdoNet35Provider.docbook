<docbook><section><title>VirtAdoNet35Provider</title><para> </para>
<title> Virtuoso ADO.NET 3.5 Data Provider</title> Virtuoso ADO.NET 3.5 Data Provider
<bridgehead class="http://www.w3.org/1999/xhtml:h2"> What is the Virtuoso ADO.NET 3.5 Data Provider?</bridgehead>
<para>Virtuoso includes an ADO.NET 3.5 data provider compatible with Visual Studio 2008+ and Entity Frameworks, that provides access to native Virtuoso data (SQL, XML, and RDF) in addition to any DBMS objects linked from external <ulink url="VirtODBCEntityFrameworkUsage">ODBC</ulink> and/or <ulink url="VirtOJDBCEntityFrameworkUsage">JDBC</ulink> accessible data sources.
 Known-compatible external data sources include <ulink url="VirtOracleEntityFrameworkUsage">Oracle (versions 7.x to 11.x)</ulink>, <ulink url="VirtMSSQLServerEntityFrameworkUsage">Microsoft SQL Server (6.x to 2005)</ulink>, <ulink url="VirtDB2EntityFrameworkUsage">IBM DB2</ulink>, <ulink url="VirtSybaseEntityFrameworkUsage">Sybase (4.2 to 15.x)</ulink>, <ulink url="VirtInformixEntityFrameworkUsage">IBM Informix (5.x to 11.x)</ulink>, <ulink url="VirtIngresEntityFrameworkUsage">Ingres (6.4 to 9.x)</ulink>, <ulink url="VirtProgressEntityFrameworkUsage">Progress (7.x to 10.x)</ulink>, <ulink url="VirtMySQLEntityFrameworkUsage">MySQL</ulink>, <ulink url="VirtPostgresEntityFrameworkUsage">PostgreSQL</ulink>, and <ulink url="VirtFirebirdEntityFrameworkUsage">Firebird</ulink>.</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h2"> Benefits</bridgehead>
<para>This provider equips Microsoft .NET based applications, development environments, and programming languages with conceptual entity-based access to native and heterogeneous data sources.</para>
<para> </para>
<bridgehead class="http://www.w3.org/1999/xhtml:h2"> Features</bridgehead>
<itemizedlist mark="bullet" spacing="compact"><listitem>ADO.NET 3.5 compliance </listitem>
<listitem>.NET Entity Frameworks compatibility </listitem>
<listitem>Full integration with Visual Studio 2008 </listitem>
<listitem>ADO.NET Data Services compatibility </listitem>
<listitem>LINQ to Entities compatibility </listitem>
<listitem>High-Performance &amp; Scalability </listitem>
<listitem>High Security </listitem>
<listitem>Support for Native and 3rd party RDBMS engines and Web Services </listitem>
<listitem>Tested against all major .NET applications and development environments </listitem>
<listitem>Support for <ulink url="http://www.microsoft.com/Silverlight/">Microsoft Silverlight</ulink> versions 2 and 3 </listitem>
<listitem>Support for <ulink url="https://code.msdn.microsoft.com/site/search?query=riaservices%26f%5B0%5D.Value%3Driaservices%26f%5B0%5D.Type%3DSearchText%26ac%3D4">.NET RIA Services</ulink></listitem>
</itemizedlist><bridgehead class="http://www.w3.org/1999/xhtml:h2"> How Do I Use It?</bridgehead>
<bridgehead class="http://www.w3.org/1999/xhtml:h3"> Installation</bridgehead>
<para>There are two installation types to consider.</para>
<itemizedlist mark="bullet" spacing="compact"><listitem>If you have an existing Virtuoso instance, or will install Virtuoso on a different host, you only need to <ulink url="VirtADOClientInstall">install the ADO.NET Provider Client</ulink> on the Visual Studio host.
</listitem>
<listitem>If you have no existing Virtuoso instance, you can <ulink url="VirtADOClientServInstall">install both the ADO.NET Provider Client and the Virtuoso Universal Server</ulink> on the Visual Studio host.</listitem>
</itemizedlist><bridgehead class="http://www.w3.org/1999/xhtml:h3"> Connection String</bridgehead>
<para>The Virtuoso ADO.NET Provider <ulink url="VirtADONet35ConnStrings">ConnectionString property</ulink> implements the IDbConnection.ConnectionString interface to get or set the string used to open a Virtuoso database connection, and includes the source database name, and other parameters needed to establish the initial connection.</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h3"> Sample Walk-through Applications</bridgehead>
<itemizedlist mark="bullet" spacing="compact"><listitem><ulink url="VirtAdoNetDataGridApp">Using Visual Studio 2008 to Build a Data Grid Form Application</ulink> </listitem>
<listitem><ulink url="VirtEntityFrameworkSchoolDbWinFormApp">Using Visual Studio 2008 to Build an Entity Frameworks based Windows Form Application</ulink> </listitem>
<listitem><ulink url="VirtUsingMsAdoNetDataServicesWithVirtuoso">Using Visual Studio 2008 to Build an ADO.NET Data Services based Application</ulink> </listitem>
<listitem><ulink url="VirtSPASQLWinFormApp">Windows Form Application for accessing Virtuoso RDF data via SPASQL using the Virtuoso ADO.NET Provider</ulink> </listitem>
<listitem><ulink url="VirtSPASQLWebDataServiceApp">Web Data Service Application for accessing Virtuoso RDF data via SPASQL using the Virtuoso ADO.NET Provider</ulink> </listitem>
<listitem><ulink url="VirtSPASQLSilverLightApp">Creating a Silverlight Application to consume the service</ulink> </listitem>
<listitem><ulink url="RIAServicesHowTo">Creating A Simple .NET RIA Services Application to Display Data from Virtuoso</ulink> </listitem>
<listitem><ulink url="RIAServicesHowTo2">Creating a .NET RIA Services Application that will Update Virtuoso Data</ulink> </listitem>
<listitem><ulink url="VirtSilverlightSPARQLExample">Creating a Silverlight Application for Browsing RDF Data</ulink> </listitem>
<listitem><ulink url="ODataServiceExample">Creating an OData Publishing Endpoint using Virtuoso&#39;s ADO.NET Data Provider</ulink> </listitem>
<listitem><ulink url="VirtRDFODataExample">Accessing RDF Triples as an OData Service</ulink></listitem>
</itemizedlist><bridgehead class="http://www.w3.org/1999/xhtml:h3"> Using Entity Frameworks, ADO.NET, and the Virtuoso Virtual Database Engine</bridgehead>
<para>Virtuoso&#39;s in-built virtual database engine for ODBC and JDBC accessible databases enables it to act as bridge between Entity Frameworks &amp; ADO.NET based client applications.
 Thus, you simply link external databases into Virtuoso using the browser based Conductor UI or programmatically using SQL extensions.
 Once the external tables a linked/attached, they inherit the functionality prowess of Virtuoso, including complete compatibility with Entity Frameworks and ADO.NET 3.5.</para>
<para>We have target-specific guides for using Microsoft Entity Frameworks and OpenLink Virtuoso to access schema objects in --</para>
<itemizedlist mark="bullet" spacing="compact"><listitem><ulink url="VirtFirebirdEntityFrameworkUsage">Firebird data sources</ulink> </listitem>
<listitem><ulink url="VirtDB2EntityFrameworkUsage">IBM DB2 data sources</ulink> </listitem>
<listitem><ulink url="VirtInformixEntityFrameworkUsage">IBM Informix data sources</ulink> </listitem>
<listitem><ulink url="VirtIngresEntityFrameworkUsage">Ingres data sources</ulink> </listitem>
<listitem><ulink url="VirtOJDBCEntityFrameworkUsage">JDBC data sources</ulink> </listitem>
<listitem><ulink url="VirtMSSQLServerEntityFrameworkUsage">Microsoft SQL Server data sources</ulink> </listitem>
<listitem><ulink url="VirtMySQLEntityFrameworkUsage">MySQL data sources</ulink> </listitem>
<listitem><ulink url="VirtODBCEntityFrameworkUsage">ODBC data sources</ulink> </listitem>
<listitem><ulink url="VirtOracleEntityFrameworkUsage">Oracle data sources</ulink> </listitem>
<listitem><ulink url="VirtPostgresEntityFrameworkUsage">PostgreSQL data sources</ulink> </listitem>
<listitem><ulink url="VirtProgressEntityFrameworkUsage">Progress data sources</ulink> </listitem>
<listitem><ulink url="VirtSybaseEntityFrameworkUsage">Sybase data sources</ulink></listitem>
</itemizedlist><para> <ulink url="CategoryDocumentation">CategoryDocumentation</ulink> <ulink url="CategoryVirtuoso">CategoryVirtuoso</ulink> <ulink url="CategoryDotNET">CategoryDotNET</ulink> <ulink url="CategoryEntityFrameworks">CategoryEntityFrameworks</ulink> <ulink url="CategoryWebSite">CategoryWebSite</ulink> </para>
</section></docbook>