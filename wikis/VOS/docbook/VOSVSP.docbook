<docbook><section><title>VOSVSP</title><para>  </para>
<title> Virtuoso Dynamic Web Pages</title> Virtuoso Dynamic Web Pages
<para>Virtuoso has two proprietary web page scripting formats.
 VSP consists of static HTML or XML with interspersed SQL procedure  statements and expressions.
 It is fairly similar to PHP but has the added convenience of having all SQL inline, so as not  to require use of any data access API for database driven web sites.
 VSPX is an XML-based, object-oriented dynamic web page language similar to Microsoft&#39;s ASP .Net.</para>
<para>Examples and tutorials on both formats come with the Virtuoso source distribution.</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h2"> VSP</bridgehead>
<para>Each VSP page becomes a  SQL stored procedure that outputs its static content to the user agent and executes the statements delimited with the   processing instruction.
 SQL functions are provided for printing output to the user agent with varying form of escaping etc.
  Request headers and URL and POST parameters are passed as SQL arrays to the page and can be accessed with special accessor functions.
 VSP is simple and efficient.</para>
<bridgehead class="http://www.w3.org/1999/xhtml:h3"> VSPX</bridgehead>
<para>VSPX is  a more complex object-oriented web-scripting language.
 It offers much more automation than VSP but has a steeper learning curve.
 The key features are:</para>
<itemizedlist mark="bullet" spacing="compact"><listitem>Object-oriented controls for  forms, fields, validation, optional and repeating groups  etc.
</listitem>
<listitem>Scrollable and updatable data grid controls </listitem>
<listitem>Session management and login controls </listitem>
<listitem>Possibility for XSLT macroexpansion at page compile time, providing for automatic code generation.
</listitem>
<listitem>Support for reusable custom controls.</listitem>
</itemizedlist><para>A VSPX page is an XML file with XML elements marking the control hierarchy.
 The controls are scriptable, with SQL code to  be run at initialization, data bind, processing POST data, before rendering and finally when rendering, i.e.
 sending the page&#39;s output to the user agent.</para>
<para> </para>
<bridgehead class="http://www.w3.org/1999/xhtml:h3"> Development Cycle</bridgehead>
<para>To start developing a Virtuoso-driven web application, one simply designates a virtual directory as executable and specifies a SQL account on behalf of which dynamic content hosted in it will run.
 After this, one simply writes the pages into the file system or <ulink url="WebDAV">WebDAV</ulink>, depending on whether the virtual drectory is designated as file system- or <ulink url="WebDAV">WebDAV</ulink>-based.
 The pages can be tested with a web browser as soon as written.</para>
<para>Applications can be deployed using the Virtuoso VAD application package format or simply as zip or tar-balls of files.</para>
<para><ulink url="CategoryWebSite">CategoryWebSite</ulink> <ulink url="CategoryVirtuoso">CategoryVirtuoso</ulink> <ulink url="CategoryOpenSource">CategoryOpenSource</ulink></para>
<para> </para>
</section></docbook>