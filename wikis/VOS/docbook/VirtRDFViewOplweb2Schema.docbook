<docbook><section><title>VirtRDFViewOplweb2Schema</title><para> </para>
<title>Linked Data Views</title>Linked Data Views
<programlisting>-- Setup script for Linked Data Views of OpenLink Product Portfolio version 2
--

/*
 * This view is currently designed to SPECIFICALLY load on data.openlinksw.com.  We recommend you
 * search for &#39;openlinksw.com&#39;  (as `http://&#39; is sometimes encoded) and replace with either the default 
 * URIQA macro or your own hostname as appropriate.
 */

-- views to get the codes out instead of the id&#39;s
---- in hindsight these should ALL have been handled with 
---- proper IRI functions like the rest, oh well, no harm AFAIK
---- will know for next time or might even replace this later.
DROP VIEW oplweb2.oplweb.product_formats_categories;

CREATE VIEW oplweb2.oplweb.product_formats_categories (
    product_cat_code, product_cat_id, product_format_code, product_format_id, product_family_id
  ) as
select distinct
  pc.product_cat_code, 
  pc.product_cat_id,
  pf.product_format_code,
  pf.product_format_id,
  pc.product_family_id
from
  oplweb2.oplweb.product_category pc,
  oplweb2.oplweb.product_format pf,
  oplweb2.oplweb.product p
where
  p.product_cat_id = pc.product_cat_id and
  p.product_format_id = pf.product_format_id 
  and exists (
	select 1 from oplweb2.oplweb.component_archive ca 
	where ca.product_id = p.product_id
	)
;


DROP VIEW oplweb2.oplweb.product_with_code;

CREATE VIEW oplweb2.oplweb.product_with_code as
  select p.*, pc.product_cat_code, pf.product_format_code
  from 
  oplweb2.oplweb.product_category pc,
  oplweb2.oplweb.product_format pf,
  oplweb2.oplweb.product p
where
  p.product_cat_id = pc.product_cat_id and
  p.product_format_id = pf.product_format_id ;


DROP VIEW oplweb2.oplweb.product_category_with_code;

CREATE VIEW oplweb2.oplweb.product_category_with_code as
  select pc.*, pf.product_family_code
  from 
  oplweb2.oplweb.product_category pc,
  oplweb2.oplweb.product_family pf
where
  pc.product_family_id = pf.product_family_id ;
  
  
DROP VIEW oplweb2.oplweb.product_family_features_with_code;

CREATE VIEW oplweb2.oplweb.product_family_features_with_code as
  select a.*, b.product_family_code 
  from 
  oplweb2.oplweb.product_family_features a,
  oplweb2.oplweb.product_family b
where
  a.product_family_id = b.product_family_id
;    
    
DROP VIEW oplweb2.oplweb.product_format_features_with_code;

CREATE VIEW oplweb2.oplweb.product_format_features_with_code as
  select a.*, b.product_format_code 
  from 
  oplweb2.oplweb.product_format_features a,
  oplweb2.oplweb.product_format b
where
  a.product_format_id = b.product_format_id
;    
    
DROP VIEW oplweb2.oplweb.product_category_features_with_code;

CREATE VIEW oplweb2.oplweb.product_category_features_with_code as
  select a.*, b.product_cat_code 
  from 
  oplweb2.oplweb.product_category_features a,
  oplweb2.oplweb.product_category b
where
  a.product_cat_id = b.product_cat_id
;    

DROP VIEW oplweb2.oplweb.components_for_rdfs;

CREATE VIEW oplweb2.oplweb.components_for_rdfs as
  select *, cast(filesize as varchar) as str_filesize 
  from 
  oplweb2.oplweb.components
;    

    
DROP VIEW oplweb2.oplweb.product_release_with_family;

CREATE VIEW oplweb2.oplweb.product_release_with_family as
  select a.*, b.opsys_family_id, c.dbms_family_id 
  from 
  oplweb2.oplweb.product_release a,
  oplweb2.oplweb.opsys b,
  oplweb2.oplweb.dbms_engine c
where
  a.opsys_name = b.opsys_name and 
  a.dbms_name = c.dbms_name
;    

drop view oplweb2.oplweb.archive_coverage_osdb;

create view oplweb2.oplweb.archive_coverage_osdb as
	select distinct 
	  pfam.product_family_id, pfam.product_family_code,
	  p.product_format_id, pf.product_format_code, 
	  p.product_cat_id, pc.product_cat_code, 
	  p.product_id, 
	  ca.opsys_name, 
	  os.opsys_family_id, 
	  ca.dbms_name, 
	  db.dbms_family_id,
	  pr.processor_name, 
	  pr.processor_mode_id, 
	  pr.processor_family_id
	from 
	   oplweb2.oplweb.product p
  join oplweb2.oplweb.product_category pc on (p.product_cat_id = pc.product_cat_id)
  join oplweb2.oplweb.product_format pf on (p.product_format_id = pf.product_format_id)
  join oplweb2.oplweb.product_family pfam on (pc.product_family_id = pfam.product_family_id)
  join oplweb2.oplweb.component_archive ca on (ca.product_id = p.product_id)
  join oplweb2.oplweb.opsys os on (os.opsys_name = ca.opsys_name)
  join oplweb2.oplweb.dbms_engine db on (db.dbms_name = ca.dbms_name)
  join oplweb2.oplweb.processors pr on (pr.processor_name = os.processor_name and pr.processor_mode_id = os.processor_mode_id)
;

GRANT SELECT ON oplweb2.oplweb.component_archive TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.component_archive_type TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.component_category TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.component_mode TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.component_type TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.components TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.components_for_rdfs TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.dbms_engine TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.dbms_family TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.download_location TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.download_protocol TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.download_partner TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.opsys TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.opsys_family TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.opsys_type TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.processor_family TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.processor_mode TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.processors TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_benefits TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_benefits_category TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_category TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_category_with_code TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_category_features TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_family TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_family_features TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_features TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_format TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_format_features TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_feature_category TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_release TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_release_features TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.vendor_category TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.vendor_category_family TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.vendors TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_formats_categories TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_with_code TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_family_features_with_code TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_format_features_with_code TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_category_features_with_code TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.product_release_with_family TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT SELECT ON oplweb2.oplweb.archive_coverage_osdb TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


drop index oplweb2_product_price_format_cat;

create index oplweb2_product_price_format_cat on oplweb2.oplweb.product_price(product_cat_id, product_format_id, product_price_type_id);

drop index oplweb2_product_discount_format_cat;

create index oplweb2_product_discount_format_cat on oplweb2.oplweb.product_general_discount(product_cat_id, product_format_id, product_price_type_id);

	
drop view oplweb2.DBA.license_model_type;

create view oplweb2.DBA.license_model_type (
	product_release_id, product_cat_id, product_format_id, product_id, product_price_type_id
	)
	as 
	select distinct 
	product_release_id, 
	pp.product_cat_id, pp.product_format_id, product_id,
	product_price_type_id
	from 
	  oplweb2.oplweb.product_price pp, 
	  oplweb2.oplweb.product p
	where p.product_cat_id = pp.product_cat_id and 
	p.product_format_id = pp.product_format_id
	;

grant select on oplweb2.DBA.license_model_type to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;
	


drop view oplweb2.DBA.license_model;

create view oplweb2.DBA.license_model as 
  select  distinct
      product_release_id, 
      pc.product_cat_id, 
      pc.product_format_id, 
      pc.product_cat_code, 
      pc.product_format_code, 
      pc.product_id, 
      pp.opsys_family_id, pp.dbms_family_id,
      replace(oo.opsys_family_name, &#39; &#39;, &#39;&#39;) as opsys_family_name, 
      replace(dd.dbms_family_name,  &#39; &#39;, &#39;&#39;) as dbms_family_name,
      pp.opsys_type_id,
      pp.product_price_type_id,
	  pp.product_price_unit_type_id
    from 
      oplweb2.oplweb.product_price pp,
      oplweb2.oplweb.product_with_code pc, --category pc,
      --oplweb2.oplweb.product_format pf,
      oplweb2.oplweb.opsys os,
      oplweb2.oplweb.dbms_engine dbe,
      oplweb2.oplweb.dbms_family dd, 
      oplweb2.oplweb.opsys_family oo
      --oplweb2.oplweb.product p
    where 
      pp.product_format_id = pc.product_format_id and
      pp.product_cat_id = pc.product_cat_id and
      pp.opsys_family_id = oo.opsys_family_id and 
      pp.dbms_family_id = dd.dbms_family_id 
      --p.product_cat_id = pc.product_cat_id and 
      --p.product_format_id = pf.product_format_id and
  ;

grant select on oplweb2.DBA.license_model to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;


drop view oplweb2.DBA.license_model_units;

create view oplweb2.DBA.license_model_units as 
  select distinct 
      lm1.product_release_id, 
	  lm1.product_id,
	  lm1.opsys_family_
      pp.opsys_family_id, pp.dbms_family_id,
      replace(oo.opsys_family_name, &#39; &#39;, &#39;&#39;) as opsys_family_name, 
      replace(dd.dbms_family_name,  &#39; &#39;, &#39;&#39;) as dbms_family_name,
      pp.opsys_type_id, ot.short_description as opsys_type_code
    from 
      oplweb2.oplweb.product_price pp,
      oplweb2.oplweb.opsys_type ot,
      oplweb2.oplweb.dbms_family dd, 
      oplweb2.oplweb.opsys_family oo
    where 
      pp.opsys_type_id = ot.opsys_type_id and
      pp.opsys_family_id = oo.opsys_family_id and 
      pp.dbms_family_id = dd.dbms_family_id 
      and 
      pp.product_release_id = &#39;6.1&#39;
  ;

grant select on oplweb2.DBA.license_model_units to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;



drop view oplweb2.DBA.product_general_discount_vc;

create view oplweb2.DBA.product_general_discount_vc as 
  select  distinct
      product_release_id, 
      pgd.product_cat_id, pc.product_cat_code, 
      pgd.product_format_id, pc.product_format_code,
	  pc.product_id,
      pgd.opsys_family_id, pgd.dbms_family_id,
      pgd.opsys_type_id,
      product_discount_description,
      product_price_type_id,
      cast(unit_discount as varchar) as unit_discount, 
      discount_start,
      discount_end, 
      discount_token
    from 
      oplweb2.oplweb.product_general_discount pgd,
      oplweb2.oplweb.product_with_code pc
    where 
      pgd.product_format_id = pc.product_format_id and
      pgd.product_cat_id = pc.product_cat_id 
  ;

drop view oplweb2.DBA.product_price_varchar;

create view oplweb2.DBA.product_price_varchar as 
  select 
      pp.product_price_id,
      pp.product_release_id, 
      pp.product_cat_id, pc.product_cat_code, 
      pp.product_format_id, pf.product_format_code,
      pp.opsys_family_id, pp.dbms_family_id,
      replace(oo.opsys_family_name, &#39; &#39;, &#39;&#39;) as opsys_family_name, 
      replace(dd.dbms_family_name,  &#39; &#39;, &#39;&#39;) as dbms_family_name,
      pp.opsys_type_id, ot.short_description as opsys_type_code,
			pp.product_price_type_id, 
      pp.product_price_unit_type_id, cast(pp.unit_price as varchar) as unit_price, 
      pp.component_archive_available
    from 
      oplweb2.oplweb.product_price pp,
      oplweb2.oplweb.product_category pc,
      oplweb2.oplweb.product_format pf,
      oplweb2.oplweb.opsys_type ot,
      oplweb2.oplweb.dbms_family dd, 
      oplweb2.oplweb.opsys_family oo
    where 
      pp.product_format_id = pf.product_format_id and
      pp.product_cat_id = pc.product_cat_id and
      pp.opsys_type_id = ot.opsys_type_id and 
      pp.opsys_family_id = oo.opsys_family_id and 
      pp.dbms_family_id = dd.dbms_family_id 
      --and
      --pp.product_release_id = &#39;6.1&#39;
  ;

grant select on oplweb2.oplweb.product_price to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;
grant select on oplweb2.oplweb.product_price_type to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;
grant select on oplweb2.oplweb.product_price_unit_type to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;
grant select on oplweb2.DBA.product_general_discount_vc to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;
grant select on oplweb2.DBA.product_price_varchar to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;
grant select on oplweb2.DBA.license_model_type to &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;--, rdf;



DB.DBA.RDF_AUDIT_METADATA (1, &#39;*&#39;);
--DB.DBA.RDF_AUDIT_METADATA (2, &#39;*&#39;);

--sparql drop graph &lt;http://www.openlinksw.com/dataspace/organization/openlink/ProductPortfolioOntology/1.0/&gt;;

--possible previous graph now merging with this oplweb graph
sparql drop graph &lt;http://data.openlinksw.com/shop_pricing/&gt;;

--others that have a dependency on this graph that may need kicking first
--sparql drop graph &lt;http://data.openlinksw.com/customer/&gt;;
--sparql drop graph &lt;http://data.openlinksw.com/support/&gt;;
--sparql drop graph &lt;http://data.openlinksw.com/shop_pricing/&gt;;

sparql drop graph &lt;http://www.openlinksw.com/schemas/oplweb#&gt; ;

sparql drop graph &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb#&gt; ;
sparql drop graph &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; ;


-- should now use &lt;http://www.openlinksw.com/dataspace/organization/openlink#this&gt;

sparql drop quad map virtrdf:product_portfolio ;

--only use this if you really really mean it, it will totally nuke your RDF data, useful on 
--test boxes in a bit of jam (hasn&#39;t happened to me for a while now)
--rdf_global_reset();

--utility for stripping url killing stuff from friendly strings used as ids
create function oplweb2.oplweb.FIXUP4URI (in _string varchar) 
	returns varchar
	{
	  declare _s varchar;
      _s := replace (_string, &#39; &#39;, &#39;&#39;);
      _s := replace (_s, &#39;&amp;&#39;, &#39;_&#39;);
      _s := replace (_s, &#39;/&#39;, &#39;&#39;);
      return _s;
	}
	;
	
--URI-IRI mapping functions	
create function oplweb2.oplweb.DOWNLOAD_LOCATION_URI (in uri varchar)
returns varchar
{
  return sprintf(&#39;http://data.openlinksw.com/oplweb/download_location/%s#this&#39;, 
  	replace(uri, &#39;http://&#39;, &#39;&#39;));
};

create function oplweb2.oplweb.DOWNLOAD_LOCATION_URI_INVERSE (in dl_iri varchar)
returns varchar
{
  declare parts any;

  parts := sprintf_inverse(dl_iri,
  	&#39;http://data.openlinksw.com/oplweb/download_location/%s#this&#39;, 1);
  if (parts is not null)
    {
      return sprintf(&#39;http://%s&#39;, parts[0]);
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.DOWNLOAD_LOCATION_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.DOWNLOAD_LOCATION_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.DBMS_FAMILY_URI (in _family_id integer)
returns varchar
{
  declare _family_string varchar;
  select dbms_family_name into _family_string 
    from oplweb2.oplweb.dbms_family 
    where dbms_family_id = _family_id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/dbms_family/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_family_string));
};

create function oplweb2.oplweb.DBMS_FAMILY_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _family_id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/dbms_family/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 dbms_family_id into _family_id from oplweb2.oplweb.dbms_family 
        where lower(oplweb2.oplweb.FIXUP4URI(dbms_family_name)) = lower(parts[0]);
      return _family_id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.DBMS_FAMILY_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.DBMS_FAMILY_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.COMPONENT_CATEGORY_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.component_category 
    where component_category_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/component_category/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.COMPONENT_CATEGORY_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/component_category/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 component_category_id into _id from oplweb2.oplweb.component_category 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.COMPONENT_CATEGORY_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.COMPONENT_CATEGORY_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.COMPONENT_MODE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.component_mode 
    where component_mode_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/component_mode/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.COMPONENT_MODE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/component_mode/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 component_mode_id into _id from oplweb2.oplweb.component_mode 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.COMPONENT_MODE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.COMPONENT_MODE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.COMPONENT_TYPE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.component_type 
    where component_type_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/component_type/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.COMPONENT_TYPE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/component_type/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 component_type_id into _id from oplweb2.oplweb.component_type 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.COMPONENT_TYPE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.COMPONENT_TYPE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;



create function oplweb2.oplweb.COMPONENT_ARCHIVE_TYPE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select component_archive_short_name into _string 
    from oplweb2.oplweb.component_archive_type 
    where component_archive_type_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/component_archive_type/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.COMPONENT_ARCHIVE_TYPE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/component_archive_type/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 component_archive_type_id into _id from oplweb2.oplweb.component_archive_type 
        where lower(oplweb2.oplweb.FIXUP4URI(component_archive_short_name)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.COMPONENT_ARCHIVE_TYPE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.COMPONENT_ARCHIVE_TYPE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;



create function oplweb2.oplweb.FEATURE_BENEFIT_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select product_benefit_desc into _string 
    from oplweb2.oplweb.product_benefits 
    where product_benefit_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/feature_benefit/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.FEATURE_BENEFIT_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/feature_benefit/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_benefit_id into _id from oplweb2.oplweb.product_benefits 
        where lower(oplweb2.oplweb.FIXUP4URI(product_benefit_desc)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.FEATURE_BENEFIT_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.FEATURE_BENEFIT_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;



create function oplweb2.oplweb.OPSYS_FAMILY_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select opsys_family_name into _string 
    from oplweb2.oplweb.opsys_family
    where opsys_family_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/opsys_family/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.OPSYS_FAMILY_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/opsys_family/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 opsys_family_id into _id from oplweb2.oplweb.opsys_family
        where lower(oplweb2.oplweb.FIXUP4URI(opsys_family_name)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.OPSYS_FAMILY_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.OPSYS_FAMILY_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;



create function oplweb2.oplweb.OPSYS_TYPE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.opsys_type
    where opsys_type_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/opsys_type/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.OPSYS_TYPE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/opsys_type/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 opsys_type_id into _id from oplweb2.oplweb.opsys_type 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.OPSYS_TYPE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.OPSYS_TYPE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PROCESSOR_FAMILY_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select processor_family_name into _string 
    from oplweb2.oplweb.processor_family
    where processor_family_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/processor_family/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PROCESSOR_FAMILY_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/processor_family/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 processor_family_id into _id from oplweb2.oplweb.processor_family 
        where lower(oplweb2.oplweb.FIXUP4URI(processor_family_name)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PROCESSOR_FAMILY_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PROCESSOR_FAMILY_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;

--FIXME might have to do something with possible &amp; symbols
create function oplweb2.oplweb.PROCESSOR_MODE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select processor_mode_name into _string 
    from oplweb2.oplweb.processor_mode
    where processor_mode_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/processor_mode/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PROCESSOR_MODE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/processor_mode/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 processor_mode_id into _id from oplweb2.oplweb.processor_mode 
        where lower(oplweb2.oplweb.FIXUP4URI(processor_mode_name)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PROCESSOR_MODE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PROCESSOR_MODE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PRODUCT_CATEGORY_FEATURE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.product_category_features 
    where product_category_feature_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/product_category_feature/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PRODUCT_CATEGORY_FEATURE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/product_category_feature/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_category_feature_id into _id from oplweb2.oplweb.product_category_features 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_CATEGORY_FEATURE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_CATEGORY_FEATURE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PRODUCT_FAMILY_FEATURE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.product_family_features 
    where product_family_feature_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/product_family_feature/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PRODUCT_FAMILY_FEATURE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/product_family_feature/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_family_feature_id into _id from oplweb2.oplweb.product_family_features 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_FAMILY_FEATURE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_FAMILY_FEATURE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PRODUCT_FEATURE_CATEGORY_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_desc into _string 
    from oplweb2.oplweb.product_feature_category 
    where product_feature_category_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/product_feature_category/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PRODUCT_FEATURE_CATEGORY_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/product_feature_category/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_feature_category_id into _id from oplweb2.oplweb.product_feature_category 
        where lower(oplweb2.oplweb.FIXUP4URI(short_desc)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_FEATURE_CATEGORY_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_FEATURE_CATEGORY_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PRODUCT_FEATURE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.product_features 
    where product_feature_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/product_feature/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PRODUCT_FEATURE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/product_feature/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_feature_id into _id from oplweb2.oplweb.product_features 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_FEATURE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_FEATURE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PRODUCT_FORMAT_FEATURE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.product_format_features 
    where product_format_feature_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/product_format_feature/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PRODUCT_FORMAT_FEATURE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/product_format_feature/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_format_feature_id into _id from oplweb2.oplweb.product_format_features 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_FORMAT_FEATURE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_FORMAT_FEATURE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PRODUCT_RELEASE_FEATURE_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select short_description into _string 
    from oplweb2.oplweb.product_release_features 
    where product_release_feature_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/product_release_feature/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PRODUCT_RELEASE_FEATURE_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/product_release_feature/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_release_feature_id into _id from oplweb2.oplweb.product_release_features 
        where lower(oplweb2.oplweb.FIXUP4URI(short_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_RELEASE_FEATURE_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_RELEASE_FEATURE_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PRODUCT_BENEFIT_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select product_benefit_desc into _string 
    from oplweb2.oplweb.product_benefits 
    where product_benefit_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/product_benefit/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PRODUCT_BENEFIT_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/product_benefit/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_benefit_id into _id from oplweb2.oplweb.product_benefits 
        where lower(oplweb2.oplweb.FIXUP4URI(product_benefit_desc)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_BENEFIT_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_BENEFIT_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.PRODUCT_BENEFIT_CATEGORY_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select description into _string 
    from oplweb2.oplweb.product_benefits_category 
    where product_benefit_category_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/product_benefit_category/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.PRODUCT_BENEFIT_CATEGORY_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/product_benefit_category/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 product_benefit_category_id into _id from oplweb2.oplweb.product_benefits_category 
        where lower(oplweb2.oplweb.FIXUP4URI(description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_BENEFIT_CATEGORY_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.PRODUCT_BENEFIT_CATEGORY_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.VENDOR_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select vendor_name into _string 
    from oplweb2.oplweb.vendors 
    where vendor_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/vendor/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.VENDOR_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/vendor/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 vendor_id into _id from oplweb2.oplweb.vendors 
        where lower(oplweb2.oplweb.FIXUP4URI(vendor_name)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.VENDOR_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.VENDOR_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.VENDOR_CATEGORY_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select vendor_category_description into _string 
    from oplweb2.oplweb.vendor_category 
    where vendor_category_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/vendor_category/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.VENDOR_CATEGORY_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/vendor_category/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 vendor_category_id into _id from oplweb2.oplweb.vendor_category 
        where lower(oplweb2.oplweb.FIXUP4URI(vendor_category_description)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.VENDOR_CATEGORY_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.VENDOR_CATEGORY_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.VENDOR_CATEGORY_FAMILY_URI (in _id integer)
returns varchar
{
  declare _string varchar;
  select vendor_category_family_desc into _string 
    from oplweb2.oplweb.vendor_category_family 
    where vendor_category_family_id = _id ;

  return sprintf(&#39;http://data.openlinksw.com/oplweb/vendor_category_family/%s#this&#39;, 
  	oplweb2.oplweb.FIXUP4URI(_string));
};

create function oplweb2.oplweb.VENDOR_CATEGORY_FAMILY_URI_INVERSE (in _iri varchar)
returns integer
{
  declare parts any;
  declare _id integer;

  parts := sprintf_inverse(_iri,
  	&#39;http://data.openlinksw.com/oplweb/vendor_category_family/%s#this&#39;, 1);
  if (parts is not null)
    {
      declare exit handler for not found return null;
      select top 1 vendor_category_family_id into _id from oplweb2.oplweb.vendor_category_family 
        where lower(oplweb2.oplweb.FIXUP4URI(vendor_category_family_desc)) = lower(parts[0]);
      return _id;
    }
  return NULL;
};

GRANT EXECUTE ON oplweb2.oplweb.VENDOR_CATEGORY_FAMILY_URI TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON oplweb2.oplweb.VENDOR_CATEGORY_FAMILY_URI_INVERSE TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;





create function oplweb2.oplweb.LIT_PRODUCT_RELEASE_LABEL (
	in _product_id varchar, in _id integer, in _opsys_name varchar, in _dbms_name varchar
	)
returns varchar
{
  declare _string varchar;
  select &#39;OpenLink &#39; || poduct_description || &#39; (Release &#39; || product_release_id || &#39;) on &#39; || commercial_name into _string 
    from oplweb2.oplweb.product_release pr,
      oplweb2.oplweb.product p,
      oplweb2.oplweb.opsys o  
    where 
      p.product_id = pr.product_id and 
      o.opsys_name = pr.opsys_name and
      pr.product_release_id = _id and
      pr.product_id = _product_id and 
      pr.opsys_name = _opsys_name and 
      pr.dbms_name = _dbms_name ;

  return _string;
};

GRANT EXECUTE ON oplweb2.oplweb.LIT_PRODUCT_RELEASE_LABEL TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.LIT_FORMAT_CAT_LABEL (
	in _format integer, in _cat integer
	)
returns varchar
{
  declare _string varchar;
  select top 1 &#39;OpenLink &#39; || cast(product_format_description as varchar) || &#39; &#39; || cast(product_category_description as varchar) into _string 
    from 
      oplweb2.oplweb.product_formats_categories fc,
      oplweb2.oplweb.product_format f,
      oplweb2.oplweb.product_category c
    where 
fc.product_format_id = f.product_format_id and 
fc.product_cat_id = c.product_cat_id and
    fc.product_format_id = _format and 
    fc.product_cat_id = _cat;

  return _string;
};

GRANT EXECUTE ON oplweb2.oplweb.LIT_FORMAT_CAT_LABEL TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.LITRDF_openlink_logo (in _code varchar)
returns varchar
{
  declare _string varchar;
  select top 1 product_family_logo_url into _string 
    from oplweb2.oplweb.product_family
    where product_family_code = _code;

  return _string;
};

GRANT EXECUTE ON oplweb2.oplweb.LITRDF_openlink_logo TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.LITRDF_homepage (in _code varchar)
returns varchar
{
  declare _string varchar;
  select top 1 product_family_homepage into _string 
    from oplweb2.oplweb.product_family
    where product_family_code = _code;

  return _string;
};

GRANT EXECUTE ON oplweb2.oplweb.LITRDF_homepage TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.LITRDF_opsys_icon (in _id integer)
returns varchar
{
  declare _string varchar; _string := &#39;&#39;;
  select top 1 opsys_icon_name into _string 
    from oplweb2.oplweb.opsys_family
    where opsys_family_id = _id;

  _string := &#39;http://download.openlinksw.com/download/images/&#39;||_string;

  return _string;
};

GRANT EXECUTE ON oplweb2.oplweb.LITRDF_opsys_icon TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.LITRDF_to_shop (
	in release_id varchar,
	in product_id varchar,
	in opsys varchar, 
	in dbms varchar
	)
returns varchar
{
  declare _string varchar; _string := &#39;&#39;;
  declare _cat, _format, _prod varchar;

  _prod := product_id;

  select top 1 cast(product_cat_id as varchar), cast(product_format_id as varchar)
      into _cat, _format
    from oplweb2.oplweb.product p
    where p.product_id = _prod;

  _string := sprintf(
	&#39;https://shop.openlinksw.com/?product_release_id=%s&amp;product=%s&amp;product_cat=%V&amp;product_format=%V&amp;os=%s&amp;db=%s&amp;buyme=yes&#39;,
	release_id, product_id, _cat, _format, opsys, dbms
	);
  
  return _string;
};

GRANT EXECUTE ON oplweb2.oplweb.LITRDF_to_shop TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
  

create function oplweb2.oplweb.LITRDF_license_model_type (
		in _product_price_type_id integer
	)
returns varchar
{
  declare _string varchar; _string := &#39;&#39;;

  select top 1 product_price_type_description into _string from oplweb2.oplweb.product_price_type 
    where product_price_type_id = _product_price_type_id;

  return _string || &#39; License&#39;;
};

GRANT EXECUTE ON oplweb2.oplweb.LITRDF_license_model_type TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
  

create function oplweb2.oplweb.LITRDF_license_model_explain (
		in _product_price_type_id integer
	)
returns varchar
{
  declare _string varchar; _string := &#39;&#39;;

  select top 1 product_price_type_long_description into _string from oplweb2.oplweb.product_price_type 
    where product_price_type_id = _product_price_type_id;

  return _string;
};

GRANT EXECUTE ON oplweb2.oplweb.LITRDF_license_model_explain TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;


create function oplweb2.oplweb.LITRDF_shop_sample (
	in release_id varchar,
	in product_id varchar,
	in opsys varchar, 
	in dbms varchar
	)
returns varchar
{
  declare _string varchar; _string := &#39;&#39;;
  declare _cat, _format, _prod, _pricetype varchar;

  _prod := product_id;

  select top 1 cast(product_cat_id as varchar), cast(product_format_id as varchar), cast(product_price_type_id as varchar)
      into _cat, _format, _pricetype
    from oplweb2.DBA.license_model p, oplweb2.oplweb.opsys o, oplweb2.oplweb.dbms_engine e
    where p.product_id = _prod and product_release_id = release_id and o.opsys_name = opsys and e.dbms_name = dbms
      and p.dbms_family_id = e.dbms_family_id and o.opsys_family_id = p.opsys_family_id;

  _string := sprintf(
	&#39;https://shop.openlinksw.com/price_calc.vsp?release=%s&amp;cat=%V&amp;format=%V&amp;os=%s&amp;db=%s&amp;lictype=%V&#39;,
	release_id, _cat, _format, opsys, dbms, _pricetype
	);
  
  return http_client(_string);
};

GRANT EXECUTE ON oplweb2.oplweb.LITRDF_shop_sample TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
</programlisting><para> </para>
<programlisting>-- $Id: oplweb_rdf_view_def.sql,v 1.2 2008/10/31 10:44:42 oplmis Exp $
-- Setup script for Linked Data View of OpenLink Product Portfolio version 2
--

--
-- This view is currently designed to SPECIFICALLY load on data.openlinksw.com.  The default URI macro has NOT 
-- been used here because it makes no sense on the target box which is actually my.usnet.private:8891 or 
-- something similar.  If you want to use this view on another box, a simple search-replace should do the trick,
-- but search-replace just`data.openlinksw.com&#39; because http:// is sometimes encoded and you would miss it.
-- 
-- 

  
  

sparql drop quad map virtrdf:product_portfolio2 ;
sparql drop quad map virtrdf:product_portfolio ;

sparql

prefix opl: &lt;http://www.openlinksw.com/schemas/oplweb#&gt;

drop iri class opl:DownloadLocation .
drop iri class opl:ComponentCategory .
drop iri class opl:Component .
drop iri class opl:ComponentArchive .
drop iri class opl:ComponentArchiveType .
drop iri class opl:ComponentCategory .
drop iri class opl:ComponentMode .
drop iri class opl:ComponentType .
drop iri class opl:DbmsEngine .
drop iri class opl:DbmsFamily .
drop iri class opl:DownloadProtocol .
drop iri class opl:DownloadPartner .
drop iri class opl:FeatureBenefit .
drop iri class opl:Opsys .
drop iri class opl:OpsysFamily .
drop iri class opl:OpsysType .
drop iri class opl:Processor .
drop iri class opl:ProcessorFamily .
drop iri class opl:ProcessorMode .
drop iri class opl:ProductRelease .
drop iri class opl:Product .
drop iri class opl:ProductCategory .
drop iri class opl:ProductCategoryFeature .
drop iri class opl:ProductPortfolio .
drop iri class opl:ProductFamily .
drop iri class opl:ProductFamilyFeature .
drop iri class opl:ProductFeatureCategory .
drop iri class opl:ProductFeature .
drop iri class opl:ProductFormat .
drop iri class opl:ProductFormatCategory .
drop iri class opl:ProductFormatFeature .
drop iri class opl:ProductReleaseFeature .
drop iri class opl:ProductBenefit .
drop iri class opl:ProductBenefitCategory .
drop iri class opl:Vendor .
drop iri class opl:VendorCategory .
drop iri class opl:VendorCategoryFamily .
drop iri class opl:PriceType .
drop iri class opl:PriceUnitType .
drop iri class opl:PriceUnitIncrementalDiscount .
drop iri class opl:ProductPrice .
drop iri class opl:LicenseType .
drop iri class opl:LicenseModel .
drop iri class opl:LicenseClass .
drop iri class opl:Discount .
drop literal class opl:lit_product_release_label .
drop literal class opl:lit_format_cat_label .
drop literal class opl:lit_openlink_logo .
drop iri class opl:lit_openlink_logo .
drop literal class opl:lit_homepage .
drop iri class opl:lit_homepage .
drop literal class opl:lit_opsys_icon .
drop iri class opl:lit_opsys_icon .
drop literal class opl:lit_to_shop .
drop iri class opl:lit_to_shop .
drop literal class opl:lit_license_model_type .
drop literal class opl:lit_license_model_explain .
drop literal class opl:lit_shop_sample .
drop literal class opl:lit_wikipedia_to_dbpedia .
drop iri class opl:lit_wikipedia_to_dbpedia .
drop literal class opl:lit_to_string .
drop iri class opl:wwwsitefamily .
drop iri class opl:wwwsiteformat .
drop iri class opl:wwwsitecategory .
drop iri class opl:wwwsiteproduct .
;

DB.DBA.RDF_AUDIT_METADATA (1, &#39;*&#39;);


sparql

prefix opl: &lt;http://www.openlinksw.com/schemas/oplweb#&gt;

create iri class opl:Component &quot;http://data.openlinksw.com/oplweb/component/%s#this&quot;
	(in component_name varchar not null) .

create iri class opl:ComponentArchive &quot;http://data.openlinksw.com/oplweb/component_archive/%s#this&quot;
	(in component_archive_name varchar not null) .

create iri class opl:ComponentArchiveType using
	function oplweb2.oplweb.COMPONENT_CATEGORY_URI (in _id integer not null)
		returns varchar,
	function oplweb2.oplweb.COMPONENT_CATEGORY_URI_INVERSE (in _iri varchar)
		returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/component_archive_type/%s#this&#39; ).
		

create iri class opl:ComponentCategory using
	function oplweb2.oplweb.COMPONENT_CATEGORY_URI (in _id integer not null)
		returns varchar,
	function oplweb2.oplweb.COMPONENT_CATEGORY_URI_INVERSE (in _iri varchar)
		returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/component_category/%s#this&#39; ).

create iri class opl:ComponentMode using
	function oplweb2.oplweb.COMPONENT_MODE_URI (in _id integer not null)
		returns varchar,
	function oplweb2.oplweb.COMPONENT_MODE_URI_INVERSE (in _iri varchar)
		returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/component_mode/%s#this&#39; ).
				
create iri class opl:ComponentType using
	function oplweb2.oplweb.COMPONENT_TYPE_URI (in _id integer not null)
		returns varchar,
	function oplweb2.oplweb.COMPONENT_TYPE_URI_INVERSE (in _iri varchar)
		returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/component_type/%s#this&#39; ).

create iri class opl:DbmsFamily using
	function oplweb2.oplweb.DBMS_FAMILY_URI (in _family_id integer not null)
		returns varchar,
	function oplweb2.oplweb.DBMS_FAMILY_URI_INVERSE (in _iri varchar)
		returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/dbms_family/%s#this&#39; ).

create iri class opl:DbmsEngine &quot;http://data.openlinksw.com/oplweb/dbms_engine/%s#this&quot;
	(in dbms_name varchar not null) .

create iri class opl:DownloadLocation using
	function oplweb2.oplweb.DOWNLOAD_LOCATION_URI (in uri varchar not null)
		returns varchar,
	function oplweb2.oplweb.DOWNLOAD_LOCATION_URI_INVERSE (in dl_iri varchar)
		returns varchar 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/download_location/%s#this&#39; ).

create iri class opl:DownloadProtocol &quot;http://data.openlinksw.com/oplweb/download_protocol/%s#this&quot;
	(in protocol_name varchar not null) .

create iri class opl:DownloadPartner &quot;http://data.openlinksw.com/oplweb/download_partner/%s/%s#this&quot;
	(
	  in host_name varchar not null, 
	  in domain_name varchar not null
	) .

create iri class opl:FeatureBenefit using
  function oplweb2.oplweb.FEATURE_BENEFIT_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.FEATURE_BENEFIT_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/feature_benefit/%s#this&#39; ).

create iri class opl:Opsys &quot;http://data.openlinksw.com/oplweb/opsys/%s#this&quot;
	(in opsys_name varchar not null) .

create iri class opl:OpsysFamily 	using
  function oplweb2.oplweb.OPSYS_FAMILY_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.OPSYS_FAMILY_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/opsys_family/%s#this&#39; ).

create iri class opl:OpsysType 			using
  function oplweb2.oplweb.OPSYS_TYPE_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.OPSYS_TYPE_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/opsys_type/%s#this&#39; ).

create iri class opl:Processor &quot;http://data.openlinksw.com/oplweb/processor/%s/%d#this&quot;
	(in processor_name varchar not null, in processor_mode_id integer not null) .

create iri class opl:ProcessorFamily 	using
  function oplweb2.oplweb.PROCESSOR_FAMILY_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PROCESSOR_FAMILY_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/processor_family/%s#this&#39; ).

create iri class opl:ProcessorMode 			using
  function oplweb2.oplweb.PROCESSOR_MODE_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PROCESSOR_MODE_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/processor_mode/%s#this&#39; ).

create iri class opl:Product &quot;http://data.openlinksw.com/oplweb/product/%s#this&quot;
	(in product_id varchar not null) .

create iri class opl:ProductCategory &quot;http://data.openlinksw.com/oplweb/product_category/%s#this&quot;
	(in product_cat_code varchar not null) .

create iri class opl:ProductCategoryFeature 	using
  function oplweb2.oplweb.PRODUCT_CATEGORY_FEATURE_URI (in _id integer not null) returns varchar,
		function oplweb2.oplweb.PRODUCT_CATEGORY_FEATURE_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/product_category_feature/%s#this&#39; ).

create iri class opl:ProductPortfolio &quot;http://data.openlinksw.com/oplweb/portfolio/%s#this&quot;
	(in x varchar not null) .

create iri class opl:ProductFamily &quot;http://data.openlinksw.com/oplweb/product_family/%s#this&quot;
	(in product_family_code varchar not null) .

create iri class opl:ProductFamilyFeature 	using
  function oplweb2.oplweb.PRODUCT_FAMILY_FEATURE_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PRODUCT_FAMILY_FEATURE_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/product_family_feature/%s#this&#39; ).

create iri class opl:ProductFeatureCategory 			using
  function oplweb2.oplweb.PRODUCT_FEATURE_CATEGORY_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PRODUCT_FEATURE_CATEGORY_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/product_feature_category/%s#this&#39; ).

create iri class opl:ProductFeature 					using
  function oplweb2.oplweb.PRODUCT_FEATURE_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PRODUCT_FEATURE_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/product_feature/%s#this&#39; ).

create iri class opl:ProductFormat &quot;http://data.openlinksw.com/oplweb/product_format/%s#this&quot;
	(in product_format_code varchar not null) .

create iri class opl:ProductFormatCategory &quot;http://data.openlinksw.com/oplweb/product_format_category/%s/%s#this&quot;
	(in product_format_code varchar not null, in product_cat_code varchar not null) .
		
create iri class opl:ProductFormatFeature 	using
  function oplweb2.oplweb.PRODUCT_FORMAT_FEATURE_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PRODUCT_FORMAT_FEATURE_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/product_format_feature/%s#this&#39; ).

create iri class opl:ProductReleaseFeature 			using
  function oplweb2.oplweb.PRODUCT_RELEASE_FEATURE_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PRODUCT_RELEASE_FEATURE_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/product_release_feature/%s#this&#39; ).

create iri class opl:ProductBenefit 					using
  function oplweb2.oplweb.PRODUCT_BENEFIT_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PRODUCT_BENEFIT_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/product_benefit/%s#this&#39; ).

create iri class opl:ProductBenefitCategory 							using
  function oplweb2.oplweb.PRODUCT_BENEFIT_CATEGORY_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.PRODUCT_BENEFIT_CATEGORY_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/product_benefit_category/%s#this&#39; ).

create iri class opl:ProductRelease &quot;http://data.openlinksw.com/oplweb/product_release/%s/%s/%s/%s#this&quot;
	(
	 in product_id varchar not null,
	 in product_release_id varchar not null,
	 in opsys_name varchar not null,
	 in dbms_name varchar not null
	) .

create iri class opl:Vendor 	using
  function oplweb2.oplweb.VENDOR_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.VENDOR_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/vendor/%s#this&#39; ).

create iri class opl:VendorCategory 			using
  function oplweb2.oplweb.VENDOR_CATEGORY_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.VENDOR_CATEGORY_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/vendor_category/%s#this&#39; ).

create iri class opl:VendorCategoryFamily 					using
  function oplweb2.oplweb.VENDOR_CATEGORY_FAMILY_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.VENDOR_CATEGORY_FAMILY_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/vendor_category_family/%s#this&#39; ).

create iri class opl:PriceType &quot;http://data.openlinksw.com/oplweb/price_type/%d#this&quot;
    (in product_price_type_id integer not null) .

create iri class opl:LicenseType using 
  function oplweb2.oplweb.LICENSE_MODEL_TYPE_URI (in _id integer not null) returns varchar,
  function oplweb2.oplweb.LICENSE_MODEL_TYPE_URI_INVERSE (in _iri varchar) returns integer 
	option (bijection, returns &#39;http://data.openlinksw.com/oplweb/license_type/%s#this&#39; ).

create iri class opl:PriceUnitType &quot;http://data.openlinksw.com/oplweb/price_unit_type/%s_%s_%d_%d_%d_%s#this&quot;
    (
    in product_release_id varchar not null, 
    in product_id varchar not null,
    in opsys_family_id integer not null,
    in dbms_family_id integer not null,
    in product_price_type_id integer not null,
	in product_price_unit_type_id varchar not null) .

create iri class opl:PriceUnitIncrementalDiscount &quot;http://data.openlinksw.com/oplweb/price_unit_discount/%s_%s_%d_%d_%d_%s#this&quot;
    (
    in product_release_id varchar not null, 
    in product_id varchar not null,
    in opsys_family_id integer not null,
    in dbms_family_id integer not null,
    in product_price_type_id integer not null,
	in product_price_unit_type_id varchar not null) .

create iri class opl:ProductPrice &quot;http://data.openlinksw.com/oplweb/product_price/%d#this&quot;
    (in product_price_id integer not null) .


create iri class opl:LicenseModel &quot;http://data.openlinksw.com/oplweb/license_model/%s_%s_%d_%d_%d#this&quot;
    (
      in product_release_id varchar not null, 
      in product_id varchar not null,
      in opsys_family_id integer not null,
      in dbms_family_id integer not null,
	  in product_price_type_id integer not null
    ) .

create iri class opl:Discount &quot;http://data.openlinksw.com/oplweb/discount/%s/%d/%s/%d/%d/%d#this&quot;
    (
      in product_release_id varchar not null, 
      in opsys_type_id integer not null, 
      in product_id varchar not null,
      in opsys_family_id integer not null,
      in dbms_family_id integer not null,
      in product_price_type_id integer not null
    ) .

create iri class opl:wwwsitefamily &quot;http://%s.openlinksw.com/&quot;
    (
      in product_family_code varchar not null
    ) .

create iri class opl:wwwsitecategory &quot;http://%s.openlinksw.com/%s/&quot;
    (
      in product_family_code varchar not null,
      in product_category_code varchar not null
    ) .

create iri class opl:wwwsiteformat using 
    function oplweb2.oplweb.wwwsiteformat_URI (
      in product_category_code varchar,
      in product_format_code varchar
    ) 
	  returns varchar .

create iri class opl:Uri &quot;%s&quot;
    ( in uri varchar not null
		) .
		
create literal class opl:lit_product_release_label using 
	function oplweb2.oplweb.LIT_PRODUCT_RELEASE_LABEL(
		in _product_id varchar, in _id varchar, in _opsys_name varchar, in _dbms_name varchar
		)
	returns varchar .

create literal class opl:lit_format_cat_label using 
	function oplweb2.oplweb.LIT_FORMAT_CAT_LABEL(
		in _format integer, in _cat integer
		)
	returns varchar .
	
create iri class opl:lit_openlink_logo using 
  function oplweb2.oplweb.LITRDF_openlink_logo(
    in _code varchar
  )
	returns varchar .

create iri class opl:lit_homepage using 
  function oplweb2.oplweb.LITRDF_homepage(
    in _code varchar
  )
	returns varchar .

create iri class opl:lit_opsys_icon using 
  function oplweb2.oplweb.LITRDF_opsys_icon(
    in _id integer
  )
	returns varchar .

create iri class opl:lit_to_shop using 
  function oplweb2.oplweb.LITRDF_to_shop(
	in release_id varchar,
	in product_id varchar,
	in opsys varchar, 
	in dbms varchar
  )
  returns varchar .	

create literal class opl:lit_license_model_type using 
	function oplweb2.oplweb.LITRDF_license_model_type (
		in _product_price_type_id integer
	)
	returns varchar .

create literal class opl:lit_license_model_explain using 
	function oplweb2.oplweb.LITRDF_license_model_explain (
		in _product_price_type_id integer
	)
	returns varchar .

create literal class opl:lit_shop_sample using 
	function oplweb2.oplweb.LITRDF_shop_sample (
	  in release_id varchar,
	  in product_id varchar,
	  in opsys varchar, 
  	  in dbms varchar
	)
	returns varchar .

create iri class opl:lit_wikipedia_to_dbpedia using 
	function oplweb2.oplweb.LITRDF_wikipedia_to_dbpedia (
	  in wikipedia_url varchar
	)
	returns varchar .

create literal class opl:lit_to_string using 
	function oplweb2.oplweb.LITRDF_to_string (
	  in _s varchar
	)
	returns varchar .

create iri class opl:wwwsiteproduct using
  function oplweb2.oplweb.wwwsiteproduct_URI (in _id varchar not null) returns varchar,
  function oplweb2.oplweb.wwwsiteproduct_URI_INVERSE (in _iri varchar) returns varchar 
  .


make opl:ProductCategory 	subclass of opl:ProductFamily .
make opl:Product 			subclass of opl:ProductCategory .
make opl:Product 			subclass of opl:ProductFormat .
make opl:ProductRelease		subclass of opl:Product .
make opl:Opsys		 		subclass of opl:OpsysFamily .
make opl:DbmsEngine		 	subclass of opl:DbmsFamily .

;



DB.DBA.RDF_AUDIT_METADATA (1, &#39;*&#39;);


sparql
prefix opl: &lt;http://www.openlinksw.com/schemas/oplweb#&gt;
prefix dc: &lt;http://purl.org/dc/terms#&gt;
prefix oplsioc: &lt;http://www.openlinksw.com/schemas/oplsioc#&gt;
prefix sioc: &lt;http://rdfs.org/sioc/ns#&gt;
prefix foaf: &lt;http://xmlns.com/foaf/0.1/&gt;
prefix wgs: &lt;http://www.w3.org/2003/01/geo/wgs84_pos#&gt;
prefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
prefix oplds: &lt;http://www.openlinksw.com/dataspace/organization/openlink#&gt;
prefix owl: &lt;http://www.w3.org/2002/07/owl#&gt;
prefix umbel: &lt;http://umbel.org/umbel/sc/&gt;
prefix gr: &lt;http://purl.org/goodrelations/v1#&gt; 
prefix ore: &lt;http://www.openarchives.org/ore/terms/&gt;

alter quad storage virtrdf:DefaultQuadStorage
from oplweb2.oplweb.component_archive as component_archive_tbl
from oplweb2.oplweb.component_archive_type as component_archive_type_tbl
from oplweb2.oplweb.component_category as component_category_tbl text literal component_category_long_description
from oplweb2.oplweb.component_mode as component_mode_tbl
from oplweb2.oplweb.component_type as component_type_tbl
from oplweb2.oplweb.components_for_rdfs as components_tbl
from oplweb2.oplweb.dbms_engine as dbms_engine_tbl
from oplweb2.oplweb.dbms_family as dbms_family_tbl
from oplweb2.oplweb.download_location as download_location_tbl
from oplweb2.oplweb.download_protocol as download_protocol_tbl
from oplweb2.oplweb.download_partner as download_partner_tbl
from oplweb2.oplweb.opsys as opsys_tbl
from oplweb2.oplweb.opsys_family as opsys_family_tbl
from oplweb2.oplweb.opsys_type as opsys_type_tbl
from oplweb2.oplweb.processor_family as processor_family_tbl
from oplweb2.oplweb.processor_mode as processor_mode_tbl
from oplweb2.oplweb.processors as processors_tbl
from oplweb2.oplweb.product as product_tbl text literal long_description
from oplweb2.oplweb.product_benefits as product_benefits_tbl text literal product_benefit_explanation
from oplweb2.oplweb.product_benefits_category as product_benefits_category_tbl 
from oplweb2.oplweb.product_category as product_category_tbl
from oplweb2.oplweb.product_category_features_with_code as product_category_features_tbl text literal long_description
from oplweb2.oplweb.product_family as product_family_tbl
from oplweb2.oplweb.product_family as product_family_tbl_2
from oplweb2.oplweb.product_family_features_with_code as product_family_features_tbl text literal long_description
from oplweb2.oplweb.product_features as product_features_tbl text literal long_description
from oplweb2.oplweb.product_feature_category as product_feature_category_tbl text literal description
from oplweb2.oplweb.product_format_features_with_code as product_format_features_tbl text literal long_description
from oplweb2.oplweb.product_release_features as product_release_features_tbl text literal long_description
from oplweb2.oplweb.product_release_with_family as product_release_tbl
from oplweb2.oplweb.vendor_category as vendor_category_tbl
from oplweb2.oplweb.vendor_category_family as vendor_category_family_tbl
from oplweb2.oplweb.vendors as vendors_tbl
from oplweb2.oplweb.product_formats_categories as product_formats_categories
from oplweb2.oplweb.product_with_code as product_with_code
from oplweb2.oplweb.product_category_with_code as product_category_with_code
from oplweb2.oplweb.product_format as product_format_with_code
from oplweb2.oplweb.product_price as pp
from oplweb2.oplweb.product_price_type as pt
from oplweb2.DBA.license_model_unit_type as put
from oplweb2.DBA.license_model_unit_type as put2
from oplweb2.DBA.license_model as lm
from oplweb2.DBA.license_model as lm2
from oplweb2.DBA.license_model_type as license_model_type_tbl
from oplweb2.DBA.product_price_varchar as ppv
from oplweb2.DBA.product_general_discount_vc as gd
from oplweb2.oplweb.archive_coverage_osdb as ac1
{
	create virtrdf:product_portfolio as
		graph &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt;
	{
  opl:ProductPortfolio(product_family_tbl.product_family_code)
    a opl:ProductPortfolio
    as virtrdf:OplProductPortfolio .
 
  opl:ProductPortfolio(product_family_tbl.product_family_code) opl:hasProductFamilies
    opl:ProductFamily(product_family_tbl.product_family_code)
	as virtrdf:OplProductPortfolioProductFamily .

	  opl:ProductFamily(product_family_tbl.product_family_code) 
	    a opl:ProductFamily
	    as virtrdf:OplProductFamily ;
	  rdfs:label product_family_tbl.product_family_description
	    as virtrdf:rdfsOplProductFamilyDescription ;
	  foaf:name 	product_family_tbl.product_family_description
		    as virtrdf:nameOplProductFamilyDescription ;
	  foaf:logo  opl:lit_openlink_logo(product_family_tbl.product_family_code)
	        as virtrdf:logoOpenLinkSoftware ;
	  foaf:homepage opl:lit_homepage(product_family_tbl.product_family_code)
	        as virtrdf:homepageProductFamily ;
	  foaf:homepage opl:wwwsitefamily(product_family_tbl.product_family_code)
#	    where (
#			^{product_family_tbl.}^.product_family_code = &#39;uda&#39;
#		)
	        as virtrdf:homepageProductFamilyUda ;
	  foaf:maker oplds:this
	        as virtrdf:OplDataspaceOpenLinkUri ;
  	  owl:sameAs product_family_tbl.dbpedia_uri
        as virtrdf:OplFamilyOwlSameAsDBPediaUri ;
	  opl:ProductFamilyCode product_family_tbl.product_family_code
	    as virtrdf:OplProductFamilyCode ;
	  opl:ProductFamilyDescription product_family_tbl.product_family_description
	    as virtrdf:OplProductFamilyDescription ;
	  dc:description opl:lit_to_string(product_family_tbl.long_description)
	    as virtrdf:OplProductFamilyLongDescription 		;
	    ore:isDescribedBy opl: ;
	    ore:isDescribedBy foaf: ;
	    ore:isDescribedBy dc: ;
	    ore:isDescribedBy owl: ;
	    ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy foaf: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy owl: ;
      rdfs:isDefinedBy rdfs: 
		.
	    	  
	  opl:ProductCategory(product_category_with_code.product_cat_code) 
	    a opl:ProductCategory
	    as virtrdf:OplProductCategory ;
	    a opl:ProductFamily
	    as virtrdf:OplProductCategorySubClassOfProductFamily ;
	  rdfs:label product_category_with_code.product_category_description
	    as virtrdf:rdfsOplProductCategoryDescription ;
	  foaf:homepage opl:wwwsitecategory(product_category_with_code.product_family_code, product_category_with_code.product_cat_code)
#	    where (
#			^{product_category_with_code.}^.product_family_code = &#39;uda&#39;
#		)
	        as virtrdf:homepageProductFamilyCategoryUda ;
	  opl:ProductCategoryCode product_category_with_code.product_cat_code
	    as virtrdf:OplProductCategoryCode ;
  	  owl:sameAs product_category_with_code.dbpedia_uri
        as virtrdf:OplCategoryOwlSameAsDBPediaUri ;
	  opl:hasFamily opl:ProductFamily(product_category_with_code.product_family_code)
	    as virtrdf:OplProductCategoryIsOfFamily ; 
	  opl:ProductCategoryDescription product_category_with_code.product_category_description
	    as virtrdf:OplProductCategoryDescription ;
	  dc:description opl:lit_to_string(product_category_with_code.long_description)
	    as virtrdf:OplProductCategoryLongDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      ore:isDescribedBy foaf: ;
      ore:isDescribedBy dc: ;
      ore:isDescribedBy owl: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: ;
      rdfs:isDefinedBy foaf: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy owl: 
		.
	
	  opl:ProductFormat(product_format_with_code.product_format_code) 
	    a opl:ProductFormat
	    as virtrdf:OplProductFormat ;
	  opl:ProductFormatCode product_format_with_code.product_format_code
	    as virtrdf:OplProductFormatCode ;
	  rdfs:label product_format_with_code.product_format_description
	    as virtrdf:rdfsOplProductFormatDescription ;
	  dc:description product_format_with_code.product_format_description
	    as virtrdf:OplProductFormatDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      ore:isDescribedBy dc: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: ;
      rdfs:isDefinedBy dc: 
		.
	
	  opl:ProductFormatCategory(product_formats_categories.product_format_code, product_formats_categories.product_cat_code) 
	    a opl:ProductFormatCategory
	    as virtrdf:OplProductFormatCategory ;
	    a opl:ProductFormat
	    as virtrdf:OplProductFormatCategoryProductFormat ;
	    a opl:ProductCategory
	    as virtrdf:OplProductFormatCategoryProductCategory ;
	  foaf:homepage opl:wwwsiteformat(product_formats_categories.product_cat_code, product_formats_categories.product_format_code)
#	    where (
#			^{product_category_with_code.}^.product_cat_code = ^{product_formats_categories.}^.product_cat_code
#			and
#			^{product_category_with_code.}^.product_family_code = &#39;uda&#39;
#		)
	        as virtrdf:homepageProductFamilyCategoryFormatUda ;
	  opl:ProductFormatCode product_formats_categories.product_format_code
	    as virtrdf:OplProductFormatCategoryFormatCode ;
	  opl:ProductCategoryCode product_formats_categories.product_cat_code
	    as virtrdf:OplProductFormatCategoryCategoryCode ;
      opl:isProductCategory opl:ProductCategory(product_formats_categories.product_cat_code)
        as virtrdf:OplProductFormatCategoryisCategory ;
      opl:isProductFormat opl:ProductFormat(product_formats_categories.product_format_code)
        as virtrdf:OplProductFormatCategoryisFormat ;
	  rdfs:label opl:lit_format_cat_label(product_formats_categories.product_format_id, product_formats_categories.product_cat_id)
	    as virtrdf:rdfsOplProductFormatCategoryDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy foaf: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy foaf: ;
      rdfs:isDefinedBy rdfs: 
		.
	
	
	  opl:ProductCategory(product_category_with_code.product_cat_code) opl:hasProduct
	    opl:Product(product_with_code.product_id)
	      where (^{product_with_code.}^.product_cat_id = ^{product_category_with_code.}^.product_cat_id)
	    as virtrdf:OplProductCategoryIsCategoryOfProduct .
	
	  opl:ProductFormat(product_format_with_code.product_format_code) opl:hasProduct
	    opl:Product(product_with_code.product_id)
	      where (^{product_with_code.}^.product_format_id = ^{product_format_with_code.}^.product_format_id)
	    as virtrdf:OplProductFormatIsFormatOfProduct .
	
	  opl:ProductFamily(product_family_tbl.product_family_code) opl:hasCategory
	    opl:ProductCategory(product_category_with_code.product_cat_code)
	      where (^{product_family_tbl.}^.product_family_id = ^{product_category_with_code.}^.product_family_id)
	    as virtrdf:OplProductFamilyIsFamilyOfProductCategory .
	
	  opl:ProductFamily(product_family_tbl.product_family_code) opl:hasFormat
	    opl:ProductFormat(product_formats_categories.product_format_code)
	      where (
		    ^{product_family_tbl.}^.product_family_id = ^{product_formats_categories.}^.product_family_id
		  )
	    as virtrdf:OplProductFamilyIsFamilyOfProductFormats .

	  opl:ProductFamily(product_family_tbl.product_family_code) opl:otherProductFamilies
	    opl:ProductFamily(product_family_tbl_2.product_family_code)
	      where (
		    ^{product_family_tbl.}^.product_family_id &lt;&gt; ^{product_family_tbl_2.}^.product_family_id
		  )
	    as virtrdf:OplProductFamilyHasOtherProductFamilies .
	
	  opl:ProductFormat(product_format_with_code.product_format_code) opl:hasCategory
	    opl:ProductFormatCategory(product_formats_categories.product_format_code, product_formats_categories.product_cat_code)
	      where (^{product_formats_categories.}^.product_format_id = ^{product_format_with_code.}^.product_format_id)
	    as virtrdf:OplProductFormatIsFormatOfProductFormatCategories .

	  opl:ProductFormatCategory(product_formats_categories.product_format_code, product_formats_categories.product_cat_code) 
	    opl:hasProduct
	    opl:Product(product_with_code.product_id)
	      where (
		    ^{product_with_code.}^.product_cat_id = ^{product_formats_categories.}^.product_cat_id
		    and 
		    ^{product_with_code.}^.product_format_id = ^{product_formats_categories.}^.product_format_id
		  )
	    as virtrdf:OplProductFormatCategoryIsFormatCategoryOfProduct .
	
	
	
	  opl:VendorCategoryFamily(vendor_category_family_tbl.vendor_category_family_id)
	    a opl:VendorCategoryFamily
	    as virtrdf:OplVendorCategoryFamily ;
	  opl:VendorCategoryFamilyDescription vendor_category_family_tbl.vendor_category_family_desc
	    as virtrdf:OplVendorCategoryFamilyDesc .	    
	    
	    
	  opl:VendorCategory(vendor_category_tbl.vendor_category_id)
	    a opl:VendorCategory
	    as virtrdf:OplVendorCategory ;
	    a opl:VendorCategoryFamily
	    as virtrdf:OplVendorCategorySubClassOfVendorCategoryFamily ;
	  rdfs:label vendor_category_tbl.vendor_category_description
	    as virtrdf:rdfsOplVendorCategoryDescription ;
	  opl:VendorCategoryDescription vendor_category_tbl.vendor_category_description
	    as virtrdf:OplVendorCategoryDescription ;
	  opl:isVendorCategoryOf opl:VendorCategoryFamily(vendor_category_tbl.vendor_category_family_id)
	    as virtrdf:OplVendorCategoryIsOfCategoryFamily ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs:;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	  
	  opl:Vendor(vendors_tbl.vendor_id)
	    a opl:Vendor
	    as virtrdf:OplVendor ;
	    a opl:VendorCategory
	    as virtrdf:OplVendorSubClassOfVendorCategory ;
	  rdfs:label vendors_tbl.vendor_name 
	    as virtrdf:rdfsOplVendorsName ;
	  opl:VendorName vendors_tbl.vendor_name 
	    as virtrdf:OplVendorsName ;
	  opl:WikipediaPage opl:Uri(vendors_tbl.wikipedia_url) 
	    as virtrdf:OplVendorsWikipediaUrl ;
	  owl:sameAs opl:lit_wikipedia_to_dbpedia(vendors_tbl.wikipedia_url) 
	    as virtrdf:OplVendorsWikipediaUrlOwlSameAs ;
	  foaf:homepage opl:Uri(vendors_tbl.vendor_homepage)
	    as virtrdf:OplFoafVendorHomepage ;
	  opl:isOfVendorCategory opl:VendorCategory(vendors_tbl.vendor_category_id)
	    as virtrdf:OplVendorIsOfVendorCategory ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      ore:isDescribedBy foaf: ;
      ore:isDescribedBy owl: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: ;
      rdfs:isDefinedBy foaf: ;
      rdfs:isDefinedBy owl: 
		.
	  
	  opl:VendorCategoryFamily(vendor_category_family_tbl.vendor_category_family_id)
	    opl:hasVendorCategory
	    opl:VendorCategory(vendor_category_tbl.vendor_category_id)
	      where (
		    ^{vendor_category_family_tbl.}^.vendor_category_family_id = ^{vendor_category_tbl.}^.vendor_category_family_id
		  )
	    as virtrdf:OplVendorCategoryFamilyHasVendorCategory .

      opl:VendorCategory(vendor_category_tbl.vendor_category_id)
	    opl:hasVendorCategory
  	    opl:Vendor(vendors_tbl.vendor_id)
	      where (
		    ^{vendor_category_tbl.}^.vendor_category_id = ^{vendors_tbl.}^.vendor_category_id
		  )
	    as virtrdf:OplVendorCategoryHasVendors .
	
  	opl:OpsysFamily(opsys_family_tbl.opsys_family_id)
	    a opl:OpsysFamily
	    as virtrdf:OplOpsysFamily ;
	  rdfs:label opsys_family_tbl.opsys_family_name
  	  as virtrdf:rdfsOplOpsysFamilyName ;
	  opl:OpsysFamilyName opsys_family_tbl.opsys_family_name
  	  as virtrdf:OplOpsysFamilyName ;
  	opl:OpsysFamilyLicenseCode opsys_family_tbl.opsys_license_code
	    as virtrdf:OplOpsysFamilyLicenseCode ;
	  opl:OpsysFamilyVendor opl:Vendor(opsys_family_tbl.vendor_id)
  	  as virtrdf:OplOpsysFamilyVendor ;
  	opl:OpsysFamilyRating opsys_family_tbl.rating
	    as virtrdf:OplOpsysFamilyRating ;
	foaf:logo opl:lit_opsys_icon(opsys_family_tbl.opsys_family_id)
	  as virtrdf:OplLogoOpsysFamily ;
	foaf:homepage opl:Uri(opsys_family_tbl.wikipedia_url)
	  as virtrdf:FoafHomepageOpsysFamilyWikipediaUrl ;
	owl:sameAs opl:lit_wikipedia_to_dbpedia(opsys_family_tbl.wikipedia_url)
	  as virtrdf:FoafHomepageOpsysFamilyPediaUrlOwlSameAs ;
	opl:WikipediaPage opl:Uri(opsys_family_tbl.wikipedia_url)
	  as virtrdf:OplOpsysFamilyWikipediaUrl ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      ore:isDescribedBy foaf: ;
      ore:isDescribedBy owl: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: ;
      rdfs:isDefinedBy foaf: ;
      rdfs:isDefinedBy owl: 
		.
  	
	  opl:OpsysFamily(opsys_family_tbl.opsys_family_id) opl:hasOpsys
	    opl:Opsys(opsys_tbl.opsys_name)
	    where (^{opsys_tbl.}^.opsys_family_id = ^{opsys_family_tbl.}^.opsys_family_id)
	    as virtrdf:OplOpsysFamilyIsOpsysFamilyOfOpsys .
  	
  	
	  opl:DbmsFamily(dbms_family_tbl.dbms_family_id)
  	  a opl:DbmsFamily
	    as virtrdf:OplDbmsFamily ;
	  rdfs:label dbms_family_tbl.dbms_family_name
  	  as virtrdf:rdfsOplDbmsFamilyName ;
	  opl:DbmsFamilyName dbms_family_tbl.dbms_family_name
  	  as virtrdf:OplDbmsFamilyName ;
  	opl:DbmsFamilyVendor opl:Vendor(dbms_family_tbl.vendor_id)
      as virtrdf:OplDbmsFamilyVendor ;
	foaf:homepage opl:Uri(dbms_family_tbl.wikipedia_url)
 	  as virtrdf:FoafHomepageDbmsFamilyWikipediaUrl ;
	owl:sameAs opl:lit_wikipedia_to_dbpedia(dbms_family_tbl.wikipedia_url)
 	  as virtrdf:OwnSameAsDbmsFamilyPediaUrl ;
	opl:WikipediaPage opl:Uri(dbms_family_tbl.wikipedia_url)
	  as virtrdf:OplDbmsFamilyWikipediaUrl ;
	  opl:DbmsFamilyRating dbms_family_tbl.rating
  	  as virtrdf:OplDbmsFamilyRating ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      ore:isDescribedBy foaf: ;
      ore:isDescribedBy owl: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: ;
      rdfs:isDefinedBy foaf: ;
      rdfs:isDefinedBy owl: 
		.
  	
	  opl:DbmsEngine(dbms_engine_tbl.dbms_name)
  	  a opl:DbmsEngine
	    as virtrdf:OplDbmsEngine ;
  	  a opl:DbmsFamily
	    as virtrdf:DbmsEngineSubClassOfDbmsFamily ;
	    a umbel:RelationalDatabaseServerProgram
	    as virtrdf:DbmEngineSubClassOfUmbel ;
	  opl:isOfDbmsFamily opl:DbmsFamily(dbms_engine_tbl.dbms_family_id)
  	  as virtrdf:OplDbmsEngineisOfDbmsFamily ;
	  rdfs:label dbms_engine_tbl.dbms_name
  	  as virtrdf:rdfsOplLabelDbmsName ;
  	opl:DbmsEngineVersion dbms_engine_tbl.dbms_version
	    as virtrdf:OplDbmsEngineVersion ;
	  opl:DbmsEngineUpwardCompatible dbms_engine_tbl.upward_compatible
  	  as virtrdf:OplDbmsEngineUpwardCompatible ;
  	opl:DbmsEngineDownwardCompatible dbms_engine_tbl.downward_compatible
	    as virtrdf:OplDbmsEngineDownwardCompatible ;
	  opl:DbmsEngineRating dbms_engine_tbl.rating
  	  as virtrdf:OplDbmsEngineRating ;
  	opl:DbmsEngineOldArchiveCode dbms_engine_tbl.old_archive_code
	    as virtrdf:OplDbmsEngineOldArchiveCode ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.


  opl:DbmsFamily(dbms_family_tbl.dbms_family_id)
    opl:hasDatabaseVersions
    opl:DbmsEngine(dbms_engine_tbl.dbms_name)
    where (
        ^{dbms_family_tbl.}^.dbms_family_id = ^{dbms_engine_tbl.}^.dbms_family_id
    )
    as virtrdf:OplDbmsFamilyToDbms .


	  opl:OpsysType(opsys_type_tbl.opsys_type_id)
   	  a opl:OpsysType
	    as virtrdf:OplOpsysType ;
	  rdfs:label opsys_type_tbl.opsys_type_description
  	  as virtrdf:rdfsOplOpsysTypeDescription ;
	  opl:OpsysTypeDescription opsys_type_tbl.opsys_type_description
  	  as virtrdf:OplOpsysTypeDescription ;
  	opl:OpsysTypeShortDescription opsys_type_tbl.short_description 
	    as virtrdf:OplOpsysTypeShortDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ; 
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
  	
	  
	  opl:OpsysType(opsys_type_tbl.opsys_type_id) opl:hasOpsys
	    opl:Opsys(opsys_tbl.opsys_name)
	    where (^{opsys_tbl.}^.opsys_type_id = ^{opsys_type_tbl.}^.opsys_type_id)
	    as virtrdf:OplOpsysTypeIsOpsysTypeOfOpsys .
  	
  	
	  opl:ProcessorMode(processor_mode_tbl.processor_mode_id)
  	  a opl:ProcessorMode
	    as virtrdf:OplProcessorMode ;
	  opl:ProcessorModeName processor_mode_tbl.processor_mode_name
  	  as virtrdf:OplProcessorModeName .
	
  	opl:Processor(processors_tbl.processor_name, processors_tbl.processor_mode_id)
	    a opl:Processor
	    as virtrdf:OplProcessor ;
	  opl:ProcessorName processors_tbl.processor_name
  	  as virtrdf:OplProcessorName ;
  	opl:ProcessorVersion processors_tbl.processor_version
	    as virtrdf:OplProcessorVersion ;
	  rdfs:label processors_tbl.processor_description
  	  as virtrdf:rdfsOplProcessorDescription ;
	  opl:ProcessorDescription processors_tbl.processor_description
  	  as virtrdf:OplProcessorDescription ;
  	opl:ProcessorMode opl:ProcessorMode(processors_tbl.processor_mode_id)
	    as virtrdf:OplProcessorProcessorMode ;
	  opl:isOfProcessorFamily opl:ProcessorFamily(processors_tbl.processor_family_id)
  	  as virtrdf:OplProcessorIsOfProcessorFamily ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
  	
	opl:ProcessorFamily(processor_family_tbl.processor_family_id)
  	  a opl:ProcessorFamily
	    as virtrdf:OplProcessorFamily ;
    opl:ProcessorFamilyName processor_family_tbl.processor_family_name
  	  as virtrdf:OplProcessorFamilyName ;
    opl:ProcessorFamilyVendor opl:Vendor(processor_family_tbl.vendor_id)
	  as virtrdf:OplProcessorFamilyVendor ;
	foaf:homepage opl:Uri(processor_family_tbl.wikipedia_url)
	  as virtrdf:FoafHomepageProcessorFamilyWikipediaUrl ;
	owl:sameAs opl:lit_wikipedia_to_dbpedia(processor_family_tbl.wikipedia_url)
	  as virtrdf:OwlSameAsProcessorFamilyPediaUrl ;
    opl:WikipediaPage opl:Uri(processor_family_tbl.wikipedia_url)
	  as virtrdf:OplProcessorFamilyWikipediaUrl ;
	rdfs:label processor_family_tbl.processor_family_description
  	  as virtrdf:rdfsOplProcessorFamilyDescription ;
	opl:ProcessorFamilyDescription processor_family_tbl.processor_family_description
  	  as virtrdf:OplProcessorFamilyDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy foaf: ;
      ore:isDescribedBy owl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy foaf: ;
      rdfs:isDefinedBy owl: ;
      rdfs:isDefinedBy rdfs: 
		.
  	  	
	  opl:Opsys(opsys_tbl.opsys_name)
  	  a opl:Opsys
	    as virtrdf:OplOpsys ;
  	  a opl:OpsysFamily
	    as virtrdf:OpsysSubClassOfOplOpsysFamily ;
  	  a umbel:OperatingSystem
	    as virtrdf:OpsysSubClassOfUmbelOpsys ;
	  opl:OpsysVersion opsys_tbl.opsys_version
  	  as virtrdf:OplOpsysVersion ;
  	opl:OpsysUpwardCompatible opsys_tbl.upward_compatible
	    as virtrdf:OplOpsysUpwardCompatible ;
	  opl:OpsysDownwardCompatible opsys_tbl.downward_compatible
  	  as virtrdf:OplOpsysDownwardCompatible ;
  	opl:OpsysSupported opsys_tbl.supported
	    as virtrdf:OplOpsysSupported ;
	  opl:OpsysLicenseCode opsys_tbl.opsys_license_code
  	  as virtrdf:OplOpsysLicenseCode ;
  	rdfs:label opsys_tbl.commercial_name
	    as virtrdf:rdfsOplOpsysCommercialName ;
  	opl:OpsysCommercialName opsys_tbl.commercial_name
	    as virtrdf:OplOpsysCommercialName ;
	  opl:OpsysEmulationMode opl:ProcessorMode(opsys_tbl.emulation_mode_id)
  	  as virtrdf:OplOpsysEmulationMode ;
  	opl:OpsysProcessor opl:Processor(opsys_tbl.processor_name, opsys_tbl.processor_mode_id)
	    as virtrdf:OplOpsysProcessor ;
	  opl:isOfOpsysFamily opl:OpsysFamily(opsys_tbl.opsys_family_id)
  	  as virtrdf:OplOpsysIsOfOpsysFamily ;
  	opl:isOfOpsysType opl:OpsysType(opsys_tbl.opsys_type_id)
	    as virtrdf:OplOpsysIsOfOpsysType ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
  	
	
	  opl:Product(product_with_code.product_id) 
	    a opl:Product
	    as virtrdf:OplProduct ;
	    a opl:ProductFormat
	    as virtrdf:ProductSubClassOfProductFormat ;
	    a opl:ProductCategory
	    as virtrdf:ProductSubClassOfProductCategory ;
	    a opl:ProductFormatCategory
	    as virtrdf:OplProductProductFormatCategory ;
	  rdfs:label product_with_code.poduct_description
	    as virtrdf:rdfsOplProductDescription ;
	  foaf:homepage opl:wwwsiteproduct(product_with_code.product_id)
        as virtrdf:homepageProductFamilyCategoryFormatProductUda ;
	  opl:ProductDescription product_with_code.poduct_description
	    as virtrdf:OplProductDescription ;
	  dc:description opl:lit_to_string(product_with_code.long_description)
	    as virtrdf:OplProductLongDescription ;
	  opl:isOfCategory opl:ProductCategory(product_with_code.product_cat_code)
	    as virtrdf:OplProductIsOfCategory ; 
	  opl:isOfFormat opl:ProductFormat(product_with_code.product_format_code)
	    as virtrdf:OplProductIsOfFormat ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy foaf: ;
      ore:isDescribedBy dc: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy foaf: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy rdfs: 
		.
	
	
	  opl:Product(product_with_code.product_id) opl:hasProductRelease
	    opl:ProductRelease(
	      product_release_tbl.product_id, 
	      product_release_tbl.product_release_id,
	      product_release_tbl.opsys_name, 
	      product_release_tbl.dbms_name
	      )
	      where (^{product_with_code.}^.product_id = ^{product_release_tbl.}^.product_id)
	    as virtrdf:OplProductIsProductOfProductRelease .
	
	
	
	  opl:ProductRelease(
	      product_release_tbl.product_id, 
	      product_release_tbl.product_release_id,
	      product_release_tbl.opsys_name, 
	      product_release_tbl.dbms_name
	      )
	    a opl:ProductRelease
	    as virtrdf:OplProductRelease ;
	    a opl:Product
	    as virtrdf:OplProductReleaseSubClassProduct ;
		a gr:ProductOrService
		as virtrdf:OplProductReleaseAgrProductOrService ;
	  rdfs:label opl:lit_product_release_label(
	      product_release_tbl.product_id, 
	      product_release_tbl.product_release_id,
	      product_release_tbl.opsys_name, 
	      product_release_tbl.dbms_name
	  )
	    as virtrdf:rdfsOplProductReleaseProductReleaseId ;
	  opl:ProductReleaseProductReleaseId product_release_tbl.product_release_id
	    as virtrdf:OplProductReleaseProductReleaseId ;
	  opl:isOfProduct opl:Product(product_release_tbl.product_id)
	    as virtrdf:OplProductReleaseIsOfProduct ;
	  opl:isForOpsys opl:Opsys(product_release_tbl.opsys_name)
	    as virtrdf:OplProductReleaseIsForOpsys ;
	  opl:isForDbmsEngine opl:DbmsEngine(product_release_tbl.dbms_name)
	    as virtrdf:OplProductReleaseIsForDbmsEngine ;
  	  opl:UpwardCompatible product_release_tbl.upward_compatible
	    as virtrdf:OplProductReleaseUpwardCompatible ;
	  opl:DownwardCompatible product_release_tbl.downward_compatible
  	    as virtrdf:OplProductReleaseDownwardCompatible ;
      opl:PurchaseInShop opl:lit_to_shop (
	      product_release_tbl.product_release_id,
	      product_release_tbl.product_id, 
	      product_release_tbl.opsys_name, 
	      product_release_tbl.dbms_name
	 	)
   		as virtrdf:OplProductReleaseToShop ;
	  gr:hasBusinessFunction gr:Sell as virtrdf:grbusinessfunctionsell;
  	  opl:Supported product_release_tbl.supported
	    as virtrdf:OplProductReleaseSupported ;
      ore:isDescribedBy opl: ; 
      ore:isDescribedBy gr: ;
      rdfs:isDefinedBy opl: ; 
      rdfs:isDefinedBy gr: 
		.
	    		    
	  opl:ProductRelease(
	      product_release_tbl.product_id, 
	      product_release_tbl.product_release_id,
	      product_release_tbl.opsys_name, 
	      product_release_tbl.dbms_name
	      ) opl:hasComponentArchive
	  opl:ComponentArchive(component_archive_tbl.component_archive_name)
			where (
					^{product_release_tbl.}^.product_id = ^{component_archive_tbl.}^.product_id and 
					^{product_release_tbl.}^.product_release_id = ^{component_archive_tbl.}^.product_release_id and 
					^{product_release_tbl.}^.opsys_name = ^{component_archive_tbl.}^.opsys_name and
					^{product_release_tbl.}^.dbms_name = ^{component_archive_tbl.}^.dbms_name
			)
	    as virtrdf:OplProductReleaseIsProductReleaseOfComponentArchive .
	    
	
	  opl:Component(components_tbl.component_name)
	    a opl:Component
	    as virtrdf:OplComponent ;
	  opl:isOfComponentCategory opl:ComponentCategory(components_tbl.component_category_id)
	    as virtrdf:OplComponentIsOfComponentCategory ;
	  opl:isOfComponentType opl:ComponentType(components_tbl.component_type_id)
	    as virtrdf:OplComponentIsOfComponentType ;
	  opl:isOfComponentMode opl:ComponentMode(components_tbl.component_mode_id)
	    as virtrdf:OplComponentIsOfComponentMode ;
	  opl:isForOpsys opl:Opsys(components_tbl.opsys_name)
	    as virtrdf:OplComponentIsForOpsys ;
	  opl:isForDbmsEngine opl:DbmsEngine(components_tbl.dbms_name)
	    as virtrdf:OplComponentIsForDbmsEngine ;
	  opl:ComponentCvsid components_tbl.component_cvsid
	    as virtrdf:OplComponentComponentCvsId ;
	  opl:ComponentBuildDate components_tbl.component_build_date
	    as virtrdf:OplComponentComponentBuildDate ;
	  opl:Notes components_tbl.notes 
	    as virtrdf:OplComponentNotes ;
	  opl:BuildComments components_tbl.build_comments
	    as virtrdf:OplComponentBuildComments ;
	  opl:Filesize components_tbl.str_filesize
	    as virtrdf:OplComponentFilesize ;
      rdfs:isDefinedBy opl: ;
      ore:isDescribedBy opl:
		.  

    opl:DbmsEngine (dbms_engine_tbl.dbms_name) opl:hasComponents
      opl:Component(components_tbl.component_name)
      where (^{components_tbl.}^.dbms_name = ^{dbms_engine_tbl.}^.dbms_name)
      as virtrdf:OplDbmsEngineForComponents .

    opl:Opsys (opsys_tbl.opsys_name) opl:hasComponents
      opl:Component(components_tbl.component_name)
      where (^{components_tbl.}^.opsys_name = ^{opsys_tbl.}^.opsys_name)
      as virtrdf:OplOpsysForComponents .

	    
	  opl:ComponentMode(component_mode_tbl.component_mode_id)
	    a opl:ComponentMode
	    as virtrdf:OplComponentMode ;
	  rdfs:label component_mode_tbl.component_mode_description
	    as virtrdf:rdfsOplComponentModeDescription ; 
	  opl:ComponentModeDescription component_mode_tbl.component_mode_description
	    as virtrdf:OplComponentModeDescription ; 
	  opl:ComponentModeShortDescription component_mode_tbl.short_description 
	    as virtrdf:OplComponentModeShortDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	    
	  opl:ComponentType(component_type_tbl.component_type_id)
	    a opl:ComponentType
	    as virtrdf:OplComponentType ;
	  rdfs:label component_type_tbl.component_type_description
	    as virtrdf:rdfsOplComponentTypeDescription ;
	  opl:ComponentTypeDescription component_type_tbl.component_type_description
	    as virtrdf:OplComponentTypeDescription ;
	  opl:ComponentTypeShortDescription component_type_tbl.short_description 
	    as virtrdf:OplComponentTypeShortDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	    
	  opl:ComponentCategory(component_category_tbl.component_category_id)
	    a opl:ComponentCategory
	    as virtrdf:OplComponentCategory ;
	  rdfs:label component_category_tbl.component_category_description
	    as virtrdf:rdfsOplComponentCategoryDescription ;
	  opl:ComponentCategoryDescription component_category_tbl.component_category_description
	    as virtrdf:OplComponentCategoryDescription ;
	  opl:ComponentCategoryShortDescription component_category_tbl.short_description
	    as virtrdf:OplComponentCateegoryShortDescription ;
	  dc:description opl:lit_to_string(component_category_tbl.component_category_long_description) 
	    as virtrdf:OplComponentCategoryLongDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	    
	  opl:ComponentArchive(component_archive_tbl.component_archive_name)
	    a opl:ComponentArchive
	    as virtrdf:OplComponentArchive ;
	    a opl:Component
	    as virtrdf:ComponentArchiveSubClassOfComponent ;
	  opl:ComponentArchiveName component_archive_tbl.component_archive_name
	    as virtrdf:OplComponentArchiveComponentArchiveName ;
	  rdfs:label component_archive_tbl.component_archive_name
	    as virtrdf:rdfsComponentArchiveComponentArchiveName ;
  	opl:ComponentArchiveType opl:ComponentArchiveType(component_archive_tbl.component_archive_type_id)
	  	as virtrdf:ComponentArchiveComponentArchiveType ;
	  opl:isOfComponent opl:Component(component_archive_tbl.component_name)
	    as virtrdf:OplComponentArchiveIsOfComponent ;
	  opl:isOfProductRelease opl:ProductRelease(
	      component_archive_tbl.product_id,
	      component_archive_tbl.product_release_id,
	      component_archive_tbl.opsys_name,
	      component_archive_tbl.dbms_name
	      )
	    as virtrdf:OplComponentArchiveIsOfProductRelease ;
  	opl:AssemblyDate component_archive_tbl.assembly_date
	  	as virtrdf:OplComponentArchiveAssemblyDate ;
	  opl:FileUri component_archive_tbl.file_uri
  		as virtrdf:OplComponentArchiveFileUri ;
  	opl:LicenseCode component_archive_tbl.license_code
		  as virtrdf:OplComponentArchiveLicenseCode ;
	  opl:ResFullPath component_archive_tbl.res_full_path
  		as virtrdf:OplComponentArchiveResFullPath ;
  	opl:ResName component_archive_tbl.res_name
		  as virtrdf:OplComponentArchiveResName ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.

	  
	opl:ComponentArchiveType(component_archive_type_tbl.component_archive_type_id) 
	  a opl:ComponentArchiveType
		as virtrdf:OplComponentArchiveType ;
	opl:ComponentArchiveShortName component_archive_type_tbl.component_archive_short_name
		as virtrdf:OplComponentArchiveTypeComponentArchiveShortName ;
	rdfs:label component_archive_type_tbl.component_archive_type_name
		as virtrdf:rdfsOplComponentArchiveTypeComponentArchiveTypeName ;
	opl:ComponentArchiveTypeName component_archive_type_tbl.component_archive_type_name
		as virtrdf:OplComponentArchiveTypeComponentArchiveTypeName ;
	opl:Extension component_archive_type_tbl.extension
		as virtrdf:OplComponentArchiveTypeExtension ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	  

	opl:DownloadLocation(download_location_tbl.uri) 
	  a opl:DownloadLocation
		as virtrdf:OplDownloadLocation ;
	opl:isOfComponentArchive opl:ComponentArchive(download_location_tbl.component_archive_name)
		as virtrdf:OplDownloadLocationIsOfComponentArchive ;
	opl:hasDownloadProtocol opl:DownloadProtocol(download_location_tbl.protocol_name)
		as virtrdf:DownloadLocationHasProtocolName ;
	rdfs:label download_location_tbl.uri_old
		as virtrdf:rdfsOplDownloadLocationLabel ;
	opl:isOfProductRelease opl:ProductRelease(
		download_location_tbl.product_id,
		download_location_tbl.product_release_id,
		download_location_tbl.opsys_name,
		download_location_tbl.dbms_name
		)
		as virtrdf:OplDownloadLocationIsOfProductRelease ;
	opl:Uri download_location_tbl.uri
		as virtrdf:OplDownloadLocationUri ;
	opl:UriOld download_location_tbl.uri_old
		as virtrdf:OplDownloadLocationUriOld ;
    opl:hasDownloadPartner opl:DownloadPartner(
        download_location_tbl.host_name,
        download_location_tbl.domain_name
      ) 
        as virtrdf:OplDownloadLocationHasDownloadPartner ;
	opl:DomainName download_location_tbl.domain_name
		as virtrdf:OplDownloadLocationDomainName ;
	opl:HostName download_location_tbl.host_name
		as virtrdf:OplDownloadLocationHostName ;
	opl:ResName download_location_tbl.res_name
		as virtrdf:OplDownloadLocationResName ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.

	opl:DownloadProtocol(download_protocol_tbl.protocol_name) 
	  a opl:DownloadProtocol
		as virtrdf:OplDownloadProtocolProtocolName ;
	opl:ProtocolDescription download_protocol_tbl.protocol_description
		as virtrdf:OplDownloadProtocolProtocolDescription .

	opl:DownloadPartner(
	  download_partner_tbl.host_name, 
	  download_partner_tbl.domain_name 
	  )
	  a opl:DownloadPartner
	  as virtrdf:OplDownloadPartner;
	rdfs:label download_partner_tbl.partner_name
	  as virtrdf:rdfsOplDownloadPartnerPartnerNamelabel ;
	opl:DownloadPartner download_partner_tbl.partner_name
	  as virtrdf:OplDownloadPartnerPartnerName ;
	opl:PortNumber download_partner_tbl.port_number
	  as virtrdf:OplDownloadPartnerPortNumber ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	  
    opl:ComponentArchive(component_archive_tbl.component_archive_name)
      opl:hasDownloadLocation 
      opl:DownloadLocation(download_location_tbl.uri)
		where (
				^{component_archive_tbl.}^.component_archive_name = ^{download_location_tbl.}^.component_archive_name
		)
      as virtrdf:OplComponentArchiveIsComponentArchiveOfDownloadLocation .

    opl:DownloadLocation(download_location_tbl.uri)
      opl:isDownloadLocationOf
      opl:ComponentArchive(component_archive_tbl.component_archive_name)
		where (
				 ^{download_location_tbl.}^.component_archive_name = ^{component_archive_tbl.}^.component_archive_name
		)
      as virtrdf:OplDownloadLocationIsDowloadLocationOfComponentArchive .


#
# Extra Peripheral family/cat/format/etc... to/from... dbfamily/opsysfamily/....
# ==================================================================================


# ---------------------&gt; product_family

#  opl:ProductFamily(product_family_tbl.product_family_code)
#    opl:OperatingSystems
#    opl:Opsys(ac1.opsys_name)
#    where (
#        ^{product_family_tbl.}^.product_family_code = ^{ac1.}^.product_family_code
#    )
#    as virtrdf:OplProductFamilyToOpsys .

  opl:ProductFamily(product_family_tbl.product_family_code)
    opl:OperatingSystemsFamilies
    opl:OpsysFamily(ac1.opsys_family_id)
    where (
        ^{product_family_tbl.}^.product_family_code = ^{ac1.}^.product_family_code
    )
    as virtrdf:OplProductFamilyToOpsysFamily .

#  opl:ProductFamily(product_family_tbl.product_family_code)
#    opl:Databases
#    opl:DbmsEngine(ac1.dbms_name)
#    where (
#        ^{product_family_tbl.}^.product_family_code = ^{ac1.}^.product_family_code
#    )
#    as virtrdf:OplProductFamilyToDbms .

  opl:ProductFamily(product_family_tbl.product_family_code)
    opl:DatabaseFamilies
    opl:DbmsFamily(ac1.dbms_family_id)
    where (
        ^{product_family_tbl.}^.product_family_code = ^{ac1.}^.product_family_code
    )
    as virtrdf:OplProductFamilyToDbmsFamily .

#  opl:ProductFamily(product_family_tbl.product_family_code)
#    opl:Processors
#  	opl:Processor(ac1.processor_name, ac1.processor_mode_id)
#    where (
#        ^{product_family_tbl.}^.product_family_code = ^{ac1.}^.product_family_code
#    )
#    as virtrdf:OplProductFamilyToProcessor .

  opl:ProductFamily(product_family_tbl.product_family_code)
    opl:ProcessorFamilies
	opl:ProcessorFamily(ac1.processor_family_id)
    where (
        ^{product_family_tbl.}^.product_family_code = ^{ac1.}^.product_family_code
    )
    as virtrdf:OplProductFamilyToProcessorFamily .



# ---------------------&gt; product_format

#  opl:ProductFormat(product_format_with_code.product_format_code)
#    opl:OperatingSystems
#    opl:Opsys(ac1.opsys_name)
#    where (
#        ^{product_format_with_code.}^.product_format_code = ^{ac1.}^.product_format_code
#    )
#    as virtrdf:OplProductFormatToOpsys .

  opl:ProductFormat(product_format_with_code.product_format_code)
    opl:OperatingSystemsFamilies
    opl:OpsysFamily(ac1.opsys_family_id)
    where (
        ^{product_format_with_code.}^.product_format_code = ^{ac1.}^.product_format_code
    )
    as virtrdf:OplProductFormatToOpsysFamily .

#  opl:ProductFormat(product_format_with_code.product_format_code)
#    opl:Databases
#    opl:DbmsEngine(ac1.dbms_name)
#    where (
#        ^{product_format_with_code.}^.product_format_code = ^{ac1.}^.product_format_code
#    )
#    as virtrdf:OplProductFormatToDbms .

  opl:ProductFormat(product_format_with_code.product_format_code)
    opl:DatabaseFamilies
    opl:DbmsFamily(ac1.dbms_family_id)
    where (
        ^{product_format_with_code.}^.product_format_code = ^{ac1.}^.product_format_code
    )
    as virtrdf:OplProductFormatToDbmsFamily .

  opl:ProductFormat(product_format_with_code.product_format_code)
    opl:Processors
  	opl:Processor(ac1.processor_name, ac1.processor_mode_id)
    where (
        ^{product_format_with_code.}^.product_format_code = ^{ac1.}^.product_format_code
    )
    as virtrdf:OplProductFormatToProcessor .

  opl:ProductFormat(product_format_with_code.product_format_code)
    opl:ProcessorFamilies
	opl:ProcessorFamily(ac1.processor_family_id)
    where (
        ^{product_format_with_code.}^.product_format_code = ^{ac1.}^.product_format_code
    )
    as virtrdf:OplProductFormatToProcessorFamily .

	  

# ---------------------&gt; product_category

#  opl:ProductCategory(product_category_with_code.product_cat_code)
#    opl:OperatingSystems
#    opl:Opsys(ac1.opsys_name)
#    where (
#        ^{product_category_with_code.}^.product_cat_code = ^{ac1.}^.product_cat_code
#    )
#    as virtrdf:OplProductCatToOpsys .

  opl:ProductCategory(product_category_with_code.product_cat_code)
    opl:OperatingSystemsFamilies
    opl:OpsysFamily(ac1.opsys_family_id)
    where (
        ^{product_category_with_code.}^.product_cat_code = ^{ac1.}^.product_cat_code
    )
    as virtrdf:OplProductCatToOpsysFamily .

#  opl:ProductCategory(product_category_with_code.product_cat_code)
#    opl:Databases
#    opl:DbmsEngine(ac1.dbms_name)
#    where (
#        ^{product_category_with_code.}^.product_cat_code = ^{ac1.}^.product_cat_code
#    )
#    as virtrdf:OplProductCatToDbms .

  opl:ProductCategory(product_category_with_code.product_cat_code)
    opl:DatabaseFamilies
    opl:DbmsFamily(ac1.dbms_family_id)
    where (
        ^{product_category_with_code.}^.product_cat_code = ^{ac1.}^.product_cat_code
    )
    as virtrdf:OplProductCatToDbmsFamily .

#  opl:ProductCategory(product_category_with_code.product_cat_code)
#    opl:Processors
#  	opl:Processor(ac1.processor_name, ac1.processor_mode_id)
#    where (
#        ^{product_category_with_code.}^.product_cat_code = ^{ac1.}^.product_cat_code
#    )
#    as virtrdf:OplProductCatToProcessor .

  opl:ProductCategory(product_category_with_code.product_cat_code)
    opl:ProcessorFamilies
	opl:ProcessorFamily(ac1.processor_family_id)
    where (
        ^{product_category_with_code.}^.product_cat_code = ^{ac1.}^.product_cat_code
    )
    as virtrdf:OplProductCatToProcessorFamily .


	  

# ---------------------&gt; product

  opl:Product(product_with_code.product_id)
    opl:OperatingSystems
    opl:Opsys(ac1.opsys_name)
    where (
        ^{product_with_code.}^.product_id = ^{ac1.}^.product_id
    )
    as virtrdf:OplProductToOpsys .

  opl:Product(product_with_code.product_id)
    opl:OperatingSystemsFamilies
    opl:OpsysFamily(ac1.opsys_family_id)
    where (
        ^{product_with_code.}^.product_id = ^{ac1.}^.product_id
    )
    as virtrdf:OplProductToOpsysFamily .

  opl:Product(product_with_code.product_id)
    opl:Databases
    opl:DbmsEngine(ac1.dbms_name)
    where (
        ^{product_with_code.}^.product_id = ^{ac1.}^.product_id
    )
    as virtrdf:OplProductToDbms .

  opl:Product(product_with_code.product_id)
    opl:DatabaseFamilies
    opl:DbmsFamily(ac1.dbms_family_id)
    where (
        ^{product_with_code.}^.product_id = ^{ac1.}^.product_id
    )
    as virtrdf:OplProductToDbmsFamily .

  opl:Product(product_with_code.product_id)
    opl:Processors
  	opl:Processor(ac1.processor_name, ac1.processor_mode_id)
    where (
        ^{product_with_code.}^.product_id = ^{ac1.}^.product_id
    )
    as virtrdf:OplProductToProcessor .

  opl:Product(product_with_code.product_id)
    opl:ProcessorFamilies
	opl:ProcessorFamily(ac1.processor_family_id)
    where (
        ^{product_with_code.}^.product_id = ^{ac1.}^.product_id
    )
    as virtrdf:OplProductToProcessorFamily .




# ---------------------&gt; to product

  opl:Opsys(opsys_tbl.opsys_name)
    opl:hasProducts
    opl:Product(ac1.product_id)
    where (
        ^{opsys_tbl.}^.opsys_name = ^{ac1.}^.opsys_name
    )
    as virtrdf:OplOpsysToProduct .

  opl:OpsysFamily(opsys_family_tbl.opsys_family_id)
    opl:hasProducts
    opl:Product(ac1.product_id)
    where (
        ^{opsys_family_tbl.}^.opsys_family_id = ^{ac1.}^.opsys_family_id
    )
    as virtrdf:OplOpsysFamilyToProduct .

  opl:DbmsEngine(dbms_engine_tbl.dbms_name)
    opl:hasProducts
    opl:Product(ac1.product_id)
    where (
        ^{dbms_engine_tbl.}^.dbms_name = ^{ac1.}^.dbms_name
    )
    as virtrdf:OplDbmsToProduct .

  opl:DbmsFamily(dbms_family_tbl.dbms_family_id)
    opl:hasProducts
    opl:Product(ac1.product_id)
    where (
        ^{dbms_family_tbl.}^.dbms_family_id = ^{ac1.}^.dbms_family_id
    )
    as virtrdf:OplDbmsFamilyToProduct .

  opl:Processor(processors_tbl.processor_name, processors_tbl.processor_mode_id)
    opl:hasProducts
    opl:Product(ac1.product_id)
    where (
        ^{processors_tbl.}^.processor_name = ^{ac1.}^.processor_name
        and
        ^{processors_tbl.}^.processor_mode_id = ^{ac1.}^.processor_mode_id
    )
    as virtrdf:OplProcessorToProduct .

  opl:ProcessorFamily(processor_family_tbl.processor_family_id)
    opl:hasProducts
    opl:Product(ac1.product_id)
    where (
        ^{processor_family_tbl.}^.processor_family_id = ^{ac1.}^.processor_family_id
    )
    as virtrdf:OplProcessorFamilyProduct .




# ---------------------&gt; to product_cat

#  opl:Opsys(opsys_tbl.opsys_name)
#    opl:hasProductCategory
#    opl:ProductCategory(ac1.product_cat_code)
#    where (
#        ^{opsys_tbl.}^.opsys_name = ^{ac1.}^.opsys_name
#    )
#    as virtrdf:OplOpsysToProductCategory .

  opl:OpsysFamily(opsys_family_tbl.opsys_family_id)
    opl:hasProductCategory
    opl:ProductCategory(ac1.product_cat_code)
    where (
        ^{opsys_family_tbl.}^.opsys_family_id = ^{ac1.}^.opsys_family_id
    )
    as virtrdf:OplOpsysFamilyToProductCategory .

#  opl:DbmsEngine(dbms_engine_tbl.dbms_name)
#    opl:hasProductCategory
#    opl:ProductCategory(ac1.product_cat_code)
#    where (
#        ^{dbms_engine_tbl.}^.dbms_name = ^{ac1.}^.dbms_name
#    )
#    as virtrdf:OplDbmsToProductCategory .

  opl:DbmsFamily(dbms_family_tbl.dbms_family_id)
    opl:hasProductCategory
    opl:ProductCategory(ac1.product_cat_code)
    where (
        ^{dbms_family_tbl.}^.dbms_family_id = ^{ac1.}^.dbms_family_id
    )
    as virtrdf:OplDbmsFamilyToProductCategory .

#  opl:Processor(processors_tbl.processor_name, processors_tbl.processor_mode_id)
#    opl:hasProductCategory
#    opl:ProductCategory(ac1.product_cat_code)
#    where (
#        ^{processors_tbl.}^.processor_name = ^{ac1.}^.processor_name
#        and
#        ^{processors_tbl.}^.processor_mode_id = ^{ac1.}^.processor_mode_id
#    )
#    as virtrdf:OplProcessorToProductCategory .

  opl:ProcessorFamily(processor_family_tbl.processor_family_id)
    opl:hasProductCategory
    opl:ProductCategory(ac1.product_cat_code)
    where (
        ^{processor_family_tbl.}^.processor_family_id = ^{ac1.}^.processor_family_id
    )
    as virtrdf:OplProcessorFamilyProductCategory .




# ---------------------&gt; to product_format

#  opl:Opsys(opsys_tbl.opsys_name)
#    opl:hasProductFormat
#    opl:ProductFormat(ac1.product_format_code)
#    where (
#        ^{opsys_tbl.}^.opsys_name = ^{ac1.}^.opsys_name
#    )
#    as virtrdf:OplOpsysToProductFormat .

  opl:OpsysFamily(opsys_family_tbl.opsys_family_id)
    opl:hasProductFormat
    opl:ProductFormat(ac1.product_format_code)
    where (
        ^{opsys_family_tbl.}^.opsys_family_id = ^{ac1.}^.opsys_family_id
    )
    as virtrdf:OplOpsysFamilyToProductFormat .

#  opl:DbmsEngine(dbms_engine_tbl.dbms_name)
#    opl:hasProductFormat
#    opl:ProductFormat(ac1.product_format_code)
#    where (
#        ^{dbms_engine_tbl.}^.dbms_name = ^{ac1.}^.dbms_name
#    )
#    as virtrdf:OplDbmsToProductFormat .

  opl:DbmsFamily(dbms_family_tbl.dbms_family_id)
    opl:hasProductFormat
    opl:ProductFormat(ac1.product_format_code)
    where (
        ^{dbms_family_tbl.}^.dbms_family_id = ^{ac1.}^.dbms_family_id
    )
    as virtrdf:OplDbmsFamilyToProductFormat .

#  opl:Processor(processors_tbl.processor_name, processors_tbl.processor_mode_id)
#    opl:hasProductFormat
#    opl:ProductFormat(ac1.product_format_code)
#    where (
#        ^{processors_tbl.}^.processor_name = ^{ac1.}^.processor_name
#        and
#        ^{processors_tbl.}^.processor_mode_id = ^{ac1.}^.processor_mode_id
#    )
#    as virtrdf:OplProcessorToProductFormat .

  opl:ProcessorFamily(processor_family_tbl.processor_family_id)
    opl:hasProductFormat
    opl:ProductFormat(ac1.product_format_code)
    where (
        ^{processor_family_tbl.}^.processor_family_id = ^{ac1.}^.processor_family_id
    )
    as virtrdf:OplProcessorFamilyProductFormat .




# ---------------------&gt; to product_family

#  opl:Opsys(opsys_tbl.opsys_name)
#    opl:hasProductFamily
#    opl:ProductFamily(ac1.product_family_code)
#    where (
#        ^{opsys_tbl.}^.opsys_name = ^{ac1.}^.opsys_name
#    )
#    as virtrdf:OplOpsysToProductFamily .

  opl:OpsysFamily(opsys_family_tbl.opsys_family_id)
    opl:hasProductFamily
    opl:ProductFamily(ac1.product_family_code)
    where (
        ^{opsys_family_tbl.}^.opsys_family_id = ^{ac1.}^.opsys_family_id
    )
    as virtrdf:OplOpsysFamilyToProductFamily .

#  opl:DbmsEngine(dbms_engine_tbl.dbms_name)
#    opl:hasProductFamily
#    opl:ProductFamily(ac1.product_family_code)
#    where (
#        ^{dbms_engine_tbl.}^.dbms_name = ^{ac1.}^.dbms_name
#    )
#    as virtrdf:OplDbmsToProductFamily .

  opl:DbmsFamily(dbms_family_tbl.dbms_family_id)
    opl:hasProductFamily
    opl:ProductFamily(ac1.product_family_code)
    where (
        ^{dbms_family_tbl.}^.dbms_family_id = ^{ac1.}^.dbms_family_id
    )
    as virtrdf:OplDbmsFamilyToProductFamily .

#  opl:Processor(processors_tbl.processor_name, processors_tbl.processor_mode_id)
#    opl:hasProductFamily
#    opl:ProductFamily(ac1.product_family_code)
#    where (
#        ^{processors_tbl.}^.processor_name = ^{ac1.}^.processor_name
#        and
#        ^{processors_tbl.}^.processor_mode_id = ^{ac1.}^.processor_mode_id
#    )
#    as virtrdf:OplProcessorToProductFamily .

  opl:ProcessorFamily(processor_family_tbl.processor_family_id)
    opl:hasProductFamily
    opl:ProductFamily(ac1.product_family_code)
    where (
        ^{processor_family_tbl.}^.processor_family_id = ^{ac1.}^.processor_family_id
    )
    as virtrdf:OplProcessorFamilyProductFamily .

		
	} .
} .
;




DB.DBA.RDF_AUDIT_METADATA (1, &#39;*&#39;);


sparql
prefix opl: &lt;http://www.openlinksw.com/schemas/oplweb#&gt;
prefix dc: &lt;http://purl.org/dc/terms#&gt;
prefix oplsioc: &lt;http://www.openlinksw.com/schemas/oplsioc#&gt;
prefix sioc: &lt;http://rdfs.org/sioc/ns#&gt;
prefix foaf: &lt;http://xmlns.com/foaf/0.1/&gt;
prefix wgs: &lt;http://www.w3.org/2003/01/geo/wgs84_pos#&gt;
prefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
prefix oplds: &lt;http://www.openlinksw.com/dataspace/organization/openlink#&gt;
prefix owl: &lt;http://www.w3.org/2002/07/owl#&gt;
prefix umbel: &lt;http://umbel.org/umbel/sc/&gt;
prefix gr: &lt;http://purl.org/goodrelations/v1#&gt; 
prefix ore: &lt;http://www.openarchives.org/ore/terms/&gt;

alter quad storage virtrdf:DefaultQuadStorage
from oplweb2.oplweb.component_archive as component_archive_tbl
from oplweb2.oplweb.component_archive_type as component_archive_type_tbl
from oplweb2.oplweb.component_category as component_category_tbl text literal component_category_long_description
from oplweb2.oplweb.component_mode as component_mode_tbl
from oplweb2.oplweb.component_type as component_type_tbl
from oplweb2.oplweb.components_for_rdfs as components_tbl
from oplweb2.oplweb.dbms_engine as dbms_engine_tbl
from oplweb2.oplweb.dbms_family as dbms_family_tbl
from oplweb2.oplweb.download_location as download_location_tbl
from oplweb2.oplweb.download_protocol as download_protocol_tbl
from oplweb2.oplweb.download_partner as download_partner_tbl
from oplweb2.oplweb.opsys as opsys_tbl
from oplweb2.oplweb.opsys_family as opsys_family_tbl
from oplweb2.oplweb.opsys_type as opsys_type_tbl
from oplweb2.oplweb.processor_family as processor_family_tbl
from oplweb2.oplweb.processor_mode as processor_mode_tbl
from oplweb2.oplweb.processors as processors_tbl
from oplweb2.oplweb.product as product_tbl text literal long_description
from oplweb2.oplweb.product_benefits as product_benefits_tbl text literal product_benefit_explanation
from oplweb2.oplweb.product_benefits_category as product_benefits_category_tbl 
from oplweb2.oplweb.product_category as product_category_tbl
from oplweb2.oplweb.product_category_features_with_code as product_category_features_tbl text literal long_description
from oplweb2.oplweb.product_family as product_family_tbl
from oplweb2.oplweb.product_family as product_family_tbl_2
from oplweb2.oplweb.product_family_features_with_code as product_family_features_tbl text literal long_description
from oplweb2.oplweb.product_features as product_features_tbl text literal long_description
from oplweb2.oplweb.product_feature_category as product_feature_category_tbl text literal description
from oplweb2.oplweb.product_format_features_with_code as product_format_features_tbl text literal long_description
from oplweb2.oplweb.product_release_features as product_release_features_tbl text literal long_description
from oplweb2.oplweb.product_release_with_family as product_release_tbl
from oplweb2.oplweb.vendor_category as vendor_category_tbl
from oplweb2.oplweb.vendor_category_family as vendor_category_family_tbl
from oplweb2.oplweb.vendors as vendors_tbl
from oplweb2.oplweb.product_formats_categories as product_formats_categories
from oplweb2.oplweb.product_with_code as product_with_code
from oplweb2.oplweb.product_category_with_code as product_category_with_code
from oplweb2.oplweb.product_format as product_format_with_code
from oplweb2.oplweb.product_price as pp
from oplweb2.oplweb.product_price_type as pt
from oplweb2.DBA.license_model_unit_type as put
from oplweb2.DBA.license_model_unit_type as put2
from oplweb2.DBA.license_model as lm
from oplweb2.DBA.license_model as lm2
from oplweb2.DBA.license_model_type as license_model_type_tbl
from oplweb2.DBA.product_price_varchar as ppv
from oplweb2.DBA.product_general_discount_vc as gd
from oplweb2.oplweb.archive_coverage_osdb as ac1
{
	create virtrdf:product_portfolio2 as
		graph &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt;
	  option (exclusive)
	{

#
# Product Benefits and things
# =========================================	
	
	opl:ProductBenefit(product_benefits_tbl.product_benefit_id) 
	  a opl:ProductBenefit
	  as virtrdf:OplProductBenefit ;
	rdfs:label product_benefits_tbl.product_benefit_desc
	  as virtrdf:rdfsLabelProductBenefitDescription ;
	opl:isOfProductBenefitCategory opl:ProductBenefitCategory(product_benefits_tbl.product_benefit_category_id) 
	  as virtrdf:OplProductBenefitIsOfProductBenefitCategory ;
	opl:Description product_benefits_tbl.product_benefit_desc
	  as virtrdf:OplProductBenefitDescription ;
	opl:Acronym product_benefits_tbl.product_benefit_acronym
	  as virtrdf:OplProductBenefitAcronym ;
  opl:Explanation product_benefits_tbl.product_benefit_explanation
    as virtrdf:OplProductBenefitExplanation ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	  
	opl:ProductBenefitCategory(product_benefits_category_tbl.product_benefit_category_id) 
	  a opl:ProductBenefitCategory
	  as virtrdf:OplProductBenefitCategory ;
	rdfs:label product_benefits_category_tbl.description
	  as virtrdf:rdfsLabelProductBenefitCategoryDescription ;
	opl:Description product_benefits_category_tbl.description
	  as virtrdf:OplProductBenefitCategoryDescription ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	  
	opl:ProductFeatureCategory(product_feature_category_tbl.product_feature_category_id) 
	  a opl:ProductFeatureCategory
	  as virtrdf:OplProductFeatureCategory ;
	rdfs:label product_feature_category_tbl.short_desc
	  as virtrdf:rdfsLabelProductFeatureCategoryShortDescription ;
	opl:ShortDescription product_feature_category_tbl.short_desc
	  as virtrdf:OplProductFeatureCategoryShortDescription ;
	opl:Description product_feature_category_tbl.description
	  as virtrdf:OplProductFeatureCategoryDescription ;
	opl:StandardsId product_feature_category_tbl.standards_id
	  as virtrdf:OplProductFeatureCategoryStandardsId ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.
	  
	opl:ProductFeature(product_features_tbl.product_feature_id) 
	  a opl:ProductFeature
	  as virtrdf:OplProductFeature ;
	rdfs:label product_features_tbl.short_description
		as virtrdf:rdfsLabelProductFeaturesShortDescription ;
	opl:Description product_features_tbl.short_description
		as virtrdf:OplProductFeaturesShortDescription ;
	dc:description opl:lit_to_string(product_features_tbl.long_description)
		as virtrdf:OplProductFeaturesLongDescription ;
	opl:isOfProductBenefit opl:ProductBenefit(product_features_tbl.product_feature_benefit_id)
		as virtrdf:ProductFeaturesIsOfProductBenefit ;
	opl:isOfProductFeatureCategory opl:ProductFeatureCategory(product_features_tbl.product_feature_category_id)
		as virtrdf:ProductFeaturesIsOfProductFeatureCategory ;
	opl:isOfProduct opl:Product(product_features_tbl.product_id)
		as virtrdf:ProductFeaturesIsOfProduct ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      ore:isDescribedBy dc: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy rdfs: 
		.

    opl:Product(product_with_code.product_id)
      opl:hasFeature
      opl:ProductFeature(product_features_tbl.product_feature_id)
      where (
	    ^{product_with_code.}^.product_id = ^{product_features_tbl.}^.product_id
	)
	as virtrdf:OplProductHasProductFeaturesProductFeatures .

    opl:ProductFeature(product_features_tbl.product_feature_id)
      opl:isFeatureOf
      opl:Product(product_with_code.product_id)
      where (
        ^{product_with_code.}^.product_id = ^{product_features_tbl.}^.product_id
    )
    as virtrdf:OplProductFeaturesAreProductFeaturesProduct .

	  
	opl:ProductFamilyFeature(product_family_features_tbl.product_family_feature_id) 
	  a opl:ProductFamilyFeature
		as virtrdf:OplProductFamilyFeature ;
	rdfs:label product_family_features_tbl.short_description
		as virtrdf:rdfsLabelProductFamilyFeaturesShortDescription ;
	opl:Description product_family_features_tbl.short_description
		as virtrdf:OplProductFamilyFeaturesShortDescription ;
	dc:description opl:lit_to_string(product_family_features_tbl.long_description)
		as virtrdf:OplProductFamilyFeaturesLongDescription ;
	opl:isOfProductBenefit opl:ProductBenefit(product_family_features_tbl.product_family_feature_benefit_id)
		as virtrdf:ProductFamilyFeaturesIsOfProductBenefit ;
	opl:isOfProductFeatureCategory opl:ProductFeatureCategory(product_family_features_tbl.product_family_feature_cat_id)
		as virtrdf:ProductFamilyFeaturesIsOfProductFeatureCategory ;
	opl:isOfProductFamily opl:ProductFamily(product_family_features_tbl.product_family_code)
		as virtrdf:ProductFamilyFeaturesIsOfProductFamily ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy dc: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy rdfs: 
		.

    opl:ProductFamily(product_family_tbl.product_family_code)
      opl:hasFeature
      opl:ProductFamilyFeature(product_family_features_tbl.product_family_feature_id)
      where (
	    ^{product_family_tbl.}^.product_family_id = ^{product_family_features_tbl.}^.product_family_id
	)
	as virtrdf:OplProductFamilyHasProductFamilyFeaturesProductFamilyFeatures .

    opl:ProductFamilyFeature(product_family_features_tbl.product_family_feature_id)
      opl:isFeatureOf
      opl:Product(product_family_tbl.product_family_code)
      where (
        ^{product_family_tbl.}^.product_family_id = ^{product_family_features_tbl.}^.product_family_id
    )
    as virtrdf:OplProductFamilyFeaturesAreProductFamilyFeaturesProductFamily .

	
	opl:ProductFormatFeature(product_format_features_tbl.product_format_feature_id) 
	  a opl:ProductFormatFeature
	  as virtrdf:OplProductFormatFeature ;
	rdfs:label product_format_features_tbl.short_description
		as virtrdf:rdfsLabelProductFormatFeaturesShortDescription ;
	opl:Description product_format_features_tbl.short_description
		as virtrdf:OplProductFormatFeaturesShortDescription ;
	dc:description opl:lit_to_string(product_format_features_tbl.long_description)
		as virtrdf:OplProductFormatFeaturesLongDescription ;
	opl:isOfProductBenefit opl:ProductBenefit(product_format_features_tbl.product_format_feature_benefit_id)
		as virtrdf:ProductFormatFeaturesIsOfProductBenefit ;
	opl:isOfProductFeatureCategory opl:ProductFeatureCategory(product_format_features_tbl.product_format_feature_cat_id)
		as virtrdf:ProductFormatFeaturesIsOfProductFeatureCategory ;
	opl:isOfProductFormat opl:ProductFormat(product_format_features_tbl.product_format_code)
		as virtrdf:ProductFormatFeaturesIsOfProductFormat ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy dc: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy rdfs: 
		.

    opl:ProductFormat(product_format_with_code.product_format_code)
      opl:hasFeature
      opl:ProductFormatFeature(product_format_features_tbl.product_format_feature_id)
      where (
	    ^{product_format_with_code.}^.product_format_id = ^{product_format_features_tbl.}^.product_format_id
	)
	as virtrdf:OplProductFormatHasProductFormatFeaturesProductFormatFeatures .

    opl:ProductFormatFeature(product_format_features_tbl.product_format_feature_id)
      opl:isFeatureOf
      opl:ProductFormat(product_format_with_code.product_format_code)
      where (
        ^{product_format_with_code.}^.product_format_id = ^{product_format_features_tbl.}^.product_format_id
    )
    as virtrdf:OplProductFormatFeaturesAreProductFormatFeaturesProductFormat .


	  
	opl:ProductCategoryFeature(product_category_features_tbl.product_category_feature_id) 
	  a opl:ProductCategoryFeature
	  as virtrdf:OplProductCategoryFeature ;
	rdfs:label product_category_features_tbl.short_description
		as virtrdf:rdfsLabelProductCategoryFeaturesShortDescription ;
	opl:Description product_category_features_tbl.short_description
		as virtrdf:OplProductCategoryFeaturesShortDescription ;
	dc:description opl:lit_to_string(product_category_features_tbl.long_description)
		as virtrdf:OplProductCategoryFeaturesLongDescription ;
	opl:isOfProductBenefit opl:ProductBenefit(product_category_features_tbl.product_category_feature_benefit_id)
		as virtrdf:ProductCategoryFeaturesIsOfProductBenefit ;
	opl:isOfProductFeatureCategory opl:ProductFeatureCategory(product_category_features_tbl.product_category_feature_category_id)
		as virtrdf:ProductCategoryFeaturesIsOfProductFeatureCategory ;
	opl:isOfProductCategory opl:ProductCategory(product_category_features_tbl.product_cat_code)
		as virtrdf:ProductCategoryFeaturesIsOfProductCategory ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy dc: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy rdfs: 
		.
	  
    opl:ProductCategory(product_category_with_code.product_cat_code)
      opl:hasFeature
      opl:ProductCategoryFeature(product_category_features_tbl.product_category_feature_id)
      where (
	    ^{product_category_with_code.}^.product_cat_id = ^{product_category_features_tbl.}^.product_cat_id
	)
	as virtrdf:OplProductCategoryHasProductCategoryFeaturesProductCategoryFeatures .

    opl:ProductCategoryFeature(product_category_features_tbl.product_category_feature_id)
      opl:isFeatureOf
      opl:ProductCategory(product_category_with_code.product_cat_code)
      where (
        ^{product_category_with_code.}^.product_cat_id = ^{product_category_features_tbl.}^.product_cat_id
    )
    as virtrdf:OplProductCategoryFeaturesAreProductCategoryFeaturesProductCategory .

	
	opl:ProductReleaseFeature(product_release_features_tbl.product_release_feature_id) 
	  a opl:ProductReleaseFeature
	  as virtrdf:OplProductReleaseFeature ;
	rdfs:label product_release_features_tbl.short_description
		as virtrdf:rdfsLabelProductReleaseFeaturesShortDescription ;
	opl:Description product_release_features_tbl.short_description
		as virtrdf:OplProductReleaseFeaturesShortDescription ;
	dc:description opl:lit_to_string(product_release_features_tbl.long_description)
		as virtrdf:OplProductReleaseFeaturesLongDescription ;
	opl:isOfProductBenefit opl:ProductBenefit(product_release_features_tbl.product_release_feature_benefit_id)
		as virtrdf:ProductReleaseFeaturesIsOfProductBenefit ;
	opl:isOfProductFeatureCategory opl:ProductFeatureCategory(product_release_features_tbl.product_release_feature_cat_id)
		as virtrdf:ProductReleaseFeaturesIsOfProductFeatureCategory ;
	opl:isOfProduct opl:Product(product_release_features_tbl.product_id)
		as virtrdf:ProductReleaseFeaturesIsOfProduct ;
	opl:ProductReleaseId product_release_features_tbl.product_release_id
		as virtrdf:ProductReleaseFeaturesProductRelease ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy dc: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy rdfs: 
	.



  opl:ProcessorFamily(processor_family_tbl.processor_family_id)
    opl:hasProcessors
    opl:Processor(processors_tbl.processor_name, processors_tbl.processor_mode_id)
    where (
        ^{processor_family_tbl.}^.processor_family_id = ^{processors_tbl.}^.processor_family_id
    )
    as virtrdf:OplProcessorFamilyHasProcessors .


  opl:Processor(processors_tbl.processor_name, processors_tbl.processor_mode_id)
    opl:hasProductFamily
    opl:ProductFamily(ac1.product_family_code)
    where (
        ^{processors_tbl.}^.processor_name = ^{ac1.}^.processor_name
        and
        ^{processors_tbl.}^.processor_mode_id = ^{ac1.}^.processor_mode_id
    )
    as virtrdf:OplProcessorToProductFamily .
    
    

#
# Product Licensing and Shop stuff
# =========================================	


	  opl:ProductRelease(
	      product_release_tbl.product_id, 
	      product_release_tbl.product_release_id,
	      product_release_tbl.opsys_name, 
	      product_release_tbl.dbms_name
	      )
      opl:hasLicenseModel
      opl:LicenseModel(
        lm.product_release_id, 
        lm.product_id,
        lm.opsys_family_id,
        lm.dbms_family_id,
        lm.product_price_type_id
	  )
      where (
        ^{lm.}^.product_id = ^{product_release_tbl.}^.product_id and
        ^{lm.}^.product_release_id = ^{product_release_tbl.}^.product_release_id and
        ^{lm.}^.opsys_family_id = ^{product_release_tbl.}^.opsys_family_id and
        ^{lm.}^.dbms_family_id = ^{product_release_tbl.}^.dbms_family_id
    )
    as virtrdf:OplProductReleaseHasLicenseModel .

	  opl:ProductRelease(
	      product_release_tbl.product_id, 
	      product_release_tbl.product_release_id,
	      product_release_tbl.opsys_name, 
	      product_release_tbl.dbms_name
	      )
      opl:hasPriceSample
	  opl:lit_shop_sample (
	      product_release_tbl.product_release_id,
	      product_release_tbl.product_id, 
	      product_release_tbl.opsys_name, 
	      product_release_tbl.dbms_name
      	)
      as virtrdf:OplPriceSamples .
	  
	  
	opl:LicenseModel(
	    lm.product_release_id, 
        lm.product_id,
        lm.opsys_family_id,
        lm.dbms_family_id,
		lm.product_price_type_id) 
	a opl:LicenseModel
	as virtrdf:OplLicenseModel;
	a gr:Sell
	as virtrdf:OplLicenseModelAgrSell ;
	a gr:ActualProductOrServiceInstance
	as virtrdf:OplLicenseModelAgrProductOrServiceInstance ;
	rdfs:label opl:lit_license_model_type(
		lm.product_price_type_id
	) as virtrdf:OplLabelLicenseModel ;
	rdfs:description opl:lit_license_model_explain (
		lm.product_price_type_id
	) as virtrdf:OplLicenseModelExplain ;
	opl:ProductReleaseId
	  lm.product_release_id 
	  as virtrdf:lm_shop_price_product_release;
	opl:isOfFormat 
	  opl:ProductFormat(lm.product_format_code)
	  as virtrdf:lm_shop_price_product_format;
	opl:isOfCategory 
	  opl:ProductCategory(lm.product_cat_code)
	  as virtrdf:lm_shop_price_product_cat;
	opl:OpsysFamily 
	  opl:OpsysFamily(lm.opsys_family_id)
	  as virtrdf:lm_shop_price_opsys_family_oplweb;
	opl:OpsysType 
	  opl:OpsysType(lm.opsys_type_id)
	  as virtrdf:lm_shop_price_opsys_type;
	opl:DbmsFamily 
	  opl:DbmsFamily(lm.dbms_family_id)
	  as virtrdf:lm_shop_price_dbms_family	;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy gr: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: ;
      rdfs:isDefinedBy gr: 
		.


	opl:LicenseModel(
	    lm.product_release_id, 
        lm.product_id,
        lm.opsys_family_id,
        lm.dbms_family_id,
		lm.product_price_type_id) 
	opl:hasPriceUnitType
	opl:PriceUnitType(
	    lm2.product_release_id, 
        lm2.product_id,
        lm2.opsys_family_id,
        lm2.dbms_family_id,
		lm2.product_price_type_id,
		lm2.product_price_unit_type_id)
      where (
        ^{lm.}^.product_release_id = ^{lm2.}^.product_release_id AND 
        ^{lm.}^.product_id = ^{lm2.}^.product_id AND 
        ^{lm.}^.opsys_family_id = ^{lm2.}^.opsys_family_id AND 
        ^{lm.}^.opsys_type_id = ^{lm2.}^.opsys_type_id AND 
        ^{lm.}^.product_price_type_id = ^{lm2.}^.product_price_type_id AND
		^{lm2.}^.product_price_unit_type_id &lt;&gt; &#39;db_sessions&#39;
        and
        (
          ^{lm.}^.dbms_family_id = ^{lm2.}^.dbms_family_id 
    	  OR
          ^{lm2.}^.dbms_family_id = 15
        )
    )
    as virtrdf:OplLicenseModelPriceUnitTypes .
	


	opl:LicenseModel(
	    lm.product_release_id, 
        lm.product_id,
        lm.opsys_family_id,
        lm.dbms_family_id,
		lm.product_price_type_id) 
	gr:hasPriceSpecification
	opl:PriceUnitType(
	    lm2.product_release_id, 
        lm2.product_id,
        lm2.opsys_family_id,
        lm2.dbms_family_id,
		lm2.product_price_type_id,
		lm2.product_price_unit_type_id)
      where (
        ^{lm.}^.product_release_id = ^{lm2.}^.product_release_id AND 
        ^{lm.}^.product_id = ^{lm2.}^.product_id AND 
        ^{lm.}^.opsys_family_id = ^{lm2.}^.opsys_family_id AND 
        ^{lm.}^.opsys_type_id = ^{lm2.}^.opsys_type_id AND 
        ^{lm.}^.product_price_type_id = ^{lm2.}^.product_price_type_id AND
		^{lm2.}^.product_price_unit_type_id = &#39;db_sessions&#39;
        and
        (
          ^{lm.}^.dbms_family_id = ^{lm2.}^.dbms_family_id 
    	  OR
          ^{lm2.}^.dbms_family_id = 15
        )
    )
    as virtrdf:OplLicenseModelBasePriceUnitTypes .

	
	opl:Discount(
	    gd.product_release_id,
	    gd.opsys_type_id, 
	    gd.product_id, 
	    gd.opsys_family_id, 
	    gd.dbms_family_id, 
	    gd.product_price_type_id) 
	a opl:Discount
	as virtrdf:product_discount;
	rdfs:label gd.product_discount_description as virtrdf:OplLabelDiscount ;
	rdfs:description gd.product_discount_description as virtrdf:OplDiscountExplain ;
	opl:discount_description 
	  gd.product_discount_description 
	  as virtrdf:gd_discount_description;
	opl:discount_start
	  gd.discount_start
	  as virtrdf:gd_discount_start;
	opl:discount_end
	  gd.discount_end
	  as virtrdf:gd_discount_end;
	opl:ProductPriceType 
	  opl:PriceType(gd.product_price_type_id) 
	  as virtrdf:gd_shop_price_type;
	gr:hasUnitOfMeasurement 
	  opl:PriceType(gd.product_price_type_id) 
	  as virtrdf:gd_shop_price_type_grUnitOfMeasurement;
	opl:ProductReleaseId 
	  gd.product_release_id 
	  as virtrdf:gd_shop_price_product_release;
	opl:ProductFormat 
	  opl:ProductFormat(gd.product_format_code)
	  as virtrdf:gd_shop_price_product_format;
	opl:ProductCategory 
	  opl:ProductCategory(gd.product_cat_code)
	  as virtrdf:gd_shop_price_product_cat;
	opl:OpsysFamily 
	  opl:OpsysFamily(gd.opsys_family_id)
	  as virtrdf:gd_shop_price_opsys_family_oplweb;
	opl:OpsysType 
	  opl:OpsysType(gd.opsys_type_id)
	  as virtrdf:gd_shop_price_opsys_type;
	opl:DbmsFamily 
	  opl:DbmsFamily(gd.dbms_family_id)
	  as virtrdf:gd_shop_price_dbms_family;
	opl:discount_token
	  gd.discount_token
	  as virtrdf:gd_discount_token ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.

	  
	

	opl:PriceType(pt.product_price_type_id)
	  a opl:PriceType 
	  as virtrdf:shop_product_price_type;
	rdfs:label pt.product_price_type_description as virtrdf:OplLabelPriceType ;
	rdfs:description pt.product_price_type_description as virtrdf:OplPriceTypeExplain ;
	opl:PriceTypeDescription 
	  pt.product_price_type_description 
	  as virtrdf:shop_product_price_type_description;
	dc:description 
	  pt.product_price_type_long_description 
	  as virtrdf:shop_product_price_type_long_description ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy dc: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy dc: ;
      rdfs:isDefinedBy rdfs: 
		.
	
	opl:PriceUnitType(
		put.product_release_id, 
        put.product_id,
        put.opsys_family_id,
        put.dbms_family_id,
		put.product_price_type_id,
		put.product_price_unit_type_id)
	  a opl:PriceUnitType 
	  as virtrdf:shop_product_price_unit_type;
	rdfs:label put.product_price_unit_description as virtrdf:OplLabelproductpriceunitdescription ;
	rdfs:description put.product_price_unit_description as virtrdf:OplproductpriceunitdescriptionExplain ;
	gr:hasUnitOfMeasurement 
	  opl:PriceType(put.product_price_type_id) 
	  as virtrdf:put_shop_price_type_grUnitOfMeasurement;
	opl:unitValue 
	  put.unit_price 
	  as virtrdf:unit_type_unit_price;
	gr:hasValue 
	  put.unit_price 
	  as virtrdf:unit_type_unit_price_grHasValue;
	opl:graceUnits 
	  put.unit_grace 
	  as virtrdf:unit_type_unit_grace;
	opl:minUnits 
	  put.unit_low 
	  as virtrdf:unit_type_unit_low;
	opl:maxUnits 
	  put.unit_cap 
	  as virtrdf:unit_type_unit_cap;
	opl:unit_type_description 
	  put.product_price_unit_description 
	  as virtrdf:unit_type_description ;
      ore:isDescribedBy opl: ;
      ore:isDescribedBy rdfs: ;
      rdfs:isDefinedBy opl: ;
      rdfs:isDefinedBy rdfs: 
		.


    opl:PriceUnitType(
		put.product_release_id, 
        put.product_id,
        put.opsys_family_id,
        put.dbms_family_id,
		put.product_price_type_id,
		put.product_price_unit_type_id
	  )
      opl:hasIncrementalDiscount
      opl:PriceUnitIncrementalDiscount(
		put2.product_release_id, 
        put2.product_id,
        put2.opsys_family_id,
        put2.dbms_family_id,
		put2.product_price_type_id,
		put2.product_price_unit_type_id
	  ) 
      where (
		^{put.}^.product_release_id = ^{put2.}^.product_release_id and 
        ^{put.}^.product_id = ^{put2.}^.product_id and
        ^{put.}^.opsys_family_id = ^{put2.}^.opsys_family_id and
        ^{put.}^.dbms_family_id = ^{put2.}^.dbms_family_id and  
		^{put.}^.product_price_type_id = ^{put2.}^.product_price_type_id and  
		^{put.}^.product_price_unit_type_id = ^{put2.}^.product_price_unit_type_id
    )
    as virtrdf:OplLicenseModelUnitsIncrementalDiscounts .


	opl:PriceUnitIncrementalDiscount(
		put.product_release_id, 
        put.product_id,
        put.opsys_family_id,
        put.dbms_family_id,
		put.product_price_type_id,
		put.product_price_unit_type_id)
	  a opl:PriceUnitIncrementalDiscount 
	  as virtrdf:shop_product_price_unit_type_incremental_discount;
	rdfs:label put.product_price_unit_description as virtrdf:OplLabelproductpriceunitIncDisdescription ;
	rdfs:description put.product_price_unit_description as virtrdf:OplproductpriceunitIncDisdescriptionExplain ;
	opl:percentageOfBase 
	  put.unit_discount 
	  as virtrdf:unit_type_unit_discount;
	opl:triggerPoint 
	  put.quantity 
	  as virtrdf:unit_type_unit_discount_quantity
	.

	
      opl:LicenseModel(
        lm.product_release_id, 
        lm.product_id,
        lm.opsys_family_id,
        lm.dbms_family_id,
        lm.product_price_type_id
	  )
      opl:hasGeneralDiscounts
      opl:Discount(
	    gd.product_release_id,
	    gd.opsys_type_id, 
	    gd.product_id, 
	    gd.opsys_family_id, 
	    gd.dbms_family_id, 
	    gd.product_price_type_id
	  ) 
      where (
        ^{lm.}^.product_release_id = ^{gd.}^.product_release_id AND 
        ^{lm.}^.product_id = ^{gd.}^.product_id AND 
        ^{lm.}^.opsys_family_id = ^{gd.}^.opsys_family_id AND 
        ^{lm.}^.dbms_family_id = ^{gd.}^.dbms_family_id AND 
        ^{lm.}^.opsys_type_id = ^{gd.}^.opsys_type_id AND 
        ^{lm.}^.product_price_type_id = ^{gd.}^.product_price_type_id 
    )
    as virtrdf:OplLicenseModelGeneralDiscounts .

    
		
	} .
} .
;


DB.DBA.XML_SET_NS_DECL (&#39;OpenLink&#39;, &#39;http://www.openlinksw.com/schemas/oplweb#&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;OplProductCategory&#39;, &#39;http://data.openlinksw.com/oplweb/product_category/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;OplProductFamily&#39;, &#39;http://data.openlinksw.com/oplweb/product_family/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;OplProductFormat&#39;, &#39;http://data.openlinksw.com/oplweb/product_format/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;OplProduct&#39;, &#39;http://data.openlinksw.com/oplweb/product/&#39;, 2);
DB.DBA.XML_SET_NS_DECL (&#39;OplProductRelease&#39;, &#39;http://data.openlinksw.com/oplweb/product_release/&#39;, 2);

DB.DBA.XML_SET_NS_DECL (&#39;ore&#39;, &#39;http://www.openarchives.org/ore/terms/&#39;, 2);

DB.DBA.RDF_AUDIT_METADATA (1, &#39;*&#39;);


commit work;
-- Clear the &#39;cache&#39; for immediate effects
select hs_local_iri, exec (&#39;sparql clear graph &lt;&#39;||hs_local_iri||&#39;&gt;&#39;) 
  from sys_http_sponge
  where hs_local_iri like &#39;%oplweb%&#39;;

select id_to_iri(G), exec (&#39;sparql clear graph &lt;&#39;||id_to_iri(G)||&#39;&gt;&#39;)  
  from rdf_quad
  where id_to_iri(G) like &#39;%oplweb%&#39;;

sparql clear graph &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt;;
commit work;


sparql CONSTRUCT { &lt;http://data.openlinksw.com/oplweb/product_family/uda#this&gt; ?p ?o } 
  FROM &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; 
  WHERE { &lt;http://data.openlinksw.com/oplweb/product_family/uda#this&gt; ?p ?o }
;

sparql select * 
  FROM &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; 
  WHERE { &lt;http://data.openlinksw.com/oplweb/product_category/odbc#this&gt; ?p ?o }
  limit 100
;

sparql define get:soft &quot;soft&quot; select * 
  FROM &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; 
  WHERE { &lt;http://data.openlinksw.com/oplweb/product_category/odbc#this&gt; ?p ?o }
  limit 100
;

sparql CONSTRUCT { &lt;http://data.openlinksw.com/oplweb/product_category/jdbc#this&gt; ?p ?o } 
  FROM &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; 
  WHERE { &lt;http://data.openlinksw.com/oplweb/product_category/jdbc#this&gt; ?p ?o }
  limit 100
;

sparql CONSTRUCT { &lt;http://data.openlinksw.com/oplweb/product_format/mt#this&gt; ?p ?o } 
  FROM &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; 
  WHERE { &lt;http://data.openlinksw.com/oplweb/product_format/mt#this&gt; ?p ?o }
  limit 1
;


sparql select  ?p ?o  
  FROM &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; 
  WHERE { &lt;http://data.openlinksw.com/oplweb/product_family/uda#this&gt; ?p ?o }
  limit 1
;

sparql 
prefix opl: &lt;http://www.openlinksw.com/schemas/oplweb#&gt;
select  ?s ?o  
  FROM &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; 
  WHERE { ?s opl:hasProcessors ?o }
  limit 1
;

sparql 
prefix opl: &lt;http://www.openlinksw.com/schemas/oplweb#&gt;
select distinct ?o  
  FROM &lt;http://www.openlinksw.com/dataspace/organization/openlink/oplweb/&gt; 
  WHERE { &lt;http://data.openlinksw.com/oplweb/processor/i686_1#this&gt; opl:hasProductFamily ?o }
  limit 10
;

-- curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/price_unit_type/6.1_odbc-sqlserver-st_1_2_1_db_sessions#this&quot;
-- curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/price_unit_type/6.1_odbc-sqlserver-st_1_2_1_cpu#this&quot;

--select top 10 * from oplweb2.DBA.license_model_unit_type where product_release_id = &#39;6.1&#39; and product_id = &#39;odbc-sqlserver-st&#39; 
--  and opsys_family_id = 1 and dbms_family_id = 15 and product_price_type_id = 1 and product_price_unit_type_id = &#39;cpu&#39;;

-- curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/rdfbrowser/index.html?uri=http%3A//data.openlinksw.com/oplweb/component_archive/6.1-odbc-oracle-st-i686-generic-win-32-ora10-odbclt-clnt-only_mv.msi&quot;
-- curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/product_family/uda&quot;
-- curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/product_category/odbc&quot;
-- curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/dbms_family/MySQL&quot;
-- curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/product_release/odbc-oracle-mt_6.1_i686-generic-win-32_ora9&quot;
-- curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/license_model/6.1_odbc-sqlserver-st_1_2_1&quot;


</programlisting><programlisting>


curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/rdfbrowser/index.html?uri=http%3A//data.openlinksw.com/oplweb/component_archive/6.1-odbc-oracle-st-i686-generic-win-32-ora10-odbclt-clnt-only_mv.msi&quot;
curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/product_family/uda&quot;
curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/product_release/odbc-oracle-mt_6.1_i686-generic-win-32_ora9&quot;
curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/license_model/6.1_odbc-sqlserver-st_1_2_1&quot;

--
-- XXX: note , the below would work only if www.openlinksw.com has the GRAPH &lt;http://data.openlinksw.com/oplweb/&gt;
-- if experimenting on other box, then www.openlinksw.com should be replaced with [URIQA] DefaultHost INI value
--



DB.DBA.URLREWRITE_CREATE_REGEX_RULE (
    &#39;oplweb2_rule2&#39;,
    1,
    &#39;/oplweb(/[^#]*)&#39;,
    vector(&#39;path&#39;),
    1,
    &#39;/sparql?query=CONSTRUCT+{+%%3Chttp%%3A//data.openlinksw.com/oplweb%U%%23this%%3E+%%3Fp+%%3Fo+}+FROM+%%3Chttp%%3A//www.openlinksw.com/dataspace/organization/openlink/oplweb/%%3E+WHERE+{+%%3Chttp%%3A//data.openlinksw.com/oplweb%U%%23this%%3E+%%3Fp+%%3Fo+}&amp;format=%U&#39;,
    vector(&#39;path&#39;, &#39;path&#39;, &#39;*accept*&#39;),
    null,
    &#39;(text/rdf.n3)|(application/rdf.xml)&#39;,
    0,
    null
    );

DB.DBA.URLREWRITE_CREATE_REGEX_RULE (
    &#39;oplweb2_rule1&#39;,
    1,
    &#39;(/oplweb/[^#]*)&#39;,
    vector(&#39;path&#39;),
    1,
    &#39;/rdfbrowser/index.html?uri=http%%3A//data.openlinksw.com%U%&#39;,
--    &#39;/DAV/RDF/rdfqry.vsp?uri=http%%3A//data.openlinksw.com%U%%23this&#39;,
    vector(&#39;path&#39;),
    null,
    &#39;(text/html)|(\\*/\\*)&#39;,
    0,
    303
    );

DB.DBA.URLREWRITE_CREATE_REGEX_RULE (
    &#39;oplweb2_rule3&#39;,
    1,
    &#39;(/[^#]*)/\x24&#39;,
    vector(&#39;path&#39;),
    1,
    &#39;%s&#39;,
    vector(&#39;path&#39;),
    null,
    null,
    0,
    null
    );



create procedure DB.DBA.REDO_OPLWEB2_RDF_DET()
{
  declare colid int;
  colid := DAV_SEARCH_ID(&#39;/DAV/RDF/oplweb2/&#39;, &#39;C&#39;);
  if (colid &lt; 0)
    return;
  update WS.WS.SYS_DAV_COL set COL_DET=null where COL_ID = colid;
}
;

DB.DBA.REDO_OPLWEB2_RDF_DET();

drop procedure DB.DBA.REDO_OPLWEB2_RDF_DET;

DB.DBA.&quot;RDFData_MAKE_DET_COL&quot; (&#39;/DAV/RDF/oplweb2/&#39;, &#39;http://data.openlinksw.com/oplweb&#39;, NULL);
VHOST_REMOVE (lpath=&gt;&#39;/oplweb/data/rdf&#39;);
DB.DBA.VHOST_DEFINE (lpath=&gt;&#39;/oplweb/data/rdf&#39;, ppath=&gt;&#39;/DAV/RDF/oplweb2/All/&#39;, is_dav=&gt;1, vsp_user=&gt;&#39;dba&#39;);

-- procedure to convert path to DET resource name
create procedure DB.DBA.OPLWEB2_DET_REF (in par varchar, in fmt varchar, in val varchar)
{
  declare res, iri any;
  iri := &#39;http://data.openlinksw.com/oplweb&#39; || val;
  res := sprintf (&#39;iid (%d).rdf&#39;, iri_id_num (iri_to_id (iri)));
  return sprintf (fmt, res);
}
;

DB.DBA.URLREWRITE_CREATE_REGEX_RULE (&#39;oplweb2_rdf&#39;, 1,
    &#39;/oplweb/(.*)&#39;, vector(&#39;path&#39;), 1, 
    &#39;/oplweb/data/rdf/%U&#39;, vector(&#39;path&#39;),
    &#39;DB.DBA.OPLWEB2_DET_REF&#39;,
    &#39;application/rdf.xml&#39;,
    2,  
    303);


DB.DBA.URLREWRITE_CREATE_RULELIST (
    &#39;oplweb2_rule_list1&#39;,
    1,
    vector (
                &#39;oplweb2_rule1&#39;,
                &#39;oplweb2_rule2&#39;,
                &#39;oplweb2_rule3&#39;,
                &#39;oplweb2_rdf&#39;
          ));


VHOST_REMOVE (vhost=&gt;&#39;data.openlinksw.com:80&#39;, lpath=&gt;&#39;/oplweb&#39;);
DB.DBA.VHOST_DEFINE (vhost=&gt;&#39;data.openlinksw.com:80&#39;, lpath=&gt;&#39;/oplweb&#39;, ppath=&gt;&#39;/DAV/RDF/oplweb2/&#39;, 
  vsp_user=&gt;&#39;dba&#39;, is_dav=&gt;1, def_page=&gt;&#39;sfront.vspx&#39;, is_brws=&gt;0, opts=&gt;vector (&#39;url_rewrite&#39;, &#39;oplweb2_rule_list1&#39;));


/*

DB.DBA.VHOST_DEFINE (vhost=&gt;&#39;data.openlinksw.com:80&#39;, lhost=&gt;&#39;:80&#39;, lpath=&gt;&#39;/rdf_net&#39;, ppath=&gt;&#39;/rdf_net&#39;);
DB.DBA.VHOST_DEFINE (vhost=&gt;&#39;data.openlinksw.com:80&#39;, lhost=&gt;&#39;:80&#39;, lpath=&gt;&#39;/sparql/&#39;, 
  ppath =&gt; &#39;/!sparql/&#39;, is_dav =&gt; 1, vsp_user =&gt; &#39;dba&#39;, opts =&gt; vector(&#39;noinherit&#39;, 1));

VHOST_REMOVE (vhost=&gt;&#39;data.openlinksw.com&#39;, lpath=&gt;&#39;/proxy&#39;);
DB.DBA.VHOST_DEFINE (vhost=&gt;&#39;data.openlinksw.com&#39;, lhost=&gt;&#39;:80&#39;, lpath=&gt;&#39;/proxy&#39;, 
  ppath=&gt;&#39;/SOAP/Http/ext_http_proxy&#39;, soap_user=&gt;&#39;PROXY&#39;);

DB.DBA.VHOST_DEFINE (vhost=&gt;&#39;data.openlinksw.com:80&#39;, lhost=&gt;&#39;:80&#39;, lpath=&gt;&#39;/xml_a&#39;, 
  ppath=&gt;&#39;/SOAP/&#39;,soap_user=&gt;&#39;XML_A&#39;);
DB.DBA.VHOST_DEFINE (vhost=&gt;&#39;data.openlinksw.com:80&#39;, lhost=&gt;&#39;:80&#39;, lpath=&gt;&#39;/XMLA&#39;, 
  ppath=&gt;&#39;/SOAP/&#39;, soap_user=&gt;&#39;XMLA&#39;, soap_opts =&gt; vector (&#39;ServiceName&#39;, &#39;XMLAnalysis&#39;, &#39;elementFormDefault&#39;, &#39;qualified&#39;))

GRANT EXECUTE ON DB.DBA.RDF_SPONGE_UP TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
GRANT EXECUTE ON DB.DBA.TTLP_EV_NEW_GRAPH TO &quot;SPARQL&quot;, &quot;SPARQL_UPDATE&quot;;
grant SPARQL_UPDATE to &quot;SPARQL&quot;;

curl -H &quot;Accept: application/rdf+xml&quot; &quot;http://data.openlinksw.com/oplweb/product_family/uda#this&quot;

select hs_local_iri, exec (&#39;sparql clear graph &lt;&#39;||hs_local_iri||&#39;&gt;&#39;) from sys_http_sponge;

*/


</programlisting><bridgehead class="http://www.w3.org/1999/xhtml:h1"> OWL based Ontology</bridgehead>
<programlisting>--sparql construct { ?x ?y ?z } from --&lt;http://www.openlinksw.com/dataspace/organization/openlink#this&gt; 
--	where { ?x ?y ?z }
	
DB.DBA.RDF_LOAD_RDFXML_MT (
&#39;&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;rdf:RDF
    xmlns=&quot;http://www.openlinksw.com/dataspace/organization/openlink/oplweb#&quot;
    xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema#&quot;
    xmlns:rdfs=&quot;http://www.w3.org/2000/01/rdf-schema#&quot;
    xmlns:owl=&quot;http://www.w3.org/2002/07/owl#&quot;
    xmlns:foaf=&quot;http://xmlns.com/foaf/0.1/&quot;
    xmlns:virtrdf=&quot;http://www.openlinksw.com/schemas/virtrdf#&quot;
    xml:base=&quot;http://www.openlinksw.com/schemas/oplweb#&quot;&gt;
  &lt;owl:Ontology rdf:about=&quot;http://www.openlinksw.com/schemas/oplweb#&quot;&gt;
        &lt;rdfs:label&gt;ProductPortfolio&lt;/rdfs:label&gt;
        &lt;rdfs:comment&gt;OpenLink Product Portfolio&lt;/rdfs:comment&gt;
        &lt;virtrdf:catName&gt;oplweb&lt;/virtrdf:catName&gt;
        &lt;virtrdf:version&gt;1.00&lt;/virtrdf:version&gt;
  &lt;/owl:Ontology&gt;
  
	&lt;!-- Family / Category / Format --&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ProductFamily&quot;&gt;
		&lt;rdfs:label&gt;Product Family&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Family
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;ProductCategory&quot;&gt;
		&lt;rdfs:label&gt;Product Category&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Category
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;#ProductFamily&quot;/&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;ProductFormat&quot;&gt;
		&lt;rdfs:label&gt;Product Format&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Format
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;ProductFormatCategory&quot;&gt;
		&lt;rdfs:label&gt;Product Format Category&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Format Category
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductFamilyDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:label&gt;Product Family Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
  
	&lt;rdf:Property rdf:ID=&quot;ProductFamilyLongDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:label&gt;Product Family Long Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductFamilyCode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:label&gt;Product Family Long Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductFormatDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:label&gt;Product Format Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
  
	&lt;rdf:Property rdf:ID=&quot;ProductFormatLongDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:label&gt;Product Format Long Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductFormatCode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatCategory&quot;/&gt;
    &lt;rdfs:label&gt;Product Format Long Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductCategoryDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:label&gt;Product Category Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
  
	&lt;rdf:Property rdf:ID=&quot;ProductCategoryLongDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:label&gt;Product Category Long Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductCategoryCode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatCategory&quot;/&gt;
    &lt;rdfs:label&gt;Product Category Long Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;hasProduct&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#Product&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatCategory&quot;/&gt;
    &lt;rdfs:label&gt;Product&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;hasCategory&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Product&quot;/&gt;
    &lt;rdfs:label&gt;Product&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;hasFormat&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:label&gt;Product&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	
	&lt;!-- Vendor --&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;VendorCategoryFamily&quot;&gt;
		&lt;rdfs:label&gt;vendor_category_family&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			vendor_category_family
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;VendorCategory&quot;&gt;
		&lt;rdfs:label&gt;vendor_category&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			vendor_category
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;VendorCategoryFamily&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;Vendors&quot;&gt;
		&lt;rdfs:label&gt;vendors&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			vendors
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;VendorCategory&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdf:Property rdf:ID=&quot;VendorName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Vendors&quot;/&gt;
    &lt;rdfs:label&gt;vendor name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;VendorCategoryFamilyDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#VendorCategoryFamily&quot;/&gt;
    &lt;rdfs:label&gt;vendor_category_family_description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;VendorCategoryDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#VendorCategory&quot;/&gt;
    &lt;rdfs:label&gt;vendor_category_description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;isOfVendorCategory&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#VendorCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Vendors&quot;/&gt;
    &lt;rdfs:label&gt;vendor_category_description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;!-- Opsys / DBMS --&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;OpsysFamily&quot;&gt;
		&lt;rdfs:label&gt;Opsys Family&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Opsys Family
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;DbmsFamily&quot;&gt;
		&lt;rdfs:label&gt;Dbms Family&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Dbms Family
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
		
	&lt;rdfs:Class rdf:ID=&quot;DbmsEngine&quot;&gt;
		&lt;rdfs:label&gt;Dbms Engine&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Dbms Engine
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;DbmsFamily&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;OpsysType&quot;&gt;
		&lt;rdfs:label&gt;Opsys Type&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Opsys Type
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ProcessorMode&quot;&gt;
		&lt;rdfs:label&gt;Processor Mode&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Processor Mode
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;Processor&quot;&gt;
		&lt;rdfs:label&gt;Processor&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Processor
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;ProcessorFamily&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ProcessorFamily&quot;&gt;
		&lt;rdfs:label&gt;Processor Family&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Processor Family
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;Opsys&quot;&gt;
		&lt;rdfs:label&gt;Dbms Engine&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			opsys
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;OpsysFamily&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;OpsysType&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysFamilyName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysFamily&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Family Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;OpsysFamilyRating&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysFamily&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Family Rating&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysFamilyLicenseCode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysFamily&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Family License Code&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysFamilyVendor&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#Vendors&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysFamily&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Family Vendor&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;DbmsFamilyName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsFamily&quot;/&gt;
    &lt;rdfs:label&gt;DBMS Family Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;DbmsFamilyVendor&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#Vendors&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsFamily&quot;/&gt;
    &lt;rdfs:label&gt;DBMS Family Vendor&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;DbmsName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:label&gt;DBMS Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;DbmsVersion&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:label&gt;DBMS Version&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;DbmsEngineRating&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:label&gt;DBMS Engine Rating&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;DbmsEngineOldArchiveCode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:label&gt;DBMS Engine old Archive Code&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;DbmsUpwardCompatible&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:label&gt;DBMS Upward Compatible&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;DbmsDownwardCompatible&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:label&gt;DBMS Downward Compatible&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysTypeDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysType&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Type Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;OpsysTypeShortDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysType&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Type Short Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;OpsysName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysVersion&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Version&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysUpwardCompatible&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Compatible&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysDownwardCompatible&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Downward Compatible&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysLicenseCode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:label&gt;Opsys License Code&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysCommercialName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Commercial Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysProcessor&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#Processor&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Processor&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;OpsysEmulation&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ProcessorMode&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:label&gt;Opsys Emulation Mode&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProcessorModeName&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProcessorMode&quot;/&gt;
    &lt;rdfs:label&gt;Processor Mode Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProcessorName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Processor&quot;/&gt;
    &lt;rdfs:label&gt;Processor Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProcessorProcessorMode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ProcessorMode&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Processor&quot;/&gt;
    &lt;rdfs:label&gt;Processor Mode&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProcessorDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Processor&quot;/&gt;
    &lt;rdfs:label&gt;Processor Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProcessorFamilyName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProcessorFamily&quot;/&gt;
    &lt;rdfs:label&gt;Processor Family Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProcessorFamilyDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProcessorFamily&quot;/&gt;
    &lt;rdfs:label&gt;Processor Family Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProcessorFamilyVendor&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#Vendors&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProcessorFamily&quot;/&gt;
    &lt;rdfs:label&gt;Processor Family Vendor&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	
	&lt;!-- Product / Product Release --&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;Product&quot;&gt;
		&lt;rdfs:label&gt;Product&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;#ProductCategory&quot;/&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;ProductRelease&quot;&gt;
		&lt;rdfs:label&gt;Product Release&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Release
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#Product&quot;/&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdf:Property rdf:ID=&quot;ProductId&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Product&quot;/&gt;
    &lt;rdfs:label&gt;Product ID&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;isOfCategory&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Product&quot;/&gt;
    &lt;rdfs:label&gt;Product Category&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;isOfFormat&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Product&quot;/&gt;
    &lt;rdfs:label&gt;Product Category&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;ProductDescription&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Product&quot;/&gt;
    &lt;rdfs:label&gt;Product Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductLongDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Product&quot;/&gt;
    &lt;rdfs:label&gt;Product Long Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;ProductReleaseId&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:label&gt;Product Release ID&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductReleaseOpsys&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:label&gt;Product Release Opsys&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductReleaseDbms&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:label&gt;Product Release DBMS&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductReleaseUpwardCompatible&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:label&gt;Product Release upward compatible&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;rdf:Property rdf:ID=&quot;ProductReleaseDownwardCompatible&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:label&gt;Product Release downward compatible&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;ProductReleaseSupported&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:label&gt;Product Release Supported&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;!-- Components --&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;Component&quot;&gt;
		&lt;rdfs:label&gt;Components&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Components
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;ComponentMode&quot;&gt;
		&lt;rdfs:label&gt;Component Mode&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Component
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;ComponentType&quot;&gt;
		&lt;rdfs:label&gt;Component&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Component Type
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;ComponentCategory&quot;&gt;
		&lt;rdfs:label&gt;Component Category&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Component
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdf:Property rdf:ID=&quot;ComponentModeDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentMode&quot;/&gt;
    &lt;rdfs:label&gt;Component Mode Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;ComponentModeShortDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentMode&quot;/&gt;
    &lt;rdfs:label&gt;Component Mode Short Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;ComponentTypeDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentType&quot;/&gt;
    &lt;rdfs:label&gt;Component Type Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;ComponentTypeShortDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentType&quot;/&gt;
    &lt;rdfs:label&gt;Component Type Short Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;ComponentCategoryDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentCategory&quot;/&gt;
    &lt;rdfs:label&gt;Component Category Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;rdf:Property rdf:ID=&quot;ComponentCategoryLongDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentCategory&quot;/&gt;
    &lt;rdfs:label&gt;Component Category Long Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ComponentCategoryShortDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentCategory&quot;/&gt;
    &lt;rdfs:label&gt;Component Category Short Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ComponentName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ComponentCvsid&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components CVSID&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
  
  &lt;rdf:Property rdf:ID=&quot;ComponentBuildDate&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Build Date&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
  
  &lt;rdf:Property rdf:ID=&quot;Notes&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Notes&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
  
  &lt;rdf:Property rdf:ID=&quot;BuildComments&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Build Comments&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
  
  &lt;rdf:Property rdf:ID=&quot;Filesize&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
	&lt;rdf:Property rdf:ID=&quot;ComponentComponentCategory&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ComponentCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Component Category&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ComponentComponentType&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ComponentType&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Component Type&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ComponentComponentMode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ComponentMode&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Component Mode&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ComponentOpsys&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components Opsys&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ComponentDbmsEngine&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Component&quot;/&gt;
    &lt;rdfs:label&gt;Components DBMS&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

	&lt;!-- Component Archives --&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ComponentArchive&quot;&gt;
		&lt;rdfs:label&gt;Component Archive&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Component Archives
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#Component&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ComponentArchiveType&quot;&gt;
		&lt;rdfs:label&gt;Component Archive Type&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Component Archives Type
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveTypeName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchiveType&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive Type Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    	
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveTypeShortName&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchiveType&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive Type Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveTypeExtension&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchiveType&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive Type Extension&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
	&lt;rdf:Property rdf:ID=&quot;ComponentArchiveComponentArchiveType&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#ComponentArchiveType&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive Component Archive Type&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveName&quot;&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveAssemblyDate&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive Assembly Date&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveFileUri&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive File URI&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveLicenseCode&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive License Code&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveResName&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive DAV Resource Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveResFullPath&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive DAV Full Path&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
    
  &lt;rdf:Property rdf:ID=&quot;ComponentArchiveResFileSize&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:label&gt;Component Archive File Size in DAV&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;!-- Download locations --&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;DownloadLocation&quot;&gt;
		&lt;rdfs:label&gt;Download Location&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Download Location
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#DownloadPartner&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#DownloadProtocol&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;DownloadProtocol&quot;&gt;
		&lt;rdfs:label&gt;Download Protocol&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Download Protocol
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;DownloadPartner&quot;&gt;
		&lt;rdfs:label&gt;Download Partner&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Download Partner
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
		
  &lt;rdf:Property rdf:ID=&quot;ProtocolName&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadProtocol&quot;/&gt;
    &lt;rdfs:label&gt;Protocol Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
  &lt;rdf:Property rdf:ID=&quot;ProtocolDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadProtocol&quot;/&gt;
    &lt;rdfs:label&gt;Protocol Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
  &lt;rdf:Property rdf:ID=&quot;ProtocolActive&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadProtocol&quot;/&gt;
    &lt;rdfs:label&gt;Protocol Active&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
  &lt;rdf:Property rdf:ID=&quot;PartnerName&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadPartner&quot;/&gt;
    &lt;rdfs:label&gt;Download Partner Partner Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
  &lt;rdf:Property rdf:ID=&quot;HostName&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadPartner&quot;/&gt;
    &lt;rdfs:label&gt;Download Partner Hostname&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
  &lt;rdf:Property rdf:ID=&quot;DomainName&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadPartner&quot;/&gt;
    &lt;rdfs:label&gt;Download Partner Domain Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
  &lt;rdf:Property rdf:ID=&quot;PortNumber&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadPartner&quot;/&gt;
    &lt;rdfs:label&gt;Download Partner Port Number&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
		
  &lt;rdf:Property rdf:ID=&quot;Uri&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadLocation&quot;/&gt;
    &lt;rdfs:label&gt;Download Location URI&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
  &lt;rdf:Property rdf:ID=&quot;UriOld&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadLocation&quot;/&gt;
    &lt;rdfs:label&gt;Download Location URI Old&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;
	
	&lt;!-- Features and Benefits --&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ProductBenefit&quot;&gt;
		&lt;rdfs:label&gt;Product Benefit&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Benefit
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductBenefitCategory&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ProductBenefitCategory&quot;&gt;
		&lt;rdfs:label&gt;Product Benefit&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Benefit
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ProductFeatureCategory&quot;&gt;
		&lt;rdfs:label&gt;Product Feature Category&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Feature Category
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;
  	
	&lt;rdfs:Class rdf:ID=&quot;ProductFeature&quot;&gt;
		&lt;rdfs:label&gt;Product Features&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Features
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductFeatureCategory&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#Product&quot;/&gt;
	&lt;/rdfs:Class&gt;
    
	&lt;rdfs:Class rdf:ID=&quot;ProductFamilyFeature&quot;&gt;
		&lt;rdfs:label&gt;Product Family Features&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Family Features
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductFeatureCategory&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductFamily&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ProductFormatFeature&quot;&gt;
		&lt;rdfs:label&gt;Product Format Features&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Format Features
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductFeatureCategory&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductFormat&quot;/&gt;
	&lt;/rdfs:Class&gt;
	
	&lt;rdfs:Class rdf:ID=&quot;ProductCategoryFeature&quot;&gt;
		&lt;rdfs:label&gt;Product Category Features&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Category Features
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductFeatureCategory&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductCategory&quot;/&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;ProductReleaseFeature&quot;&gt;
		&lt;rdfs:label&gt;Product Benefit&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Product Benefit
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductFeatureCategory&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductRelease&quot;/&gt;
	&lt;/rdfs:Class&gt;

  &lt;rdf:Property rdf:ID=&quot;ProductBenefitsCategoryDescription&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductBenefitsCategory&quot;/&gt;
    &lt;rdfs:label&gt;product Benefits Category&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;Description&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductBenefitCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFeatureCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamilyFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategoryFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductReleaseFeature&quot;/&gt;
    &lt;rdfs:label&gt;Product Benefits Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;Details&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamilyFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategoryFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductReleaseFeature&quot;/&gt;
    &lt;rdfs:label&gt;Product Benefits Description Details&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ProductBenefitsAcronym&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:label&gt;Product Benefits Acronym&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;ProductBenefitsExplanation&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:label&gt;Product Benefits Explanation&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;DemoUrl&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategoryFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamilyFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductReleaseFeature&quot;/&gt;
    &lt;rdfs:label&gt;The Features Demo URL&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;HypesPerSecond&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#integer&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategoryFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamilyFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductreleaseFeature&quot;/&gt;
    &lt;rdfs:label&gt;The Features Number of Hypes per second&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;Implemented&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategoryFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamilyFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductReleaseFeature&quot;/&gt;
    &lt;rdfs:label&gt;The Features Short Description&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

&lt;!-- shop / pricing stuff --&gt;

	&lt;rdfs:Class rdf:ID=&quot;LicenseType&quot;&gt;
		&lt;rdfs:label&gt;License Type&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			License Type
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;UnitType&quot;&gt;
		&lt;rdfs:label&gt;Unit Type&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Unit Type
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;GeneralDiscount&quot;&gt;
		&lt;rdfs:label&gt;General Discount&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			General Discount
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;IncrementalDiscount&quot;&gt;
		&lt;rdfs:label&gt;Incremental Discount&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			Incremental Discount
		&lt;/rdfs:comment&gt;
	&lt;/rdfs:Class&gt;

	&lt;rdfs:Class rdf:ID=&quot;License&quot;&gt;
		&lt;rdfs:label&gt;License&lt;/rdfs:label&gt;
    &lt;rdfs:comment rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;&gt;
			License
		&lt;/rdfs:comment&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#LicenseType&quot;/&gt;
    &lt;rdfs:subClassOf rdf:resource=&quot;#ProductRelease&quot;/&gt;
	&lt;/rdfs:Class&gt;

  &lt;rdf:Property rdf:ID=&quot;BaseCostUnit&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#UnitType&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#License&quot;/&gt;
    &lt;rdfs:label&gt;Base Unit Cost&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;PriceUnit&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#UnitType&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#License&quot;/&gt;
    &lt;rdfs:label&gt;Price Unit Cost&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;hasDiscount&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#IncrementalDiscount&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#UnitType&quot;/&gt;
    &lt;rdfs:label&gt;Base Unit Cost&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;hasGeneralDiscount&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;#GeneralDiscount&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#License&quot;/&gt;
    &lt;rdfs:label&gt;General Discount&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;unitValue&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#UnitType&quot;/&gt;
    &lt;rdfs:label&gt;Unit Value&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;graceUnit&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#UnitType&quot;/&gt;
    &lt;rdfs:label&gt;Grace Unit&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;minUnits&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#UnitType&quot;/&gt;
    &lt;rdfs:label&gt;Minimum Units&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;maxUnits&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#UnitType&quot;/&gt;
    &lt;rdfs:label&gt;Maximum Units&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;codeWord&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#GeneralDiscount&quot;/&gt;
    &lt;rdfs:label&gt;Code Word needed to activate this discount&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;startDate&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#GeneralDiscount&quot;/&gt;
    &lt;rdfs:label&gt;Discount Start Date&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;endDate&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#GeneralDiscount&quot;/&gt;
    &lt;rdfs:label&gt;Discount End Date&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;percentageOfCost&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#GeneralDiscount&quot;/&gt;
    &lt;rdfs:label&gt;Percentage of cost attributing as discount&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;triggerPoint&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#IncrementalDiscount&quot;/&gt;
    &lt;rdfs:label&gt;Discount Trigger Point&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;percentageOfBase&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#IncrementalDiscount&quot;/&gt;
    &lt;rdfs:label&gt;Percentage of base cost attributing as discount&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

&lt;!-- common properties --&gt;

  &lt;rdf:Property rdf:ID=&quot;label&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#label&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#VendorCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Vendor&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsEngine&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysType&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Processor&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProcessorFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Opsys&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Product&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentMode&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentType&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchive&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ComponentArchiveType&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DownloadLocation&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductBenefit&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductBenefitCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFeatureCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamilyFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategoryFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductReleaseFeature&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#LicenseModel&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#Discount&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#PriceType&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#PriceUnitType&quot;/&gt;
    &lt;rdfs:label&gt;Label&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;name&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/name&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:label&gt;Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;logo&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/logo&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:label&gt;logo&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;homepage&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/homepage&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProcessorFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#OpsysFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#DbmsFamily&quot;/&gt;
    &lt;rdfs:label&gt;homepage&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;maker&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;http://www.w3.org/2001/XMLSchema#string&quot;/&gt;
    &lt;rdfs:subPropertyOf rdf:resource=&quot;http://xmlns.com/foaf/0.1/maker&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:label&gt;Maker&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

  &lt;rdf:Property rdf:ID=&quot;sameAs&quot;&gt;
    &lt;rdfs:range rdf:resource=&quot;owl#sameAs&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductCategory&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormat&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFamily&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductRelease&quot;/&gt;
    &lt;rdfs:domain rdf:resource=&quot;#ProductFormatCategory&quot;/&gt;
    &lt;rdfs:label&gt;Name&lt;/rdfs:label&gt;
  &lt;/rdf:Property&gt;

&lt;/rdf:RDF&gt;

&#39;, 
&#39;http://www.openlinksw.com/schemas/oplweb#&#39;, 
&#39;http://www.openlinksw.com/schemas/oplweb#&#39;)		
--&#39;http://www.openlinksw.com/dataspace/organization/openlink/ProductPortfolioOntology/1.0/&#39;)
;

rdfs_rule_set (&#39;oplweb2_owlset&#39;, &#39;http://www.openlinksw.com/schemas/oplweb#&#39;, 1);

DB.DBA.XML_SET_NS_DECL (&#39;opl&#39;, &#39;http://www.openlinksw.com/schemas/oplweb#&#39;, 2);	

</programlisting></section></docbook>